// Copyright 2019 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "google.golang.org/grpc/profiling/proto/service";

message SetEnabledRequest {
	bool enabled = 1;
}

message SetEnabledResponse {
	bool success = 1;
}

message TimerProto {
	string timerTag = 1;
	int64 beginSec = 2;
	int32 beginNsec = 3;
	int64 endSec = 4;
	int32 endNsec = 5;
	int64 goId = 6;
}

message GetStreamStatsRequest {
}

message StatProto {
	string statTag = 1;
	repeated TimerProto timerProtos = 2;
	bytes metadata = 3;
}

service Profiling {
	rpc SetEnabled (SetEnabledRequest) returns (SetEnabledResponse);
	rpc GetStreamStats (GetStreamStatsRequest) returns (stream StatProto);
}
