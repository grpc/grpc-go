name: Testing

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - 'version.go'
  schedule:
    - cron: 0 0 * * * # daily at 00:00

env:
  GO111MODULE: on

jobs:
  vet-proto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - uses: actions/checkout@v2

      - name: vet
        run: ./vet.sh -install && ./vet.sh

  tests:
    env:
      VET_SKIP_PROTO: 1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - type: vet
            goversion: 1.14
          - type: race
            goversion: 1.14
          - type: 386
            goversion: 1.14
          - type: retry
            goversion: 1.14
          - type: extras
            goversion: 1.14
          - type: tests
            goversion: 1.13
          - type: tests
            goversion: 1.12
          - type: tests
            goversion: 1.11  # Keep until interop tests no longer require Go1.11

    steps:
      - name: setup GOARCH=386
        if: ${{ matrix.type == '386' }}
        run: echo "GOARCH=386" >> $GITHUB_ENV
      - name: setup RETRY
        if: ${{ matrix.type == 'retry' }}
        run: echo "GRPC_GO_RETRY=on" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}

      - uses: actions/checkout@v2

      - name: vet
        if: ${{ matrix.type == 'vet' }}
        run: ./vet.sh -install && ./vet.sh

      - name: Run tests
        if: ${{ matrix.type != 'extras' && matrix.type != 'race' }}
        run: echo $GOARCH; make test

      - name: Run test race
        if: ${{ matrix.TYPE == 'race' }}
        run: make testrace

      - name: Run extras tests
        if: ${{ matrix.TYPE == 'extras' }}
        run: |
          examples/examples_test.sh
          security/advancedtls/examples/examples_test.sh
          interop/interop_test.sh
          make testsubmodule
