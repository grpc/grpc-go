=== RUN   Test
=== RUN   Test/HandleListenerUpdate_ErrorUpdate
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00018f860] Created xds.GRPCServer  (t=+47.854µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00018f860] xDS credentials in use: true  (t=+103.187µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00018f860] Serve() passed a net.Listener on 127.0.0.1:61948  (t=+1.488945ms)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00018f860] Created an xdsClient  (t=+1.521889ms)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc00041a0f0] Watch started on resource name /path/to/resource/127.0.0.1:61948/127.0.0.1:61948  (t=+1.5605ms)
    tlogger.go:99: listener_wrapper.go:392 [xds] [xds-server-listener 0xc00041a0f0] Received error for resource "/path/to/resource/127.0.0.1:61948/127.0.0.1:61948": LDS error  (t=+1.595781ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc00041a0f0] Watch cancelled on resource name /path/to/resource/127.0.0.1:61948/127.0.0.1:61948  (t=+33.008837ms)
=== RUN   Test/HandleListenerUpdate_NoXDSCreds
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e050] Created xds.GRPCServer  (t=+13.273µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e050] xDS credentials in use: false  (t=+43.296µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e050] Serve() passed a net.Listener on 127.0.0.1:61949  (t=+593.248µs)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00052e050] Created an xdsClient  (t=+623.224µs)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc0002462d0] Watch started on resource name /path/to/resource/127.0.0.1:61949/127.0.0.1:61949  (t=+646.139µs)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc0002462d0] Received update for resource "/path/to/resource/127.0.0.1:61949/127.0.0.1:61949": {RouteConfigName:routeconfig InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc0003da5d0 Raw:<nil>}  (t=+805.83µs)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc0002462d0] Listener "127.0.0.1:61949" entering mode: "serving" due to error: <nil>  (t=+826.979µs)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc0002462d0] Watch cancelled on resource name /path/to/resource/127.0.0.1:61949/127.0.0.1:61949  (t=+24.204323ms)
=== RUN   Test/NewServer
=== RUN   Test/NewServer/without_xds_creds
=== CONT  Test/NewServer
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00062c050] Created xds.GRPCServer  (t=+38.879µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00062c050] xDS credentials in use: false  (t=+58.813µs)
=== RUN   Test/NewServer/with_xds_creds
=== CONT  Test/NewServer
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00062c0a0] Created xds.GRPCServer  (t=+85.055µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00062c0a0] xDS credentials in use: true  (t=+94.465µs)
=== RUN   Test/RegisterService
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00062c0f0] Created xds.GRPCServer  (t=+5.335µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00062c0f0] xDS credentials in use: false  (t=+13.238µs)
=== RUN   Test/ServeBootstrapConfigInvalid
=== RUN   Test/ServeBootstrapConfigInvalid/bootstrap_config_is_missing
=== CONT  Test/ServeBootstrapConfigInvalid
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e0f0] Created xds.GRPCServer  (t=+47.295µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e0f0] xDS credentials in use: true  (t=+72.055µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e0f0] Serve() passed a net.Listener on 127.0.0.1:61951  (t=+744.601µs)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00052e0f0] Created an xdsClient  (t=+770.578µs)
=== RUN   Test/ServeBootstrapConfigInvalid/certificate_provider_config_is_missing
=== CONT  Test/ServeBootstrapConfigInvalid
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e1e0] Created xds.GRPCServer  (t=+810.806µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e1e0] xDS credentials in use: true  (t=+819.777µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e1e0] Serve() passed a net.Listener on 127.0.0.1:61952  (t=+1.203368ms)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00052e1e0] Created an xdsClient  (t=+1.217411ms)
=== RUN   Test/ServeBootstrapConfigInvalid/server_listener_resource_name_template_is_missing
=== CONT  Test/ServeBootstrapConfigInvalid
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e320] Created xds.GRPCServer  (t=+1.24999ms)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e320] xDS credentials in use: true  (t=+1.259781ms)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e320] Serve() passed a net.Listener on 127.0.0.1:61953  (t=+1.621137ms)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00052e320] Created an xdsClient  (t=+1.636298ms)
=== RUN   Test/ServeBootstrapFailure
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e460] Created xds.GRPCServer  (t=+6.778µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e460] xDS credentials in use: false  (t=+15.866µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e460] Serve() passed a net.Listener on 127.0.0.1:61954  (t=+420.789µs)
=== RUN   Test/ServeNewClientFailure
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e5a0] Created xds.GRPCServer  (t=+7.015µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e5a0] xDS credentials in use: false  (t=+17.596µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e5a0] Serve() passed a net.Listener on 127.0.0.1:61955  (t=+382.597µs)
=== RUN   Test/ServeSuccess
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00052e000] Created xds.GRPCServer  (t=+12.642µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00052e000] xDS credentials in use: false  (t=+45.794µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00052e000] Serve() passed a net.Listener on 127.0.0.1:61956  (t=+451.2µs)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00052e000] Created an xdsClient  (t=+473.483µs)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000246000] Watch started on resource name /path/to/resource/127.0.0.1:61956/127.0.0.1:61956  (t=+488.732µs)
    tlogger.go:99: listener_wrapper.go:392 [xds] [xds-server-listener 0xc000246000] Received error for resource "/path/to/resource/127.0.0.1:61956/127.0.0.1:61956": LDS resource not found  (t=+539.057µs)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000246000] Listener "127.0.0.1:61956" entering mode: "not-serving" due to error: LDS resource not found  (t=+558.692µs)
    server_test.go:384: server mode change callback invoked for listener "127.0.0.1:61956" with mode "not-serving" and error LDS resource not found
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000246000] Received update for resource "/path/to/resource/127.0.0.1:61956/127.0.0.1:61956": {RouteConfigName:routeconfig InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc00061e180 Raw:<nil>}  (t=+10.630225ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000246000] Listener "127.0.0.1:61956" entering mode: "serving" due to error: <nil>  (t=+10.648521ms)
    server_test.go:384: server mode change callback invoked for listener "127.0.0.1:61956" with mode "serving" and error <nil>
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000246000] Received update for resource "/path/to/resource/127.0.0.1:61956/127.0.0.1:61956": {RouteConfigName:routeconfig InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc00012c030 Raw:<nil>}  (t=+10.697552ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000246000] Listener "127.0.0.1:61956" entering mode: "not-serving" due to error: address (10.20.30.40:666) in Listener update does not match listening address: (127.0.0.1:61956)  (t=+10.714543ms)
    server_test.go:384: server mode change callback invoked for listener "127.0.0.1:61956" with mode "not-serving" and error address (10.20.30.40:666) in Listener update does not match listening address: (127.0.0.1:61956)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000246000] Watch cancelled on resource name /path/to/resource/127.0.0.1:61956/127.0.0.1:61956  (t=+20.725587ms)
=== RUN   Test/ServeWithStop
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc0002840a0] Created xds.GRPCServer  (t=+7.848µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc0002840a0] xDS credentials in use: false  (t=+30.568µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc0002840a0] Serve() passed a net.Listener on 127.0.0.1:61957  (t=+442.576µs)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc0002840a0] Created an xdsClient  (t=+464.615µs)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000302000] Watch started on resource name /path/to/resource/127.0.0.1:61957/127.0.0.1:61957  (t=+484.519µs)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000302000] Watch cancelled on resource name /path/to/resource/127.0.0.1:61957/127.0.0.1:61957  (t=+511.429µs)
--- PASS: Test (0.15s)
    --- PASS: Test/HandleListenerUpdate_ErrorUpdate (0.03s)
    --- PASS: Test/HandleListenerUpdate_NoXDSCreds (0.08s)
    --- PASS: Test/NewServer (0.00s)
        --- PASS: Test/NewServer/without_xds_creds (0.00s)
        --- PASS: Test/NewServer/with_xds_creds (0.00s)
    --- PASS: Test/RegisterService (0.00s)
    --- PASS: Test/ServeBootstrapConfigInvalid (0.00s)
        --- PASS: Test/ServeBootstrapConfigInvalid/bootstrap_config_is_missing (0.00s)
        --- PASS: Test/ServeBootstrapConfigInvalid/certificate_provider_config_is_missing (0.00s)
        --- PASS: Test/ServeBootstrapConfigInvalid/server_listener_resource_name_template_is_missing (0.00s)
    --- PASS: Test/ServeBootstrapFailure (0.00s)
    --- PASS: Test/ServeNewClientFailure (0.00s)
    --- PASS: Test/ServeSuccess (0.02s)
    --- PASS: Test/ServeWithStop (0.01s)
PASS
ok  	google.golang.org/grpc/xds	(cached)
=== RUN   TestCSDS
--- PASS: TestCSDS (1.90s)
=== RUN   TestCSDSNoXDSClient
--- PASS: TestCSDSNoXDSClient (0.00s)
=== RUN   Test_nodeProtoToV3
=== RUN   Test_nodeProtoToV3/v3
=== RUN   Test_nodeProtoToV3/v2
=== RUN   Test_nodeProtoToV3/not_node
--- PASS: Test_nodeProtoToV3 (0.00s)
    --- PASS: Test_nodeProtoToV3/v3 (0.00s)
    --- PASS: Test_nodeProtoToV3/v2 (0.00s)
    --- PASS: Test_nodeProtoToV3/not_node (0.00s)
PASS
ok  	google.golang.org/grpc/xds/csds	(cached)
=== RUN   TestBuildWithBootstrapEnvSet
=== RUN   TestBuildWithBootstrapEnvSet/0
=== RUN   TestBuildWithBootstrapEnvSet/1
--- PASS: TestBuildWithBootstrapEnvSet (0.00s)
    --- PASS: TestBuildWithBootstrapEnvSet/0 (0.00s)
    --- PASS: TestBuildWithBootstrapEnvSet/1 (0.00s)
=== RUN   TestBuildNotOnGCE
--- PASS: TestBuildNotOnGCE (0.00s)
=== RUN   TestBuildXDS
=== RUN   TestBuildXDS/ipv6_true
=== RUN   TestBuildXDS/ipv6_false
=== RUN   TestBuildXDS/override_TD_URI
--- PASS: TestBuildXDS (0.00s)
    --- PASS: TestBuildXDS/ipv6_true (0.00s)
    --- PASS: TestBuildXDS/ipv6_false (0.00s)
    --- PASS: TestBuildXDS/override_TD_URI (0.00s)
PASS
ok  	google.golang.org/grpc/xds/googledirectpath	(cached)
=== RUN   Test
=== RUN   Test/LocalityMatchProtoMessage
--- PASS: Test (0.00s)
    --- PASS: Test/LocalityMatchProtoMessage (0.00s)
=== RUN   TestLocalityToAndFromJSON
=== RUN   TestLocalityToAndFromJSON/3_fields
=== RUN   TestLocalityToAndFromJSON/2_fields
=== RUN   TestLocalityToAndFromJSON/1_field
--- PASS: TestLocalityToAndFromJSON (0.00s)
    --- PASS: TestLocalityToAndFromJSON/3_fields (0.00s)
    --- PASS: TestLocalityToAndFromJSON/2_fields (0.00s)
    --- PASS: TestLocalityToAndFromJSON/1_field (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal	(cached)
?   	google.golang.org/grpc/xds/internal/balancer	[no test files]
=== RUN   Test
=== RUN   Test/BalancerGroupBuildOptions
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc00048e150 of type stubBalancer-TestBalancerGroupBuildOptions  (t=+46.477µs)
=== RUN   Test/BalancerGroup_CloseStopsBalancerInCache
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484080 of type round_robin  (t=+86.984µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484200 of type round_robin  (t=+209.39µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00044e0d0}  (t=+270.863µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00044e0d0,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00044e0c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+332.689µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00044e7f0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+405.089µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e570}  (t=+430.044µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e0c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+460.859µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ea10})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e570}  (t=+504.958µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e0c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+525.893µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044eb70})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+568.325µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e7b0}  (t=+597.528µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e7b0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e0c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+619.869µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ed90})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00044e510}  (t=+663.99µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e7b0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e510,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+682.809µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044eef0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+716.278µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e990}  (t=+738.565µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e7b0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e990,state:READY,stateToAggregate:READY]  (t=+756.758µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f110})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e990}  (t=+802.252µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e7b0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e990,state:READY,stateToAggregate:READY]  (t=+821.558µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f270})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+858.924µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048ec30}  (t=+874.423µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e7b0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048ec30,state:READY,stateToAggregate:READY]  (t=+893.08µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f490})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e7b0,state:READY,stateToAggregate:READY]  (t=+949.117µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f580})
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000704090 of type stub-TestBalancerGroup_check_close  (t=+13.215791ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/BalancerGroup_InitOneSubBalancerTransientFailure
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec000 of type round_robin  (t=+38.933µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec080 of type round_robin  (t=+126.667µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00078c440}  (t=+164.852µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc00078c440,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc00078c340,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+216.357µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00078c560})
=== RUN   Test/BalancerGroup_LoadReport
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec180 of type round_robin  (t=+62.882µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec200 of type round_robin  (t=+296.639µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00078c640}  (t=+545.564µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e0f0,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00078c760,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+601.703µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00044e540})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+653.672µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e270}  (t=+673.346µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e2a0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c760,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+703.791µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044e800})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e270}  (t=+735.307µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e360,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c760,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+757.172µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044e960})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+793.824µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e540}  (t=+811.413µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c760,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+837.2µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044eb80})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00078c770}  (t=+868.787µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e630,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+889.088µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ece0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+924.483µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e780}  (t=+942.861µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e7b0,state:READY,stateToAggregate:READY]  (t=+963.124µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ef00})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e780}  (t=+1.001995ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e8a0,state:READY,stateToAggregate:READY]  (t=+1.021421ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f060})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+1.057161ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048ea80}  (t=+1.073594ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e570,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048eab0,state:READY,stateToAggregate:READY]  (t=+1.093104ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f280})
=== RUN   Test/BalancerGroup_OneRR_AddRemoveBackend
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec300 of type round_robin  (t=+17.924µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00044f9b0}  (t=+111.726µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc00044f9b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+139.869µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00044fb90})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+180.954µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000705830}  (t=+199.288µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000705830,state:READY,stateToAggregate:READY]  (t=+217.187µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044fda0})
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:<nil> Type:0 Metadata:<nil>}])
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000705830}  (t=+327.829µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000705830,state:READY,stateToAggregate:READY]  (t=+346.672µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c0e0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+384.02µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000705d10}  (t=+402.534µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000705d10,state:READY,stateToAggregate:READY]  (t=+432.858µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c2f0})
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:<nil> Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+521.804µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000705ec0}  (t=+545.061µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000705ec0,state:READY,stateToAggregate:READY]  (t=+563.135µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c820})
=== RUN   Test/BalancerGroup_SubBalancerTurnsConnectingFromTransientFailure
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000262540 of type pick_first  (t=+188.494µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:IDLE Picker:0xc000262600}  (t=+514.643µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000262600,state:IDLE,stateToAggregate:IDLE]  (t=+549.376µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0008001e0})
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000262780 of type pick_first  (t=+583.41µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc1
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:IDLE Picker:0xc000262840}  (t=+617.249µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000262600,state:IDLE,stateToAggregate:IDLE b2:weight:1,picker:0xc000262840,state:IDLE,stateToAggregate:IDLE]  (t=+646.916µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000800420})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000262b40}  (t=+684.106µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000262b40,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc000262840,state:IDLE,stateToAggregate:IDLE]  (t=+704.962µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000800580})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000262de0}  (t=+733.645µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000262b40,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc000262de0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+752.827µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0008006e0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc000262fc0}  (t=+782.539µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000262fc0,state:CONNECTING,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc000262de0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+801.299µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000800840})
=== RUN   Test/BalancerGroup_ThreeRR_RemoveBalancer
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec180 of type round_robin  (t=+18.844µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec200 of type round_robin  (t=+92.178µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec280 of type round_robin  (t=+127.54µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc000800900}  (t=+163.186µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000800900,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc0008009e0,state:CONNECTING,stateToAggregate:CONNECTING b3:weight:1,picker:0xc000800ad0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+188.354µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000800ce0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+228.699µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000378d20}  (t=+247.289µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc0008009e0,state:CONNECTING,stateToAggregate:CONNECTING b3:weight:1,picker:0xc000800ad0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+268.999µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800f10})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc0008009f0}  (t=+300.467µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc0008009f0,state:CONNECTING,stateToAggregate:CONNECTING b3:weight:1,picker:0xc000800ad0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+326.576µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801080})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+361.79µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000378f30}  (t=+378.995µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000378f30,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000800ad0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+401.749µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008012b0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:CONNECTING Picker:0xc000800ae0}  (t=+431.432µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000378f30,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000800ae0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+453.321µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801420})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+488.293µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:READY Picker:0xc0003790e0}  (t=+505.2µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000378f30,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc0003790e0,state:READY,stateToAggregate:READY]  (t=+528.75µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801650})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc0003790e0,state:READY,stateToAggregate:READY]  (t=+575.537µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801750})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000801840}  (t=+1.757592ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000378d20,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000801840,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+1.787008ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801960})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b3:weight:1,picker:0xc000801840,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+1.828514ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000801a40})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/BalancerGroup_TwoRR_ChangeWeight_MoreBackends
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec180 of type round_robin  (t=+25.581µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec200 of type round_robin  (t=+143.875µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00007e550}  (t=+194.159µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00007e550,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00007e860,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+222.786µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00007f290})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+265.557µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000262690}  (t=+285.322µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00007e860,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+309.016µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800060})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000262690}  (t=+341.259µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00007e860,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+361.935µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008001c0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+399.696µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000262e40}  (t=+418.683µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262e40,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00007e860,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+438.962µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008003e0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00007e8b0}  (t=+474.508µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262e40,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00007e8b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+493.887µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800540})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+529.159µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000263b60}  (t=+546.52µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262e40,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000263b60,state:READY,stateToAggregate:READY]  (t=+567.002µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800760})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000263b60}  (t=+599.875µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262e40,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000263b60,state:READY,stateToAggregate:READY]  (t=+619.794µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008008c0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+656.838µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000378960}  (t=+675.983µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000262e40,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000378960,state:READY,stateToAggregate:READY]  (t=+695.814µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800ae0})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:3,picker:0xc000262e40,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000378960,state:READY,stateToAggregate:READY]  (t=+737.011µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800bd0})
=== RUN   Test/BalancerGroup_TwoRR_DifferentWeight_MoreBackends
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec480 of type round_robin  (t=+17.237µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec500 of type round_robin  (t=+91.147µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc000800ca0}  (t=+141.158µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000800ca0,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc000800dd0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+164.867µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000801020})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+203.08µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000379da0}  (t=+221.189µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000379da0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800dd0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+243.202µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801240})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000379da0}  (t=+274.707µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000379da0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800dd0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+296.006µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008013a0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+333.259µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e240}  (t=+351.13µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e240,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800dd0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+374.107µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008015c0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc000800de0}  (t=+406.469µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e240,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800de0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+424.497µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801720})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+457.008µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e420}  (t=+472.434µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e240,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e420,state:READY,stateToAggregate:READY]  (t=+493.615µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801940})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e420}  (t=+525.523µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e240,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e420,state:READY,stateToAggregate:READY]  (t=+545.677µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801aa0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+581.168µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e6c0}  (t=+597.3µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e240,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e6c0,state:READY,stateToAggregate:READY]  (t=+615.438µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801cf0})
=== RUN   Test/BalancerGroup_TwoRR_MoreBackends
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484080 of type round_robin  (t=+71.189µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484200 of type round_robin  (t=+310.615µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00044e090}  (t=+363.447µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc00044e090,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00044e2a0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+396.477µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00044e7b0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+438.21µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812450}  (t=+456.665µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812450,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e2a0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+477.642µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044e9d0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812450}  (t=+509.89µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812450,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e2a0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+529.817µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044eb30})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+569.312µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812690}  (t=+586.766µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e2a0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+606.816µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ed50})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00044e330}  (t=+639.096µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e330,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+659.797µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044eeb0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+694.207µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812870}  (t=+711.767µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812870,state:READY,stateToAggregate:READY]  (t=+730.897µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f0d0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812870}  (t=+764.166µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812870,state:READY,stateToAggregate:READY]  (t=+783.442µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f230})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+820.264µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812b10}  (t=+836.713µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812690,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812b10,state:READY,stateToAggregate:READY]  (t=+856.297µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f450})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+895.145µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812c90}  (t=+911.218µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812c90,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812b10,state:READY,stateToAggregate:READY]  (t=+930.818µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f6d0})
    balancer.go:132: testClientConn: UpdateAddresses(sc3, [{Addr:3.3.3.3:3 ServerName: Attributes:<nil> Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+1.031557ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812ea0}  (t=+1.05025ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000812c90,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812ea0,state:READY,stateToAggregate:READY]  (t=+1.070421ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044fa20})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00044fa90}  (t=+1.102851ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc00044fa90,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc000812ea0,state:READY,stateToAggregate:READY]  (t=+1.121221ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044fbb0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[]}  (t=+1.15347ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00044fcd0}  (t=+1.17029ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc00044fa90,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc00044fcd0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.190297ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00044fdf0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00044fe50}  (t=+1.218975ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc00044fa90,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE b2:weight:1,picker:0xc00044fe50,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+1.236683ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00044ff70})
=== RUN   Test/BalancerGroup_TwoRR_OneBackend
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484580 of type round_robin  (t=+13.132µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484600 of type round_robin  (t=+76.164µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc000800030}  (t=+109.574µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000800030,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc000800110,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+131.429µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000800310})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+168.291µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000813620}  (t=+185.528µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000813620,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800110,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+205.555µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800530})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc000800120}  (t=+236.509µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000813620,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800120,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+258.635µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800690})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+290.942µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000813800}  (t=+306.708µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:1,picker:0xc000813620,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000813800,state:READY,stateToAggregate:READY]  (t=+325.551µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008008b0})
=== RUN   Test/BalancerGroup_locality_caching
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec080 of type round_robin  (t=+56.538µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec000 of type round_robin  (t=+289.35µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00078c0c0}  (t=+359.084µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00078c0c0,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00078c0b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+389.777µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00078c400})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+429.211µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e540}  (t=+447.122µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e540,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c0b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+469.487µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c620})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e540}  (t=+499.089µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e540,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c0b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+517.443µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c780})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+553.519µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e780}  (t=+571.479µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c0b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+590.552µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c9a0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00078c1c0}  (t=+621.833µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078c1c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+641.067µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078cb00})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+674.318µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e960}  (t=+691.586µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e960,state:READY,stateToAggregate:READY]  (t=+710.477µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078cd20})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e960}  (t=+742.498µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e960,state:READY,stateToAggregate:READY]  (t=+761.41µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078ce80})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+795.288µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048ec00}  (t=+811.356µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048ec00,state:READY,stateToAggregate:READY]  (t=+830.175µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078d0a0})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY]  (t=+873.549µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078d190})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+12.071685ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048ee40}  (t=+12.119749ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048ee40}  (t=+124.185444ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e780,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048ee40,state:READY,stateToAggregate:READY]  (t=+124.25268ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078d450})
=== RUN   Test/BalancerGroup_locality_caching_close_group
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484080 of type round_robin  (t=+42.641µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484200 of type round_robin  (t=+121.717µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc000800090}  (t=+164.643µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000800090,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc000800080,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+206.011µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000800400})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+251.901µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812510}  (t=+268.933µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800080,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+292.03µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800620})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812510}  (t=+318.933µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800080,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+334.702µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800780})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+367.215µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812750}  (t=+381.53µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812750,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800080,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+397.285µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008009a0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc0008001c0}  (t=+439.663µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812750,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc0008001c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+492.736µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800b00})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+543.488µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812930}  (t=+563.511µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812750,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812930,state:READY,stateToAggregate:READY]  (t=+584.454µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800d20})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812930}  (t=+616.474µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812750,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812930,state:READY,stateToAggregate:READY]  (t=+633.498µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800e80})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+666.369µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812bd0}  (t=+683.492µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812750,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812bd0,state:READY,stateToAggregate:READY]  (t=+702.989µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008010a0})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812750,state:READY,stateToAggregate:READY]  (t=+751.277µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801190})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
=== RUN   Test/BalancerGroup_locality_caching_not_readd_within_timeout
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec280 of type round_robin  (t=+80.534µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec000 of type round_robin  (t=+279.92µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00078d4f0}  (t=+336.703µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00078d4f0,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00078d4e0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+369.808µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00044e750})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+412.732µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e0c0}  (t=+431.158µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e0c0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078d4e0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+452.997µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044e970})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e0c0}  (t=+483.87µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e0c0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078d4e0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+502.363µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ead0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+536.522µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc00048e300}  (t=+552.705µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e300,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00078d4e0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+570.957µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ecf0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00044e190}  (t=+600.056µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e300,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044e190,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+617.856µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044ee50})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+652.832µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e510}  (t=+670.762µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e300,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e510,state:READY,stateToAggregate:READY]  (t=+689.016µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f070})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e510}  (t=+719.322µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e300,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e510,state:READY,stateToAggregate:READY]  (t=+738.252µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f1d0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+772.326µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048e7b0}  (t=+787.864µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e300,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048e7b0,state:READY,stateToAggregate:READY]  (t=+804.817µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f3f0})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00048e300,state:READY,stateToAggregate:READY]  (t=+840.899µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f4e0})
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
=== RUN   Test/BalancerGroup_locality_caching_readd_with_different_builder
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484080 of type round_robin  (t=+29.554µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484200 of type round_robin  (t=+78.289µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc000800110}  (t=+101.053µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000800110,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc000800100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+156.937µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000800480})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+187.192µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812660}  (t=+197.3µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812660,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+211.881µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008006a0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812660}  (t=+228.547µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812660,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+238.217µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800800})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+256.682µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc0008128d0}  (t=+264.922µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+278.18µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800a20})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc000800240}  (t=+291.749µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000800240,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+300.081µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800b80})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+318.14µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812ab0}  (t=+325.384µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812ab0,state:READY,stateToAggregate:READY]  (t=+333.068µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800da0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812ab0}  (t=+353.88µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812ab0,state:READY,stateToAggregate:READY]  (t=+363.291µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800f00})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+379.55µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812e10}  (t=+387.918µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812e10,state:READY,stateToAggregate:READY]  (t=+398.085µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801130})
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY]  (t=+429.134µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801260})
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec200 of type round_robin  (t=+12.05194ms)
    balancer.go:107: testClientConn: NewSubConn([{4.4.4.4:4  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc4
    balancer.go:107: testClientConn: NewSubConn([{5.5.5.5:5  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc5
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc00044f630}  (t=+12.099999ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044f630,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+12.115493ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044f8c0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc4:{{4.4.4.4:4  <nil> 0 <nil>}}]}  (t=+12.141573ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048eb70}  (t=+12.151206ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048eb70,state:READY,stateToAggregate:READY]  (t=+12.16154ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044fae0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048eb70}  (t=+12.179043ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048eb70,state:READY,stateToAggregate:READY]  (t=+12.189529ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044fc40})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc4:{{4.4.4.4:4  <nil> 0 <nil>}} sc5:{{5.5.5.5:5  <nil> 0 <nil>}}]}  (t=+12.209343ms)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc00048ee10}  (t=+12.220098ms)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008128d0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00048ee10,state:READY,stateToAggregate:READY]  (t=+12.231817ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00044fe60})
=== RUN   Test/BalancerGroup_start_close
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0001ec380 of type round_robin  (t=+39.845µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484080 of type round_robin  (t=+269.571µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:CONNECTING Picker:0xc00044ff50}  (t=+310.351µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc00044ff50,state:CONNECTING,stateToAggregate:CONNECTING b2:weight:1,picker:0xc00044ff40,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+331.428µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0008002e0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+353.159µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc0008122a0}  (t=+362.679µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008122a0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044ff40,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+373.679µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800500})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc0008122a0}  (t=+388.83µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc0008122a0,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044ff40,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+397.905µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800660})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  <nil> 0 <nil>}} sc1:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+414.943µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b1, new state: {ConnectivityState:READY Picker:0xc000812510}  (t=+423.075µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc00044ff40,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+432.172µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800880})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc0008000a0}  (t=+446.822µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc0008000a0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+455.129µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008009e0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+470.22µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812720}  (t=+478.527µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812720,state:READY,stateToAggregate:READY]  (t=+487.919µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800c00})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812720}  (t=+503.545µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc000812720,state:READY,stateToAggregate:READY]  (t=+512.45µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800d60})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  <nil> 0 <nil>}} sc3:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+528.285µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc0008129c0}  (t=+536.742µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b1:weight:2,picker:0xc000812510,state:READY,stateToAggregate:READY b2:weight:1,picker:0xc0008129c0,state:READY,stateToAggregate:READY]  (t=+545.678µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000800f80})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484500 of type round_robin  (t=+584.389µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc4
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc5
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000484580 of type round_robin  (t=+605.71µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc6
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc7
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:CONNECTING Picker:0xc000801110}  (t=+626.437µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000801110,state:CONNECTING,stateToAggregate:CONNECTING b3:weight:1,picker:0xc000801100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+635.937µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000801490})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc4:{{0.0.0.0:0  <nil> 0 <nil>}}]}  (t=+651.803µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812d80}  (t=+659.556µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812d80,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000801100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+668.297µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008016b0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812d80}  (t=+682.379µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812d80,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000801100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+691.313µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801810})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc4:{{0.0.0.0:0  <nil> 0 <nil>}} sc5:{{3.3.3.3:3  <nil> 0 <nil>}}]}  (t=+706.941µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b2, new state: {ConnectivityState:READY Picker:0xc000812fc0}  (t=+714.585µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812fc0,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000801100,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+723.575µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801a30})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:CONNECTING Picker:0xc000801240}  (t=+736.945µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812fc0,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000801240,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+745.476µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801b90})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc6:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+760.719µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:READY Picker:0xc0008131a0}  (t=+768.604µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812fc0,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc0008131a0,state:READY,stateToAggregate:READY]  (t=+777.123µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801db0})
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:READY Picker:0xc0008131a0}  (t=+790.374µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812fc0,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc0008131a0,state:READY,stateToAggregate:READY]  (t=+799.057µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000801f10})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc6:{{1.1.1.1:1  <nil> 0 <nil>}} sc7:{{2.2.2.2:2  <nil> 0 <nil>}}]}  (t=+815.017µs)
    tlogger.go:99: balancergroup.go:453 Balancer state update from locality b3, new state: {ConnectivityState:READY Picker:0xc000813440}  (t=+823.539µs)
    tlogger.go:99: aggregator.go:201 Child pickers with config: map[b2:weight:3,picker:0xc000812fc0,state:READY,stateToAggregate:READY b3:weight:1,picker:0xc000813440,state:READY,stateToAggregate:READY]  (t=+835.088µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00078c140})
=== RUN   Test/BalancerGroup_start_close_deadlock
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc0008136e0 of type stub-TestBalancerGroup_start_close_deadlock  (t=+11.311µs)
    tlogger.go:99: balancergroup.go:100 Created child policy 0xc000813740 of type stub-TestBalancerGroup_start_close_deadlock  (t=+29.783µs)
--- PASS: Test (1.30s)
    --- PASS: Test/BalancerGroupBuildOptions (0.01s)
    --- PASS: Test/BalancerGroup_CloseStopsBalancerInCache (0.01s)
    --- PASS: Test/BalancerGroup_InitOneSubBalancerTransientFailure (0.00s)
    --- PASS: Test/BalancerGroup_LoadReport (0.00s)
    --- PASS: Test/BalancerGroup_OneRR_AddRemoveBackend (0.00s)
    --- PASS: Test/BalancerGroup_SubBalancerTurnsConnectingFromTransientFailure (0.00s)
    --- PASS: Test/BalancerGroup_ThreeRR_RemoveBalancer (0.00s)
    --- PASS: Test/BalancerGroup_TwoRR_ChangeWeight_MoreBackends (0.00s)
    --- PASS: Test/BalancerGroup_TwoRR_DifferentWeight_MoreBackends (0.00s)
    --- PASS: Test/BalancerGroup_TwoRR_MoreBackends (0.00s)
    --- PASS: Test/BalancerGroup_TwoRR_OneBackend (0.00s)
    --- PASS: Test/BalancerGroup_locality_caching (0.23s)
    --- PASS: Test/BalancerGroup_locality_caching_close_group (0.01s)
    --- PASS: Test/BalancerGroup_locality_caching_not_readd_within_timeout (1.00s)
    --- PASS: Test/BalancerGroup_locality_caching_readd_with_different_builder (0.01s)
    --- PASS: Test/BalancerGroup_start_close (0.00s)
    --- PASS: Test/BalancerGroup_start_close_deadlock (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/balancergroup	(cached)
=== RUN   Test
=== RUN   Test/CertproviderStoreError
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000240f0] Created  (t=+33.135µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000240f0] xDS credentials in use: true  (t=+113.763µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000240f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+269.36µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000240f0] CDS watch started on cluster1  (t=+304.344µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000240f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default1",
              "RootCertName": "",
              "IdentityInstanceName": "default2",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default1",
          "RootCertName": "",
          "IdentityInstanceName": "default2",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+460.682µs)
    tlogger.go:99: cdsbalancer.go:288 [xds] [cds-lb 0xc0000240f0] Invalid security config update from xds-client 0xc0004f4f20: certprovider store error  (t=+484.734µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00042fb10})
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000240f0] CDS watch canceled on cluster1  (t=+11.839293ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000240f0] Shutdown  (t=+11.864367ms)
=== RUN   Test/CircuitBreaking
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000242d0] Created  (t=+324.524µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000242d0] xDS credentials in use: true  (t=+358.446µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000242d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+810.77µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000242d0] CDS watch started on cluster1  (t=+846.72µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000242d0] Watch update from xds-client 0xc0004f51e0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": 1,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+908.947µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000242d0] Created child policy 0xc000534090 of type cluster_resolver_experimental  (t=+960.865µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000242d0] CDS watch canceled on cluster1  (t=+1.130577ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000242d0] Shutdown  (t=+1.150509ms)
=== RUN   Test/Close
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000240f0] Created  (t=+25.003µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000240f0] xDS credentials in use: false  (t=+43.194µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000240f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+83.245µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000240f0] CDS watch started on cluster1  (t=+107.838µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000240f0] Watch update from xds-client 0xc0004f5130, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+140.811µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000240f0] Created child policy 0xc000534db0 of type cluster_resolver_experimental  (t=+158.468µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000240f0] CDS watch canceled on cluster1  (t=+237.264µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000240f0] Shutdown  (t=+250.391µs)
    tlogger.go:99: cdsbalancer.go:428 [xds] [cds-lb 0xc0000240f0] xds: received ClientConnState {{ResolverState:{Addresses:[] ServiceConfig:0xc000092080 Attributes:0xc000010008} BalancerConfig:0xc0000920e0}} after cdsBalancer was closed  (t=+10.578206ms)
    tlogger.go:99: cdsbalancer.go:469 [xds] [cds-lb 0xc0000240f0] xds: received subConn update {, {IDLE <nil>}} after cdsBalancer was closed  (t=+10.618562ms)
    tlogger.go:99: cdsbalancer.go:460 [xds] [cds-lb 0xc0000240f0] xds: received resolver error {cdsBalancer resolver error} after cdsBalancer was closed  (t=+21.08768ms)
=== RUN   Test/GoodSecurityConfig
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0002400f0] Created  (t=+36.651µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0002400f0] xDS credentials in use: true  (t=+56.422µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0002400f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+116.64µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0002400f0] CDS watch started on cluster1  (t=+183.097µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002400f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default1",
              "RootCertName": "",
              "IdentityInstanceName": "default2",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default1",
          "RootCertName": "",
          "IdentityInstanceName": "default2",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+259.192µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0002400f0] Created child policy 0xc0000af650 of type cluster_resolver_experimental  (t=+279.409µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc00011e0c0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:bar-address ServerName: Attributes:0xc00011e140 Type:0 Metadata:<nil>}])
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0002400f0] CDS watch canceled on cluster1  (t=+556.928µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0002400f0] Shutdown  (t=+572.453µs)
=== RUN   Test/HandleClusterUpdate
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0002403c0] Created  (t=+19.9µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0002403c0] xDS credentials in use: false  (t=+36.572µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0002403c0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+83.871µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0002403c0] CDS watch started on cluster1  (t=+108.284µs)
=== RUN   Test/HandleClusterUpdate/happy-case-with-lrs
=== CONT  Test/HandleClusterUpdate
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002403c0] Watch update from xds-client 0xc0004f51e0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": true,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+164.567µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0002403c0] Created child policy 0xc000534ae0 of type cluster_resolver_experimental  (t=+194.201µs)
=== RUN   Test/HandleClusterUpdate/happy-case-without-lrs
=== CONT  Test/HandleClusterUpdate
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002403c0] Watch update from xds-client 0xc0004f51e0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+313.566µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0002403c0] CDS watch canceled on cluster1  (t=+403.701µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0002403c0] Shutdown  (t=+418.917µs)
=== RUN   Test/HandleClusterUpdateError
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc00012c0f0] Created  (t=+45.303µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc00012c0f0] xDS credentials in use: false  (t=+65.581µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc00012c0f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+124.75µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc00012c0f0] CDS watch started on cluster1  (t=+154.386µs)
    tlogger.go:99: cdsbalancer.go:272 [xds] [cds-lb 0xc00012c0f0] Watch error from xds-client 0xc0004f4f20: cdsBalancer watcher error  (t=+180.103µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00042f350})
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc00012c0f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+20.536765ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc00012c0f0] Created child policy 0xc000534390 of type cluster_resolver_experimental  (t=+20.561488ms)
    tlogger.go:99: cdsbalancer.go:272 [xds] [cds-lb 0xc00012c0f0] Watch error from xds-client 0xc0004f4f20: cdsBalancer watcher error  (t=+20.655662ms)
    tlogger.go:99: cdsbalancer.go:272 [xds] [cds-lb 0xc00012c0f0] Watch error from xds-client 0xc0004f4f20: cdsBalancer resource not found error  (t=+30.718858ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc00012c0f0] CDS watch canceled on cluster1  (t=+40.755705ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc00012c0f0] Shutdown  (t=+40.787963ms)
=== RUN   Test/HandleRespInvokedWithError
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+16.054µs)
=== RUN   Test/NoSecurityConfigWithXDSCreds
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0005bc0f0] Created  (t=+96.285µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0005bc0f0] xDS credentials in use: true  (t=+132.02µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0005bc0f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+296.32µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0005bc0f0] CDS watch started on cluster1  (t=+322.583µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0005bc0f0] Watch update from xds-client 0xc0005b8000, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+359.261µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0005bc0f0] Created child policy 0xc000534090 of type cluster_resolver_experimental  (t=+381.999µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc00011e048 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0005bc0f0] CDS watch canceled on cluster1  (t=+10.569219ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0005bc0f0] Shutdown  (t=+10.596101ms)
=== RUN   Test/ParseConfig
=== RUN   Test/ParseConfig/good-lb-config
=== RUN   Test/ParseConfig/unknown-fields-in-lb-config
=== RUN   Test/ParseConfig/empty-lb-config
=== RUN   Test/ResolverError
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0005bc2d0] Created  (t=+40.21µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0005bc2d0] xDS credentials in use: false  (t=+65.854µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0005bc2d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+258.937µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0005bc2d0] CDS watch started on cluster1  (t=+282.907µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00042e4f0})
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0005bc2d0] Watch update from xds-client 0xc0005b82c0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+20.56207ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0005bc2d0] Created child policy 0xc0000ae600 of type cluster_resolver_experimental  (t=+20.579966ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0005bc2d0] CDS watch canceled on cluster1  (t=+30.781351ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0005bc2d0] Shutdown  (t=+30.810149ms)
=== RUN   Test/SecurityConfigNotFoundInBootstrap
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0005bc0f0] Created  (t=+18.22µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0005bc0f0] xDS credentials in use: true  (t=+40.248µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0005bc0f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+78.605µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0005bc0f0] CDS watch started on cluster1  (t=+99.559µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0005bc0f0] Watch update from xds-client 0xc0005b8000, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "not-default",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": null,
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "not-default",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": null,
          "RequireClientCert": false
        }  (t=+145.307µs)
    tlogger.go:99: cdsbalancer.go:288 [xds] [cds-lb 0xc0005bc0f0] Invalid security config update from xds-client 0xc0005b8000: certificate provider instance "not-default" not found in bootstrap file  (t=+163.525µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000298c60})
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0005bc4b0] Created  (t=+10.152463ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0005bc4b0] xDS credentials in use: true  (t=+10.167205ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0005bc4b0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+10.200925ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0005bc4b0] CDS watch started on cluster1  (t=+10.220223ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0005bc4b0] Watch update from xds-client 0xc0005b8370, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "not-default",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": null,
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "not-default",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": null,
          "RequireClientCert": false
        }  (t=+10.256982ms)
    tlogger.go:99: cdsbalancer.go:288 [xds] [cds-lb 0xc0005bc4b0] Invalid security config update from xds-client 0xc0005b8370: xds: certificate_providers config missing in bootstrap file  (t=+10.275333ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000088a80})
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0005bc4b0] CDS watch canceled on cluster1  (t=+20.342576ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0005bc4b0] Shutdown  (t=+20.367124ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0005bc0f0] CDS watch canceled on cluster1  (t=+20.381096ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0005bc0f0] Shutdown  (t=+20.388926ms)
=== RUN   Test/SecurityConfigUpdate_BadToGood
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0002ae0f0] Created  (t=+122.829µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0002ae0f0] xDS credentials in use: true  (t=+140.15µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0002ae0f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+174.662µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0002ae0f0] CDS watch started on cluster1  (t=+191.613µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002ae0f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "not-default",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": null,
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "not-default",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": null,
          "RequireClientCert": false
        }  (t=+227.526µs)
    tlogger.go:99: cdsbalancer.go:288 [xds] [cds-lb 0xc0002ae0f0] Invalid security config update from xds-client 0xc0004f4f20: certificate provider instance "not-default" not found in bootstrap file  (t=+240.826µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00052e4f0})
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002ae0f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default1",
              "RootCertName": "",
              "IdentityInstanceName": "default2",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default1",
          "RootCertName": "",
          "IdentityInstanceName": "default2",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+10.270184ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0002ae0f0] Created child policy 0xc0002e6870 of type cluster_resolver_experimental  (t=+10.292661ms)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc0002aa0a0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0002ae0f0] CDS watch canceled on cluster1  (t=+10.448329ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0002ae0f0] Shutdown  (t=+10.463623ms)
=== RUN   Test/SecurityConfigUpdate_GoodToBad
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc00017a1e0] Created  (t=+31.5µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc00017a1e0] xDS credentials in use: true  (t=+48.772µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc00017a1e0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+79.146µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc00017a1e0] CDS watch started on cluster1  (t=+96.628µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc00017a1e0] Watch update from xds-client 0xc00017e000, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default1",
              "RootCertName": "",
              "IdentityInstanceName": "default2",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default1",
          "RootCertName": "",
          "IdentityInstanceName": "default2",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+129.008µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc00017a1e0] Created child policy 0xc000534c00 of type cluster_resolver_experimental  (t=+148.037µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc0002aa1c0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc00017a1e0] Watch update from xds-client 0xc00017e000, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "not-default",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": null,
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "not-default",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": null,
          "RequireClientCert": false
        }  (t=+261.98µs)
    tlogger.go:99: cdsbalancer.go:288 [xds] [cds-lb 0xc00017a1e0] Invalid security config update from xds-client 0xc00017e000: certificate provider instance "not-default" not found in bootstrap file  (t=+276.978µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc00017a1e0] CDS watch canceled on cluster1  (t=+10.518304ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc00017a1e0] Shutdown  (t=+10.553382ms)
=== RUN   Test/SecurityConfigUpdate_GoodToFallback
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0002660f0] Created  (t=+33.869µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0002660f0] xDS credentials in use: true  (t=+50.757µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0002660f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+100.867µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0002660f0] CDS watch started on cluster1  (t=+125.963µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002660f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default1",
              "RootCertName": "",
              "IdentityInstanceName": "default2",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default1",
          "RootCertName": "",
          "IdentityInstanceName": "default2",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+172.474µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0002660f0] Created child policy 0xc0005343c0 of type cluster_resolver_experimental  (t=+187.818µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc00053e0c0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002660f0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+341.505µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc00053e138 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc1
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0002660f0] CDS watch canceled on cluster1  (t=+399.605µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0002660f0] Shutdown  (t=+411.545µs)
=== RUN   Test/SecurityConfigUpdate_GoodToGood
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0002663c0] Created  (t=+19.055µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0002663c0] xDS credentials in use: true  (t=+31.819µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0002663c0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+62.18µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0002663c0] CDS watch started on cluster1  (t=+79.916µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002663c0] Watch update from xds-client 0xc0004f51e0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default1",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default1",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+115.691µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0002663c0] Created child policy 0xc0005352c0 of type cluster_resolver_experimental  (t=+127.959µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc00053e208 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0002663c0] Watch update from xds-client 0xc0004f51e0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "default2",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": [
                {},
                {},
                {},
                {},
                {}
              ],
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: {
          "RootInstanceName": "default2",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": [
            {},
            {},
            {},
            {},
            {}
          ],
          "RequireClientCert": false
        }  (t=+236.252µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc00053e280 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc1
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0002663c0] CDS watch canceled on cluster1  (t=+336.059µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0002663c0] Shutdown  (t=+344.651µs)
=== RUN   Test/SecurityConfigWithoutXDSCreds
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc000266780] Created  (t=+32.458µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc000266780] xDS credentials in use: false  (t=+57.655µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc000266780] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+135.366µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc000266780] CDS watch started on cluster1  (t=+173.637µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc000266780] Watch update from xds-client 0xc0004f54a0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+359.532µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc000266780] Created child policy 0xc000535f80 of type cluster_resolver_experimental  (t=+375.13µs)
    balancer.go:107: testClientConn: NewSubConn([{foo-address  0xc000010280 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc000266780] CDS watch canceled on cluster1  (t=+10.74664ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc000266780] Shutdown  (t=+10.770778ms)
=== RUN   Test/SuccessCaseLeafNode
=== RUN   Test/SuccessCaseLeafNode/test-update-root-cluster-EDS-success
=== CONT  Test/SuccessCaseLeafNode
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+26.831µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on EDS Service  (t=+80.538µs)
=== RUN   Test/SuccessCaseLeafNode/test-update-root-cluster-Logical-DNS-success
=== CONT  Test/SuccessCaseLeafNode
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service  (t=+121.123µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on Logical DNS Service  (t=+163.621µs)
=== RUN   Test/SuccessCaseLeafNodeThenNewUpdate
=== RUN   Test/SuccessCaseLeafNodeThenNewUpdate/test-update-root-cluster-then-new-update-EDS-success
=== CONT  Test/SuccessCaseLeafNodeThenNewUpdate
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+50.893µs)
=== RUN   Test/SuccessCaseLeafNodeThenNewUpdate/test-update-root-cluster-then-new-update-Logical-DNS-success
=== CONT  Test/SuccessCaseLeafNodeThenNewUpdate
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service  (t=+339.4µs)
=== RUN   Test/SwitchClusterNodeBetweenLeafAndAggregated
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service 2  (t=+7.746µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+27.975µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service  (t=+36.824µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on EDS Service  (t=+20.442828ms)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on Logical DNS Service  (t=+20.470127ms)
=== RUN   Test/UpdateClientConnState
=== RUN   Test/UpdateClientConnState/bad-lbCfg-type
=== CONT  Test/UpdateClientConnState
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0001b60f0] Created  (t=+186.483µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0001b60f0] xDS credentials in use: false  (t=+221.588µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0001b60f0] Shutdown  (t=+270.307µs)
=== RUN   Test/UpdateClientConnState/empty-cluster-in-lbCfg
=== CONT  Test/UpdateClientConnState
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0001b62d0] Created  (t=+312.39µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0001b62d0] xDS credentials in use: false  (t=+329.768µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0001b62d0] Shutdown  (t=+348.015µs)
=== RUN   Test/UpdateClientConnState/happy-good-case
=== CONT  Test/UpdateClientConnState
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0001b64b0] Created  (t=+389.329µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0001b64b0] xDS credentials in use: false  (t=+406.393µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0001b64b0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+570.082µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0001b64b0] CDS watch started on cluster1  (t=+613.547µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0001b64b0] CDS watch canceled on cluster1  (t=+631.96µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0001b64b0] Shutdown  (t=+642.801µs)
=== RUN   Test/UpdateClientConnStateWithSameState
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0001b6690] Created  (t=+10.896µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0001b6690] xDS credentials in use: false  (t=+33.208µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0001b6690] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+67.926µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0001b6690] CDS watch started on cluster1  (t=+86.88µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0001b6690] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+111.741µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0001b6690] CDS watch canceled on cluster1  (t=+10.270088ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0001b6690] Shutdown  (t=+10.28765ms)
=== RUN   Test/UpdateRootClusterAggregateSuccess
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Aggregate Cluster Service  (t=+19.55µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+60.095µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service  (t=+80.428µs)
=== RUN   Test/UpdateRootClusterAggregateThenChangeChild
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Aggregate Cluster Service  (t=+14.976µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service  (t=+45.097µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+54.534µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service 2  (t=+64.334µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on Logical DNS Service  (t=+72.054µs)
=== RUN   Test/UpdateRootClusterAggregateThenChangeRootToEDS
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Aggregate Cluster Service  (t=+20.156µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service  (t=+88.091µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on Logical DNS Service  (t=+145.725µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on Aggregate Cluster Service  (t=+390.809µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on EDS Service  (t=+406.509µs)
    tlogger.go:99: cluster_handler.go:154 CDS watch canceled on Logical DNS Service  (t=+414.145µs)
    tlogger.go:99: cluster_handler.go:151 CDS watch started on EDS Service 2  (t=+422.206µs)
=== RUN   Test/UpdateSubConnState
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0001b61e0] Created  (t=+22.871µs)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0001b61e0] xDS credentials in use: false  (t=+35.45µs)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0001b61e0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster1"
        }  (t=+79.788µs)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0001b61e0] CDS watch started on cluster1  (t=+97.787µs)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0001b61e0] Watch update from xds-client 0xc0004f4f20, content: [
          {
            "ClusterType": 0,
            "ClusterName": "service1",
            "EDSServiceName": "",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": null
          }
        ], security config: null  (t=+124.284µs)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0001b61e0] Created child policy 0xc0000af710 of type cluster_resolver_experimental  (t=+142.621µs)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0001b61e0] CDS watch canceled on cluster1  (t=+218.86µs)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0001b61e0] Shutdown  (t=+228.458µs)
--- PASS: Test (0.26s)
    --- PASS: Test/CertproviderStoreError (0.01s)
    --- PASS: Test/CircuitBreaking (0.00s)
    --- PASS: Test/Close (0.03s)
    --- PASS: Test/GoodSecurityConfig (0.00s)
    --- PASS: Test/HandleClusterUpdate (0.00s)
        --- PASS: Test/HandleClusterUpdate/happy-case-with-lrs (0.00s)
        --- PASS: Test/HandleClusterUpdate/happy-case-without-lrs (0.00s)
    --- PASS: Test/HandleClusterUpdateError (0.04s)
    --- PASS: Test/HandleRespInvokedWithError (0.00s)
    --- PASS: Test/NoSecurityConfigWithXDSCreds (0.01s)
    --- PASS: Test/ParseConfig (0.00s)
        --- PASS: Test/ParseConfig/good-lb-config (0.00s)
        --- PASS: Test/ParseConfig/unknown-fields-in-lb-config (0.00s)
        --- PASS: Test/ParseConfig/empty-lb-config (0.00s)
    --- PASS: Test/ResolverError (0.03s)
    --- PASS: Test/SecurityConfigNotFoundInBootstrap (0.02s)
    --- PASS: Test/SecurityConfigUpdate_BadToGood (0.01s)
    --- PASS: Test/SecurityConfigUpdate_GoodToBad (0.01s)
    --- PASS: Test/SecurityConfigUpdate_GoodToFallback (0.00s)
    --- PASS: Test/SecurityConfigUpdate_GoodToGood (0.00s)
    --- PASS: Test/SecurityConfigWithoutXDSCreds (0.01s)
    --- PASS: Test/SuccessCaseLeafNode (0.00s)
        --- PASS: Test/SuccessCaseLeafNode/test-update-root-cluster-EDS-success (0.00s)
        --- PASS: Test/SuccessCaseLeafNode/test-update-root-cluster-Logical-DNS-success (0.00s)
    --- PASS: Test/SuccessCaseLeafNodeThenNewUpdate (0.00s)
        --- PASS: Test/SuccessCaseLeafNodeThenNewUpdate/test-update-root-cluster-then-new-update-EDS-success (0.00s)
        --- PASS: Test/SuccessCaseLeafNodeThenNewUpdate/test-update-root-cluster-then-new-update-Logical-DNS-success (0.00s)
    --- PASS: Test/SwitchClusterNodeBetweenLeafAndAggregated (0.03s)
    --- PASS: Test/UpdateClientConnState (0.00s)
        --- PASS: Test/UpdateClientConnState/bad-lbCfg-type (0.00s)
        --- PASS: Test/UpdateClientConnState/empty-cluster-in-lbCfg (0.00s)
        --- PASS: Test/UpdateClientConnState/happy-good-case (0.00s)
    --- PASS: Test/UpdateClientConnStateWithSameState (0.01s)
    --- PASS: Test/UpdateRootClusterAggregateSuccess (0.01s)
    --- PASS: Test/UpdateRootClusterAggregateThenChangeChild (0.01s)
    --- PASS: Test/UpdateRootClusterAggregateThenChangeRootToEDS (0.00s)
    --- PASS: Test/UpdateSubConnState (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/cdsbalancer	(cached)
=== RUN   Test
=== RUN   Test/ClusterNameInAddressAttributes
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00046dba0] Created  (t=+67.274µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00046dba0] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+197.691µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000010290 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00003c870})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0004a0fc0:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+327.423µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c8c0})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00046dba0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-2",
          "edsServiceName": "test-eds-service",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+454.522µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2  0xc000010358 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001a41e0})
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00046dba0] Shutdown  (t=+527.862µs)
=== RUN   Test/DropByCategory
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0000ca000] Created  (t=+61.387µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0000ca000] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "lrsLoadReportingServerName": "test-lrs-name",
          "dropCategories": [
            {
              "Category": "test-dropping-category",
              "RequestsPerMillion": 500000
            }
          ],
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+230.58µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc00081c040 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00003c0f0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0008520c0:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+475.938µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c190})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0000ca000] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "lrsLoadReportingServerName": "test-lrs-name",
          "dropCategories": [
            {
              "Category": "test-dropping-category-2",
              "RequestsPerMillion": 250000
            }
          ],
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+778.766µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc00081c178 Type:0 Metadata:<nil>}])
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001a40a0})
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0000ca000] Shutdown  (t=+1.039849ms)
=== RUN   Test/DropCircuitBreaking
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0008631e0] Created  (t=+13.557µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0008631e0] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "lrsLoadReportingServerName": "test-lrs-name",
          "maxConcurrentRequests": 50,
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+77.404µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0001a0780 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0001a41e0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001d49a0:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+164.558µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001a42d0})
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0008631e0] Shutdown  (t=+442.145µs)
=== RUN   Test/LoadReporting
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000863a00] Created  (t=+46.122µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000863a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "lrsLoadReportingServerName": "test-lrs-name",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+239.847µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0001a0018 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0001a40f0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000878040:{{1.1.1.1:1  0xc0001a0e00 0 <nil>}}]}  (t=+316.231µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001a4140})
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000863a00] Shutdown  (t=+393.496µs)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000863a00] Shutdown  (t=+406.946µs)
=== RUN   Test/PickerUpdateAfterClose
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00019a4e0] Created  (t=+11.25µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00019a4e0] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "maxConcurrentRequests": 50,
          "childPolicy": [
            {
              "stubBalancer-TestPickerUpdateAfterClose": {}
            }
          ]
        }  (t=+45.62µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0001a0550 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc0
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00019a4e0] Shutdown  (t=+88.364µs)
=== RUN   Test/ReResolution
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00019a820] Created  (t=+24.131µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00019a820] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+72.248µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0001a0688 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00003c0a0})
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0001a40a0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000878a40:{{1.1.1.1:1  <nil> 0 <nil>}}]}  (t=+385.899µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001a4140})
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0001a4190})
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00019a820] Shutdown  (t=+438.011µs)
=== RUN   Test/UpdateLRSServer
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00019a000] Created  (t=+21.836µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00019a000] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "lrsLoadReportingServerName": "",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+48.04µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0001a03c0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00019a000] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "lrsLoadReportingServerName": "test-lrs-name",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+90.319µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc0001a0500 Type:0 Metadata:<nil>}])
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00019a000] Received update from resolver, balancer config: {
          "cluster": "test-cluster",
          "edsServiceName": "test-eds-service",
          "childPolicy": [
            {
              "round_robin": {}
            }
          ]
        }  (t=+120.756µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc0001a0510 Type:0 Metadata:<nil>}])
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00019a000] Shutdown  (t=+285.074µs)
--- PASS: Test (0.01s)
    --- PASS: Test/ClusterNameInAddressAttributes (0.00s)
    --- PASS: Test/DropByCategory (0.00s)
    --- PASS: Test/DropCircuitBreaking (0.00s)
    --- PASS: Test/LoadReporting (0.00s)
    --- PASS: Test/PickerUpdateAfterClose (0.00s)
    --- PASS: Test/ReResolution (0.00s)
    --- PASS: Test/UpdateLRSServer (0.00s)
=== RUN   TestParseConfig
=== RUN   TestParseConfig/empty_json
=== RUN   TestParseConfig/bad_json
=== RUN   TestParseConfig/OK
--- PASS: TestParseConfig (0.00s)
    --- PASS: TestParseConfig/empty_json (0.00s)
    --- PASS: TestParseConfig/bad_json (0.00s)
    --- PASS: TestParseConfig/OK (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/clusterimpl	(cached)
=== RUN   Test
--- PASS: Test (0.00s)
=== RUN   TestClusterPicks
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0001309d0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001309d8})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001309e0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001309e8})
--- PASS: TestClusterPicks (0.00s)
=== RUN   TestConfigUpdateAddCluster
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000130af0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130af8})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130b00})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130b08})
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:<nil> Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:<nil> Type:0 Metadata:<nil>}])
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130c20})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130c28})
--- PASS: TestConfigUpdateAddCluster (0.50s)
=== RUN   TestRoutingConfigUpdateDeleteAll
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000130d58})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130d60})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130d68})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130d70})
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000130e50})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000130f18})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130f20})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130f28})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000130f30})
--- PASS: TestRoutingConfigUpdateDeleteAll (0.00s)
=== RUN   TestClusterManagerForwardsBalancerBuildOptions
--- PASS: TestClusterManagerForwardsBalancerBuildOptions (0.00s)
=== RUN   Test_parseConfig
=== RUN   Test_parseConfig/empty_json
=== RUN   Test_parseConfig/OK
--- PASS: Test_parseConfig (0.00s)
    --- PASS: Test_parseConfig/empty_json (0.00s)
    --- PASS: Test_parseConfig/OK (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/clustermanager	(cached)
=== RUN   Test
=== RUN   Test/ClientWatchEDS
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Created  (t=+48.042µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "cluster-1"
            }
          ]
        }  (t=+256.239µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch started on cluster-1  (t=+288.721µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "foobar-1"
            }
          ]
        }  (t=+319.194µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch started on foobar-1  (t=+332.919µs)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch canceled on cluster-1  (t=+351.316µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "foobar-2"
            }
          ]
        }  (t=+370.862µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch started on foobar-2  (t=+379.905µs)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch canceled on foobar-1  (t=+389.411µs)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch canceled on foobar-2  (t=+402.786µs)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Shutdown  (t=+411.609µs)
=== RUN   Test/EDSPriority_FirstPriorityRemoved
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0003fe000] Created  (t=+72.154µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0003fe000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+387.038µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0003fe000] EDS watch started on test-cluster-name  (t=+411.492µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0003fe000] resource update: [
          {}
        ]  (t=+473.39µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004c6500] Created  (t=+509.087µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+540.197µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0003fe000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+798.844µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6500] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+845.876µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6500] switching to ("priority-0-0", 0) in syncPriority  (t=+868.259µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489a00] Created  (t=+900.915µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6500] Created child policy 0xc000489a00 of type xds_cluster_impl_experimental  (t=+915.854µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+943.57µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0000927c0] Created  (t=+971.435µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0000927c0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+994.919µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0000927c0] Created child policy 0xc0004c6880 of type round_robin  (t=+1.011998ms)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc00061a208 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0003fe000] resource update: [
          {}
        ]  (t=+1.069826ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0003fe000] build balancer config: {}  (t=+1.083055ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6500] Received update from resolver, balancer config: {}  (t=+1.095789ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000089310})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0003fe000] EDS watch canceled on test-cluster-name  (t=+1.139124ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489a00] Shutdown  (t=+1.188673ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0003fe000] Shutdown  (t=+1.242831ms)
=== RUN   Test/EDSPriority_HighPriorityAllUnhealthy
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Created  (t=+36.074µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+81.968µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch started on test-cluster-name  (t=+105.434µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2480] resource update: [
          {}
        ]  (t=+159.468µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000280080] Created  (t=+181.773µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+195.861µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+214.598µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+393.278µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280080] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+457.902µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280080] switching to ("priority-0-0", 0) in syncPriority  (t=+482.496µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c000] Created  (t=+501.061µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000280080] Created child policy 0xc00018c000 of type xds_cluster_impl_experimental  (t=+511.729µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+538.38µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0004ad100] Created  (t=+559.003µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004ad100] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+586.21µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0004ad100] Created child policy 0xc000280400 of type round_robin  (t=+601.787µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010128 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004ad100] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc0004a5ff0}  (t=+682.384µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004ad100] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0004a5ff0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+709.637µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0004ad260:{{0.0.0.0:0  0xc000010120 0 <nil>}}]}  (t=+745.675µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004ad100] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0000b38f0}  (t=+760.365µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00003c6e0}  (t=+763µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004ad100] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000b38f0,state:READY,stateToAggregate:READY]  (t=+774.014µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c780}  (t=+810.807µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c780})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2480] resource update: [
          {}
        ]  (t=+860.404µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+876.869µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+893.198µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+1.048636ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280080] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+1.10682ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280080] switching to ("priority-0-0", 0) in syncPriority  (t=+1.136439ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.157514ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004ad100] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.178263ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004ad100] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0002dc210}  (t=+1.206737ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004ad100] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0002dc210,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+1.222021ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[]}  (t=+1.243158ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004ad100] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:IDLE Picker:0xc0002dc530}  (t=+1.254963ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004ad100] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0002dc530,state:IDLE,stateToAggregate:IDLE]  (t=+1.273999ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000126000}  (t=+1.303855ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000126050}  (t=+1.342975ms)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000280080] Switching priority from 0 to 1, because former became TransientFailure  (t=+1.365324ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c1a0] Created  (t=+1.381686ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000280080] Created child policy 0xc00018c1a0 of type xds_cluster_impl_experimental  (t=+1.401565ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004a5ac0})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c1a0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.431735ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0004ade80] Created  (t=+1.446596ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004ade80] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.467604ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0004ade80] Created child policy 0xc000280580 of type round_robin  (t=+1.481014ms)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000010198 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004ade80] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc0002dd910}  (t=+1.53266ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004ade80] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0002dd910,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.553052ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0004adfe0:{{1.1.1.1:1  0xc000010190 0 <nil>}}]}  (t=+1.57247ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004ade80] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0000b3b00}  (t=+1.585066ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004ade80] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0000b3b00,state:READY,stateToAggregate:READY]  (t=+1.596973ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280080] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc0001260a0}  (t=+1.61622ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280080] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc0001260f0}  (t=+1.631149ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001260f0})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch canceled on test-cluster-name  (t=+1.667706ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c000] Shutdown  (t=+1.695664ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c1a0] Shutdown  (t=+1.731429ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Shutdown  (t=+1.743446ms)
=== RUN   Test/EDSPriority_HighPriorityNoEndpoints
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00015e000] Created  (t=+60.074µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00015e000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+323.93µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00015e000] EDS watch started on test-cluster-name  (t=+348.684µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00015e000] resource update: [
          {}
        ]  (t=+394.92µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004c6500] Created  (t=+413.117µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+429.45µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+444.162µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00015e000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+591.416µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6500] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+638.483µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6500] switching to ("priority-0-0", 0) in syncPriority  (t=+657.533µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489860] Created  (t=+674.484µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6500] Created child policy 0xc000489860 of type xds_cluster_impl_experimental  (t=+684.558µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+706.28µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c6d20] Created  (t=+722.333µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6d20] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+742.048µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c6d20] Created child policy 0xc0004c6b80 of type round_robin  (t=+760.636µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000532120 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6d20] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000128ed0}  (t=+802.479µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6d20] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000128ed0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+818.403µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6e80:{{0.0.0.0:0  0xc000532118 0 <nil>}}]}  (t=+843.97µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6d20] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0001254d0}  (t=+856.094µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6500] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0001960a0}  (t=+865.67µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6d20] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0001254d0,state:READY,stateToAggregate:READY]  (t=+871.305µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6500] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001960f0}  (t=+903.204µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001960f0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00015e000] resource update: [
          {}
        ]  (t=+953.311µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+969.431µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+983.671µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00015e000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+1.114453ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6500] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+1.161706ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6500] switching to ("priority-0-0", 0) in syncPriority  (t=+1.180879ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.202285ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6d20] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.233796ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6d20] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000088ea0}  (t=+1.262815ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6d20] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000088ea0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+1.278616ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[]}  (t=+1.29715ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6d20] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:IDLE Picker:0xc0000890a0}  (t=+1.309415ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6500] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0001265f0}  (t=+1.31051ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6d20] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000890a0,state:IDLE,stateToAggregate:IDLE]  (t=+1.321764ms)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0004c6500] Switching priority from 0 to 1, because former became TransientFailure  (t=+1.331669ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6500] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000196410}  (t=+1.342445ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489a00] Created  (t=+1.348059ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6500] Created child policy 0xc000489a00 of type xds_cluster_impl_experimental  (t=+1.367949ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000128a80})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.400323ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c7380] Created  (t=+1.415035ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c7380] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.436326ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c7380] Created child policy 0xc0004c6c80 of type round_robin  (t=+1.449839ms)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000532130 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c7380] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc000129830}  (t=+1.488372ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c7380] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000129830,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.502304ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c7540:{{1.1.1.1:1  0xc000532128 0 <nil>}}]}  (t=+1.520768ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c7380] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc000125bf0}  (t=+1.538023ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c7380] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000125bf0,state:READY,stateToAggregate:READY]  (t=+1.551683ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6500] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc00003c0a0}  (t=+1.571469ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6500] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc00003c0f0}  (t=+1.603268ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c0f0})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00015e000] EDS watch canceled on test-cluster-name  (t=+1.641008ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489860] Shutdown  (t=+1.675243ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489a00] Shutdown  (t=+1.702089ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00015e000] Shutdown  (t=+1.714606ms)
=== RUN   Test/EDSPriority_HighPriorityReady
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Created  (t=+29.538µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+66.48µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch started on test-cluster-name  (t=+81.595µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2480] resource update: [
          {}
        ]  (t=+117.071µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00028e080] Created  (t=+133.866µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+148.436µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+162.117µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+335.145µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00028e080] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+391.58µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00028e080] switching to ("priority-0-0", 0) in syncPriority  (t=+414.244µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c000] Created  (t=+447.7µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00028e080] Created child policy 0xc00018c000 of type xds_cluster_impl_experimental  (t=+459.885µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+484.641µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066cc80] Created  (t=+505.497µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066cc80] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+535.405µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066cc80] Created child policy 0xc00028e380 of type round_robin  (t=+550.166µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010120 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066cc80] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000380810}  (t=+603.057µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066cc80] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000380810,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+619.507µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066cde0:{{0.0.0.0:0  0xc000010118 0 <nil>}}]}  (t=+639.675µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066cc80] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0006557a0}  (t=+651.64µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066cc80] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0006557a0,state:READY,stateToAggregate:READY]  (t=+664.145µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00028e080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000544000}  (t=+695.652µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00028e080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544050}  (t=+731.438µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544050})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2480] resource update: [
          {}
        ]  (t=+805.365µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+849.585µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+881.512µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+892.953µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+1.313809ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00028e080] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+1.632ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00028e080] switching to ("priority-0-0", 0) in syncPriority  (t=+1.664814ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.689665ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066cc80] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.716186ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000010028 Type:0 Metadata:<nil>}])
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2480] resource update: [
          {}
        ]  (t=+10.883636ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+10.904412ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+10.919156ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+11.043318ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00028e080] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+11.095236ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00028e080] switching to ("priority-0-0", 0) in syncPriority  (t=+11.11426ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+11.133804ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066cc80] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+11.153773ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000010130 Type:0 Metadata:<nil>}])
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2480] EDS watch canceled on test-cluster-name  (t=+20.910456ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c000] Shutdown  (t=+20.948865ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0001c2480] Shutdown  (t=+20.961554ms)
=== RUN   Test/EDSPriority_HigherDownWhileAddingLower
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00056c000] Created  (t=+35.284µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00056c000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+157.533µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00056c000] EDS watch started on test-cluster-name  (t=+211.072µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056c000] resource update: [
          {}
        ]  (t=+366.958µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004c6600] Created  (t=+386.414µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+403.48µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+420.045µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056c000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+557.518µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6600] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+600.687µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6600] switching to ("priority-0-0", 0) in syncPriority  (t=+619.281µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c000] Created  (t=+635.034µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6600] Created child policy 0xc00018c000 of type xds_cluster_impl_experimental  (t=+645.358µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+670.551µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c6aa0] Created  (t=+687.02µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6aa0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+705.815µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c6aa0] Created child policy 0xc0004c6a80 of type round_robin  (t=+718.335µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192560 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6aa0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000128eb0}  (t=+755.479µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6aa0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000128eb0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+769.243µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000544410}  (t=+785.308µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0004c6600] Switching priority from 0 to 1, because former became TransientFailure  (t=+804.342µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c1a0] Created  (t=+818.595µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6600] Created child policy 0xc00018c1a0 of type xds_cluster_impl_experimental  (t=+834.28µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000128930})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c1a0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+861.464µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c7040] Created  (t=+873.515µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c7040] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+889.427µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c7040] Created child policy 0xc0004c6b00 of type round_robin  (t=+901.24µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000192570 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c7040] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00040c190}  (t=+960.301µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c7040] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc00040c190,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+995.871µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000126190}  (t=+1.023287ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000126190})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056c000] resource update: [
          {}
        ]  (t=+1.068312ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.088068ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.102084ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.113119ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056c000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+1.294862ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6600] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+1.376482ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00040cdb0})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6600] switching to ("priority-0-2", 2) in syncPriority  (t=+1.410017ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489860] Created  (t=+1.430875ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6600] Created child policy 0xc000489860 of type xds_cluster_impl_experimental  (t=+1.441748ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.467336ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00040eb20] Created  (t=+1.485452ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00040eb20] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.502828ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00040eb20] Created child policy 0xc00028e400 of type round_robin  (t=+1.516032ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc00061a238 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00040eb20] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:CONNECTING Picker:0xc00040d240}  (t=+1.579106ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00040eb20] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc00040d240,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.593014ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00040ec80:{{2.2.2.2:2  0xc00061a230 0 <nil>}}]}  (t=+1.611453ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00040eb20] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc000655470}  (t=+1.623189ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-2, new state: {ConnectivityState:CONNECTING Picker:0xc000544640}  (t=+1.624497ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00040eb20] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc000655470,state:READY,stateToAggregate:READY]  (t=+1.633591ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-2, new state: {ConnectivityState:READY Picker:0xc000544690}  (t=+1.668138ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544690})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00056c000] EDS watch canceled on test-cluster-name  (t=+1.70095ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c1a0] Shutdown  (t=+1.738756ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489860] Shutdown  (t=+1.75749ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c000] Shutdown  (t=+1.776166ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00056c000] Shutdown  (t=+1.792652ms)
=== RUN   Test/EDSPriority_HigherReadyCloseAllLower
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00056d200] Created  (t=+21.521µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00056d200] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+49.996µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00056d200] EDS watch started on test-cluster-name  (t=+60.619µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056d200] resource update: [
          {}
        ]  (t=+92.458µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004c6c80] Created  (t=+106.208µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+121.389µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+134.248µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+146.201µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056d200] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+321.667µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6c80] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+381.901µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6c80] switching to ("priority-0-0", 0) in syncPriority  (t=+406.852µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c340] Created  (t=+422.11µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6c80] Created child policy 0xc00018c340 of type xds_cluster_impl_experimental  (t=+432.758µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c340] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+452.226µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066c5a0] Created  (t=+464.768µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066c5a0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+480.967µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066c5a0] Created child policy 0xc0004c7000 of type round_robin  (t=+496.443µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192808 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066c5a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000381010}  (t=+537.119µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066c5a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000381010,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+551.744µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6c80] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000544d70}  (t=+571.531µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0004c6c80] Switching priority from 0 to 1, because former became TransientFailure  (t=+587.176µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c4e0] Created  (t=+600.153µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6c80] Created child policy 0xc00018c4e0 of type xds_cluster_impl_experimental  (t=+614.973µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000380a80})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c4e0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+648.775µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066ca60] Created  (t=+661.636µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066ca60] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+678.671µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066ca60] Created child policy 0xc0004c7080 of type round_robin  (t=+691.082µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000192820 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066ca60] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0003817a0}  (t=+723.207µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066ca60] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0003817a0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+735.383µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6c80] Balancer state update from locality priority-0-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000544e60}  (t=+753.29µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0004c6c80] Switching priority from 1 to 2, because former became TransientFailure  (t=+765.052µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c820] Created  (t=+777.634µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6c80] Created child policy 0xc00018c820 of type xds_cluster_impl_experimental  (t=+786.356µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000380a90})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c820] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+814.886µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066cf20] Created  (t=+831.598µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066cf20] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+847.261µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066cf20] Created child policy 0xc0004c7100 of type round_robin  (t=+864.707µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc000192840 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066cf20] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:CONNECTING Picker:0xc000381e10}  (t=+898.565µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066cf20] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc000381e10,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+917.461µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066d080:{{2.2.2.2:2  0xc000192830 0 <nil>}}]}  (t=+938.294µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066cf20] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc000185680}  (t=+949.01µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066cf20] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc000185680,state:READY,stateToAggregate:READY]  (t=+960.051µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6c80] Balancer state update from locality priority-0-2, new state: {ConnectivityState:CONNECTING Picker:0xc00003c0a0}  (t=+959.512µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6c80] Balancer state update from locality priority-0-2, new state: {ConnectivityState:READY Picker:0xc00003c0f0}  (t=+985.687µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c0f0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066c700:{{0.0.0.0:0  0xc000192800 0 <nil>}}]}  (t=+1.025158ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066c5a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0004cc960}  (t=+1.03965ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066c5a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0004cc960,state:READY,stateToAggregate:READY]  (t=+1.052768ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6c80] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c140}  (t=+1.067552ms)
    tlogger.go:99: balancer_priority.go:260 [xds] [priority-lb 0xc0004c6c80] Switching priority from 2 to 0, because latter became Ready  (t=+1.079181ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c140})
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c820] Shutdown  (t=+101.456438ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c4e0] Shutdown  (t=+101.522345ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00056d200] EDS watch canceled on test-cluster-name  (t=+101.608693ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c340] Shutdown  (t=+101.639962ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00056d200] Shutdown  (t=+101.651413ms)
=== RUN   Test/EDSPriority_InitTimeout
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Created  (t=+132.112µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+178.622µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] EDS watch started on test-cluster-name  (t=+193.01µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+238.577µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00056e180] Created  (t=+255.56µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+270.274µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+284.661µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+423.511µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+464.303µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e180] switching to ("priority-0-0", 0) in syncPriority  (t=+482.364µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c000] Created  (t=+498.299µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e180] Created child policy 0xc00018c000 of type xds_cluster_impl_experimental  (t=+509.678µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+528.504µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066ca00] Created  (t=+544.165µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066ca00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+561.655µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066ca00] Created child policy 0xc00056e500 of type round_robin  (t=+574.931µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192708 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066ca00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000089170}  (t=+615.356µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066ca00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000089170,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+630.838µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00003c8c0}  (t=+646.337µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489860] Created  (t=+1.001077071s)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e180] Created child policy 0xc000489860 of type xds_cluster_impl_experimental  (t=+1.001135106s)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.00122444s)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000092180] Created  (t=+1.001261829s)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000092180] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.001300237s)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000092180] Created child policy 0xc0004c6600 of type round_robin  (t=+1.001328281s)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc00061a008 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000092180] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc0004a4f40}  (t=+1.001401523s)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000092180] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0004a4f40,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.001435131s)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000092320:{{1.1.1.1:1  0xc00061a000 0 <nil>}}]}  (t=+1.001471065s)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000092180] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0003a0660}  (t=+1.0014927s)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000092180] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0003a0660,state:READY,stateToAggregate:READY]  (t=+1.001515894s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc000126000}  (t=+1.001552659s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc000126050}  (t=+1.001622112s)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000126050})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] EDS watch canceled on test-cluster-name  (t=+1.00175838s)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c000] Shutdown  (t=+1.001825619s)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489860] Shutdown  (t=+1.00186441s)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Shutdown  (t=+1.0018843s)
=== RUN   Test/EDSPriority_MultipleLocalities
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0003fe240] Created  (t=+52.044µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0003fe240] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+107.288µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0003fe240] EDS watch started on test-cluster-name  (t=+128.463µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0003fe240] resource update: [
          {}
        ]  (t=+195.933µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004c6800] Created  (t=+215.808µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+238.03µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+258.906µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0003fe240] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+485.525µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6800] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+555.845µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6800] switching to ("priority-0-0", 0) in syncPriority  (t=+583.786µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489ba0] Created  (t=+605.199µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6800] Created child policy 0xc000489ba0 of type xds_cluster_impl_experimental  (t=+619.818µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489ba0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+647.923µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000093320] Created  (t=+670.386µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000093320] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+691.701µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000093320] Created child policy 0xc0004c6d00 of type round_robin  (t=+709.35µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc00061a210 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000128aa0}  (t=+766.889µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000128aa0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+786.186µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000093480:{{0.0.0.0:0  0xc00061a208 0 <nil>}}]}  (t=+812.296µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0003a1da0}  (t=+828.908µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0003a1da0,state:READY,stateToAggregate:READY]  (t=+844.524µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000544960}  (t=+874.439µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0005449b0}  (t=+888.876µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0005449b0})
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0001290e0}  (t=+935.096µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0001290e0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+951.969µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000544a00}  (t=+969.265µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0004c6800] Switching priority from 0 to 1, because former became TransientFailure  (t=+985.147µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489d40] Created  (t=+1.002409ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6800] Created child policy 0xc000489d40 of type xds_cluster_impl_experimental  (t=+1.032068ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000128650})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489d40] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.133848ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000093b60] Created  (t=+1.164556ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000093b60] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.202806ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000093b60] Created child policy 0xc0004c6d80 of type round_robin  (t=+1.226021ms)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc00061a220 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093b60] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc000129750}  (t=+1.295248ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093b60] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000129750,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.317182ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000093cc0:{{1.1.1.1:1  0xc00061a218 0 <nil>}}]}  (t=+1.347986ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093b60] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0001248d0}  (t=+1.368306ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093b60] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0001248d0,state:READY,stateToAggregate:READY]  (t=+1.38736ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc0001960a0}  (t=+1.424598ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc0001960f0}  (t=+1.560911ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001960f0})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000093480:{{0.0.0.0:0  0xc00061a208 0 <nil>}}]}  (t=+1.678774ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0000b2720}  (t=+1.717047ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000b2720,state:READY,stateToAggregate:READY]  (t=+1.739569ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196140}  (t=+1.766876ms)
    tlogger.go:99: balancer_priority.go:260 [xds] [priority-lb 0xc0004c6800] Switching priority from 1 to 0, because latter became Ready  (t=+1.786161ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196140})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489d40] Shutdown  (t=+104.316956ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0003fe240] resource update: [
          {}
        ]  (t=+104.419361ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+104.467517ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+104.499503ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0003fe240] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"IV\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+104.794983ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6800] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"IV\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+104.914133ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6800] switching to ("priority-0-0", 0) in syncPriority  (t=+104.962679ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489ba0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+105.009708ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000093320] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+105.061722ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc00061a320 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000093320] Created child policy 0xc0004c7280 of type round_robin  (t=+105.142568ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc00061a328 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:CONNECTING Picker:0xc000181ad0}  (t=+105.208196ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000b2720,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc000181ad0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+105.241361ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00023c660:{{2.2.2.2:2  0xc00061a318 0 <nil>}}]}  (t=+105.274851ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc0003407b0}  (t=+105.299309ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003ca00}  (t=+105.301814ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000b2720,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc0003407b0,state:READY,stateToAggregate:READY]  (t=+105.323751ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003ca00})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000545540}  (t=+105.356714ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000545540})
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000270270}  (t=+105.402875ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000270270,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE {"subZone":"III"}:weight:1,picker:0xc0003407b0,state:READY,stateToAggregate:READY]  (t=+105.424945ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000093320] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0002703f0}  (t=+105.448204ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000093320] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000270270,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE {"subZone":"III"}:weight:1,picker:0xc0002703f0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+105.468086ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001961e0}  (t=+105.494154ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000196230}  (t=+105.526585ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001961e0})
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0004c6800] Switching priority from 0 to 1, because former became TransientFailure  (t=+105.590323ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00038c000] Created  (t=+105.621272ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6800] Created child policy 0xc00038c000 of type xds_cluster_impl_experimental  (t=+105.638662ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000380510})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00038c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"IV\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+105.71241ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0004acd00] Created  (t=+105.767778ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004acd00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"IV\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+106.325007ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0004acd00] Created child policy 0xc00028e280 of type round_robin  (t=+106.389694ms)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000010028 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0004acd00] Created child policy 0xc00028e300 of type round_robin  (t=+106.448968ms)
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  0xc000010030 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc4
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004acd00] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc000380cd0}  (t=+106.746354ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004acd00] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000380cd0,state:CONNECTING,stateToAggregate:CONNECTING {"subZone":"IV"}:weight:1,picker:0xc000380de0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+106.966775ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0004acec0:{{1.1.1.1:1  0xc000010018 0 <nil>}}]}  (t=+107.014128ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004acd00] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0004cd0b0}  (t=+107.040622ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc00003c0a0}  (t=+107.056071ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004acd00] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0004cd0b0,state:READY,stateToAggregate:READY {"subZone":"IV"}:weight:1,picker:0xc000380de0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+107.072206ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004acd00] Balancer state update from locality {"subZone":"IV"}, new state: {ConnectivityState:CONNECTING Picker:0xc000380df0}  (t=+107.106406ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004acd00] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0004cd0b0,state:READY,stateToAggregate:READY {"subZone":"IV"}:weight:1,picker:0xc000380df0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+107.132857ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0004acf60:{{3.3.3.3:3  0xc000010020 0 <nil>}}]}  (t=+107.160016ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc0001960a0}  (t=+107.166612ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004acd00] Balancer state update from locality {"subZone":"IV"}, new state: {ConnectivityState:READY Picker:0xc0004cdda0}  (t=+107.181143ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004acd00] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0004cd0b0,state:READY,stateToAggregate:READY {"subZone":"IV"}:weight:1,picker:0xc0004cdda0,state:READY,stateToAggregate:READY]  (t=+107.250975ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc0001960f0}  (t=+107.219295ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6800] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc000196140}  (t=+107.313664ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001960a0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001960f0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196140})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0003fe240] EDS watch canceled on test-cluster-name  (t=+107.426578ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    balancer.go:123: testClientConn: RemoveSubConn(sc4)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489ba0] Shutdown  (t=+107.531205ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    balancer.go:123: testClientConn: RemoveSubConn(sc4)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00038c000] Shutdown  (t=+107.609305ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0003fe240] Shutdown  (t=+107.638162ms)
=== RUN   Test/EDSPriority_RemovesAllLocalities
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00056c000] Created  (t=+54.101µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00056c000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+328.314µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00056c000] EDS watch started on test-cluster-name  (t=+359.824µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056c000] resource update: [
          {}
        ]  (t=+426.014µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00056e180] Created  (t=+455.876µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+480.335µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+504.806µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056c000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+744.453µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+816.795µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e180] switching to ("priority-0-0", 0) in syncPriority  (t=+870.95µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00039e000] Created  (t=+903.415µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e180] Created child policy 0xc00039e000 of type xds_cluster_impl_experimental  (t=+922.047µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+961.344µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066c9e0] Created  (t=+988.814µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066c9e0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.01568ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066c9e0] Created child policy 0xc00056e600 of type round_robin  (t=+1.037018ms)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192630 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066c9e0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc0000891b0}  (t=+1.098275ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066c9e0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000891b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.123523ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066cb40:{{0.0.0.0:0  0xc000192620 0 <nil>}}]}  (t=+1.15047ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066c9e0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0006514a0}  (t=+1.168574ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066c9e0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0006514a0,state:READY,stateToAggregate:READY]  (t=+1.187943ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00003c5a0}  (t=+1.221064ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c640}  (t=+1.236703ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c640})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056c000] resource update: [
          {}
        ]  (t=+1.287759ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056c000] build balancer config: {}  (t=+1.307442ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e180] Received update from resolver, balancer config: {}  (t=+1.321907ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0000899e0})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00039e000] Shutdown  (t=+102.925156ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056c000] resource update: [
          {}
        ]  (t=+103.013581ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+103.041387ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+103.066693ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056c000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+103.298679ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+103.374378ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e180] switching to ("priority-0-0", 0) in syncPriority  (t=+103.40668ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00039f6c0] Created  (t=+103.43147ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e180] Created child policy 0xc00039f6c0 of type xds_cluster_impl_experimental  (t=+103.449123ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039f6c0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+103.48459ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066d700] Created  (t=+103.508457ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d700] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+103.534746ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066d700] Created child policy 0xc00056e800 of type round_robin  (t=+103.556963ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc0001927c8 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c000] Created  (t=+1.103636985s)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e180] Created child policy 0xc00018c000 of type xds_cluster_impl_experimental  (t=+1.103699873s)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.103776395s)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00023c200] Created  (t=+1.103812204s)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00023c200] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.103846466s)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00023c200] Created child policy 0xc0004c6600 of type round_robin  (t=+1.103890024s)
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  0xc00061a008 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00023c200] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc0006a03c0}  (t=+1.103961699s)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00023c200] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0006a03c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.103992932s)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00023c420:{{3.3.3.3:3  0xc00061a000 0 <nil>}}]}  (t=+1.104040922s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc00003ccd0}  (t=+1.10405969s)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00023c200] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc00069e660}  (t=+1.104067883s)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00023c200] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc00069e660,state:READY,stateToAggregate:READY]  (t=+1.104101917s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc000544230}  (t=+1.104131822s)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544230})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00056c000] resource update: [
          {}
        ]  (t=+1.104195092s)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.104216505s)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00056c000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.104351764s)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.104400069s)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0000899d0})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e180] switching to ("priority-0-0", 0) in syncPriority  (t=+1.104447187s)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039f6c0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.104472228s)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d700] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.10449544s)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc00061a158 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c000] Shutdown  (t=+1.205949901s)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d700] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000270750}  (t=+1.206222766s)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d700] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000270750,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.206257116s)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066d860:{{2.2.2.2:2  0xc00061a148 0 <nil>}}]}  (t=+1.206289839s)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d700] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00069f350}  (t=+1.206310286s)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d700] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00069f350,state:READY,stateToAggregate:READY]  (t=+1.206328234s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000544500}  (t=+1.206359502s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544550}  (t=+1.206376246s)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544550})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00056c000] EDS watch canceled on test-cluster-name  (t=+1.217435106s)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00039f6c0] Shutdown  (t=+1.217515787s)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00056c000] Shutdown  (t=+1.217535427s)
=== RUN   Test/EDSPriority_SwitchPriority
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Created  (t=+41.402µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+97.819µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] EDS watch started on test-cluster-name  (t=+117.343µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+167.031µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00056e900] Created  (t=+192.121µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+213.523µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+231.773µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+390.318µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e900] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+450.946µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e900] switching to ("priority-0-0", 0) in syncPriority  (t=+471.744µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00039fd40] Created  (t=+522.991µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e900] Created child policy 0xc00039fd40 of type xds_cluster_impl_experimental  (t=+536.339µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039fd40] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+591.333µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0005da400] Created  (t=+610.492µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005da400] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+631.056µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0005da400] Created child policy 0xc00056eb80 of type round_robin  (t=+647.066µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192ba0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005da400] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000271a60}  (t=+707.927µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005da400] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000271a60,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+728.408µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005da560:{{0.0.0.0:0  0xc000192b98 0 <nil>}}]}  (t=+749.904µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005da400] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0005dfef0}  (t=+765.886µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005da400] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0005dfef0,state:READY,stateToAggregate:READY]  (t=+782.546µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0005445f0}  (t=+786.867µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544640}  (t=+831.412µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544640})
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005da400] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000271f50}  (t=+904.137µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005da400] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000271f50,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+919.871µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00003d310}  (t=+936.549µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc00056e900] Switching priority from 0 to 1, because former became TransientFailure  (t=+950.897µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489860] Created  (t=+970.874µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e900] Created child policy 0xc000489860 of type xds_cluster_impl_experimental  (t=+993.677µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000271610})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.036019ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0005dab40] Created  (t=+1.053536ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005dab40] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.079359ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0005dab40] Created child policy 0xc00056ec00 of type round_robin  (t=+1.099253ms)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000192bb0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005dab40] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc0003805f0}  (t=+1.157867ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005dab40] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0003805f0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.179699ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005daca0:{{1.1.1.1:1  0xc000192ba8 0 <nil>}}]}  (t=+1.212828ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005dab40] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc00067e900}  (t=+1.230269ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005dab40] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc00067e900,state:READY,stateToAggregate:READY]  (t=+1.2497ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-1, new state: {ConnectivityState:CONNECTING Picker:0xc000544690}  (t=+1.272303ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-1, new state: {ConnectivityState:READY Picker:0xc0005446e0}  (t=+1.305665ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0005446e0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+1.391188ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.420185ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.443201ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.461181ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+1.64051ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e900] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-2": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1",
            "priority-0-2"
          ]
        }  (t=+1.709911ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e900] switching to ("priority-0-1", 1) in syncPriority  (t=+1.735949ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.7931ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005dab40] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.823015ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc000192c68 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005dab40] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0003817c0}  (t=+12.439765ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005dab40] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc0003817c0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+12.500503ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00003d900}  (t=+12.547222ms)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc00056e900] Switching priority from 1 to 2, because former became TransientFailure  (t=+12.572724ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489ba0] Created  (t=+12.598711ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e900] Created child policy 0xc000489ba0 of type xds_cluster_impl_experimental  (t=+12.613897ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0003814f0})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489ba0] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+12.670252ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0005db980] Created  (t=+12.692514ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005db980] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+12.716448ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0005db980] Created child policy 0xc00056ee80 of type round_robin  (t=+12.736251ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc000192c78 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005db980] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:CONNECTING Picker:0xc000381e30}  (t=+12.795131ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005db980] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc000381e30,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+12.814848ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005dbae0:{{2.2.2.2:2  0xc000192c70 0 <nil>}}]}  (t=+12.841902ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005db980] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc0004ccae0}  (t=+12.858197ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005db980] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc0004ccae0,state:READY,stateToAggregate:READY]  (t=+12.872774ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-2, new state: {ConnectivityState:CONNECTING Picker:0xc0001960a0}  (t=+12.897337ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e900] Balancer state update from locality priority-0-2, new state: {ConnectivityState:READY Picker:0xc0001960f0}  (t=+12.946076ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001960f0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+13.031558ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+13.056972ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+13.078495ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+13.596306ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e900] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-0-1"
          ]
        }  (t=+13.755651ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00003d900})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e900] switching to ("priority-0-1", 1) in syncPriority  (t=+14.061811ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+14.105753ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005dab40] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+14.146534ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc00061a018 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489ba0] Shutdown  (t=+114.806076ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] EDS watch canceled on test-cluster-name  (t=+114.85733ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00039fd40] Shutdown  (t=+114.91223ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489860] Shutdown  (t=+114.944545ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Shutdown  (t=+114.955621ms)
=== RUN   Test/EDS_CircuitBreaking
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00038e000] Created  (t=+128.731µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00038e000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+337.709µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00038e000] EDS watch started on test-cluster-name  (t=+364.799µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00038e000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "maxConcurrentRequests": 50
            }
          ]
        }  (t=+421.179µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00038e000] resource update: [
          {}
        ]  (t=+443.425µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004c6600] Created  (t=+459.821µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+476.094µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00038e000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "maxConcurrentRequests": 50,
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+620.379µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6600] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "maxConcurrentRequests": 50,
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+656.498µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6600] switching to ("priority-0-0", 0) in syncPriority  (t=+674.363µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00018c000] Created  (t=+690.376µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004c6600] Created child policy 0xc00018c000 of type xds_cluster_impl_experimental  (t=+702.876µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "maxConcurrentRequests": 50,
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+727.208µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0004acdc0] Created  (t=+744.326µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004acdc0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+761.846µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0004acdc0] Created child policy 0xc0004c6880 of type round_robin  (t=+777.466µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010070 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004acdc0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000088e80}  (t=+822.307µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004acdc0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000088e80,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+840.824µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0004acf60:{{0.0.0.0:0  0xc000010068 0 <nil>}}]}  (t=+861.377µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0004acdc0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00069eb70}  (t=+875.265µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0004acdc0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00069eb70,state:READY,stateToAggregate:READY]  (t=+888.523µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000196500}  (t=+913.11µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196550}  (t=+925.133µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196550})
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00038e000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "maxConcurrentRequests": 10
            }
          ]
        }  (t=+1.09878ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.116231ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00038e000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "maxConcurrentRequests": 50,
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.202718ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6600] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "maxConcurrentRequests": 50,
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.235783ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6600] switching to ("priority-0-0", 0) in syncPriority  (t=+1.251742ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "maxConcurrentRequests": 50,
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.274191ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004acdc0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.293377ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc0000103d0 Type:0 Metadata:<nil>}])
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00038e000] resource update: [
          {}
        ]  (t=+1.330443ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.345429ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00038e000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "maxConcurrentRequests": 10,
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.437654ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004c6600] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "maxConcurrentRequests": 10,
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.468265ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004c6600] switching to ("priority-0-0", 0) in syncPriority  (t=+1.479626ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00018c000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "maxConcurrentRequests": 10,
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.494143ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0004acdc0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.516231ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000010400 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004c6600] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544000}  (t=+1.544177ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544000})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00038e000] EDS watch canceled on test-cluster-name  (t=+1.68786ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00018c000] Shutdown  (t=+1.715264ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00038e000] Shutdown  (t=+1.723313ms)
=== RUN   Test/EDS_EmptyUpdate
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000274120] Created  (t=+15.524µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000274120] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+53.382µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000274120] EDS watch started on test-cluster-name  (t=+63.798µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000274120] resource update: [
          {}
        ]  (t=+89.889µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00056e200] Created  (t=+101.917µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000274120] build balancer config: {}  (t=+114.423µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e200] Received update from resolver, balancer config: {}  (t=+123.738µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0006a1410})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000274120] resource update: [
          {}
        ]  (t=+153.828µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+163.934µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000274120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+259.73µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+289.563µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e200] switching to ("priority-0-0", 0) in syncPriority  (t=+304.061µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489860] Created  (t=+318.44µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e200] Created child policy 0xc000489860 of type xds_cluster_impl_experimental  (t=+331.599µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+361.436µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066da40] Created  (t=+382.254µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066da40] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+409.757µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066da40] Created child policy 0xc00056e480 of type round_robin  (t=+427.988µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc00061a7a0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066da40] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc0006a1d70}  (t=+477.142µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066da40] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0006a1d70,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+493.025µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066dc20:{{0.0.0.0:0  0xc00061a798 0 <nil>}}]}  (t=+510.204µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066da40] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0005dff20}  (t=+521.089µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066da40] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0005dff20,state:READY,stateToAggregate:READY]  (t=+535.2µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00003c0f0}  (t=+536.712µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c140}  (t=+583.185µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c140})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000274120] resource update: [
          {}
        ]  (t=+630.794µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000274120] build balancer config: {}  (t=+646.113µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e200] Received update from resolver, balancer config: {}  (t=+655.25µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0002703a0})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489860] Shutdown  (t=+827.301µs)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000274120] resource update: [
          {}
        ]  (t=+862.014µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+889.351µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000274120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+977.062µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00056e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.008579ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00056e200] switching to ("priority-0-0", 0) in syncPriority  (t=+1.024417ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00039f520] Created  (t=+1.042916ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00056e200] Created child policy 0xc00039f520 of type xds_cluster_impl_experimental  (t=+1.055345ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039f520] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.079278ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c67a0] Created  (t=+1.093174ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c67a0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.115588ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c67a0] Created child policy 0xc000280180 of type round_robin  (t=+1.132878ms)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192588 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000270da0}  (t=+1.170311ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000270da0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.182409ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6aa0:{{0.0.0.0:0  0xc000192580 0 <nil>}}]}  (t=+1.214794ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00067f200}  (t=+1.228632ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067f200,state:READY,stateToAggregate:READY]  (t=+1.244811ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0005445f0}  (t=+1.251158ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00056e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c410}  (t=+1.282807ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c410})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000274120] EDS watch canceled on test-cluster-name  (t=+1.315409ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00039f520] Shutdown  (t=+1.344515ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000274120] Shutdown  (t=+1.358233ms)
=== RUN   Test/EDS_EndpointsHealth
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0003ff440] Created  (t=+52.802µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0003ff440] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+168.237µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0003ff440] EDS watch started on test-cluster-name  (t=+206.784µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0003ff440] resource update: [
          {}
        ]  (t=+369.83µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000280100] Created  (t=+390.844µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+405.45µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0003ff440] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+525.436µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280100] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+565.206µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280100] switching to ("priority-0-0", 0) in syncPriority  (t=+586.037µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00039e000] Created  (t=+606.117µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000280100] Created child policy 0xc00039e000 of type xds_cluster_impl_experimental  (t=+621.754µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+656.949µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c67a0] Created  (t=+699.438µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c67a0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+727.56µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c67a0] Created child policy 0xc000280500 of type round_robin  (t=+747.552µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192820 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc000192830 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c67a0] Created child policy 0xc000280580 of type round_robin  (t=+795.166µs)
    balancer.go:107: testClientConn: NewSubConn([{6.6.6.6:6  0xc000192840 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:107: testClientConn: NewSubConn([{8.8.8.8:8  0xc000192850 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000270b20}  (t=+852.946µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000270b20,state:CONNECTING,stateToAggregate:CONNECTING {"subZone":"II"}:weight:1,picker:0xc000270c90,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+875.438µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6ba0:{{0.0.0.0:0  0xc0001927f8 0 <nil>}}]}  (t=+897.959µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00067f9b0}  (t=+913.195µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067f9b0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000270c90,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+933.485µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00067f9b0}  (t=+954.997µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067f9b0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000270c90,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+978.896µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0001960a0}  (t=+938.713µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6ba0:{{0.0.0.0:0  0xc0001927f8 0 <nil>}} 0xc0001c6be0:{{2.2.2.2:2  0xc000192800 0 <nil>}}]}  (t=+1.006223ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001960f0}  (t=+1.04297ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00067fcb0}  (t=+1.044828ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001960f0})
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067fcb0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000270c90,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.098932ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196140}  (t=+1.063865ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc000270ca0}  (t=+1.136441ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196140})
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067fcb0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000270ca0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.190396ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031c0a0}  (t=+1.16792ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6c80:{{6.6.6.6:6  0xc000192808 0 <nil>}}]}  (t=+1.220571ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003d040}  (t=+1.237092ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031c0a0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003d040})
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0004716b0}  (t=+1.251416ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067fcb0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc0004716b0,state:READY,stateToAggregate:READY]  (t=+1.316351ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0004716b0}  (t=+1.342869ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067fcb0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc0004716b0,state:READY,stateToAggregate:READY]  (t=+1.361524ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196280}  (t=+1.365506ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6c80:{{6.6.6.6:6  0xc000192808 0 <nil>}} 0xc0001c6cc0:{{8.8.8.8:8  0xc000192810 0 <nil>}}]}  (t=+1.389081ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c67a0] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc0003404b0}  (t=+1.408554ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196280})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001962d0}  (t=+1.413056ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001962d0})
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c67a0] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00067fcb0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc0003404b0,state:READY,stateToAggregate:READY]  (t=+1.429825ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003d180}  (t=+1.553797ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003d180})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0003ff440] EDS watch canceled on test-cluster-name  (t=+1.602163ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00039e000] Shutdown  (t=+2.341784ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0003ff440] Shutdown  (t=+2.357344ms)
=== RUN   Test/EDS_OneLocality
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000222120] Created  (t=+93.748µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000222120] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+255.761µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000222120] EDS watch started on test-cluster-name  (t=+270.384µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000222120] resource update: [
          {}
        ]  (t=+300.691µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000280180] Created  (t=+315.582µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+328.352µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000222120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+420.936µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+446.244µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280180] switching to ("priority-0-0", 0) in syncPriority  (t=+459.545µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00039e000] Created  (t=+473.417µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000280180] Created child policy 0xc00039e000 of type xds_cluster_impl_experimental  (t=+482.861µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+499.889µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0001c6c00] Created  (t=+512.082µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6c00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+527.545µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0001c6c00] Created child policy 0xc000280500 of type round_robin  (t=+538.811µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000192408 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc000270b70}  (t=+575.681µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000270b70,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+589.559µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6da0:{{0.0.0.0:0  0xc000192400 0 <nil>}}]}  (t=+605.39µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc000650540}  (t=+615.614µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000650540,state:READY,stateToAggregate:READY]  (t=+626.096µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00003c0a0}  (t=+639.954µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c0f0}  (t=+665.977µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c0f0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000222120] resource update: [
          {}
        ]  (t=+706.322µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+716.477µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000222120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+772.629µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+794.837µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280180] switching to ("priority-0-0", 0) in syncPriority  (t=+806.051µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+820.569µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6c00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+839.133µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc0001926f8 Type:0 Metadata:<nil>}])
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000192708 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc000650540}  (t=+878.664µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000650540,state:READY,stateToAggregate:READY]  (t=+889.419µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c6da0:{{0.0.0.0:0  0xc0001925d0 0 <nil>}} 0xc0001c75a0:{{1.1.1.1:1  0xc0001925f0 0 <nil>}}]}  (t=+905.24µs)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc000651410}  (t=+913.94µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c140}  (t=+917.697µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000651410,state:READY,stateToAggregate:READY]  (t=+922.069µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c140})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031c6e0}  (t=+936.582µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031c6e0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000222120] resource update: [
          {}
        ]  (t=+992.722µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.004265ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000222120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.068123ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.090118ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280180] switching to ("priority-0-0", 0) in syncPriority  (t=+1.100762ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.114897ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6c00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.130399ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc0001927c8 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001c75a0:{{1.1.1.1:1  0xc0001927c0 0 <nil>}}]}  (t=+1.181704ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00069e150}  (t=+1.191588ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00069e150,state:READY,stateToAggregate:READY]  (t=+1.200842ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031c8c0}  (t=+1.212584ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031c8c0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000222120] resource update: [
          {}
        ]  (t=+1.238706ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.247106ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000222120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.301498ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.325107ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280180] switching to ("priority-0-0", 0) in syncPriority  (t=+1.335323ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.348967ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6c00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.364111ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc000192b10 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc00069e150}  (t=+1.411511ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc00069e150,state:READY,stateToAggregate:READY]  (t=+1.429087ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005da800:{{2.2.2.2:2  0xc000192af0 0 <nil>}}]}  (t=+1.444226ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc0004712c0}  (t=+1.454044ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0004712c0,state:READY,stateToAggregate:READY]  (t=+1.464026ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005da800:{{2.2.2.2:2  0xc000192af0 0 <nil>}}]}  (t=+1.481899ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0001c6c00] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc000471740}  (t=+1.498235ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031caa0}  (t=+1.464797ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031caf0}  (t=+1.526103ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0001c6c00] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000471740,state:READY,stateToAggregate:READY]  (t=+1.511952ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031caa0})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00003c2d0}  (t=+1.559509ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031caf0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc00003c2d0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000222120] resource update: [
          {}
        ]  (t=+1.647974ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+1.668146ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000222120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "dropCategories": [
                      {
                        "Category": "test-drop",
                        "RequestsPerMillion": 500000
                      }
                    ],
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.7769ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "dropCategories": [
                      {
                        "Category": "test-drop",
                        "RequestsPerMillion": 500000
                      }
                    ],
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.818696ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280180] switching to ("priority-0-0", 0) in syncPriority  (t=+1.836256ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "dropCategories": [
            {
              "Category": "test-drop",
              "RequestsPerMillion": 500000
            }
          ],
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.860146ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6c00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.913153ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc2, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc00061a090 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196460}  (t=+1.953721ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196460})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000222120] resource update: [
          {}
        ]  (t=+2.056924ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+2.072503ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000222120] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+2.160727ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000280180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+2.195699ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000280180] switching to ("priority-0-0", 0) in syncPriority  (t=+2.21105ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00039e000] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+2.2371ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0001c6c00] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+2.260214ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc2, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc00061a4d0 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000280180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196690}  (t=+2.295757ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196690})
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000222120] EDS watch canceled on test-cluster-name  (t=+2.320518ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00039e000] Shutdown  (t=+2.367738ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000222120] Shutdown  (t=+2.381491ms)
=== RUN   Test/EDS_TwoLocalities
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Created  (t=+27.25µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+58.175µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] EDS watch started on test-cluster-name  (t=+69.979µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+116.082µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00015e200] Created  (t=+133.467µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+147.402µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+271.754µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+311.282µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+329.269µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489a00] Created  (t=+345.573µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00015e200] Created child policy 0xc000489a00 of type xds_cluster_impl_experimental  (t=+448.673µs)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+485.285µs)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00066d220] Created  (t=+537.114µs)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+563.376µs)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066d220] Created child policy 0xc00015e300 of type round_robin  (t=+600.122µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc00061a5b8 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc0000897b0}  (t=+771.222µs)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0000897b0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+796.998µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+821.87µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+842.54µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00031cb40}  (t=+841.098µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+974.593µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+1.019407ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+1.04333ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.071509ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.094574ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc00061a620 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066d220] Created child policy 0xc00015e600 of type round_robin  (t=+1.13678ms)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc00061a628 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066d420:{{0.0.0.0:0  0xc00061a610 0 <nil>}}]}  (t=+1.178265ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc000318ba0}  (t=+1.193542ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000318ba0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc0006a02c0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.205591ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:CONNECTING Picker:0xc0006a02d0}  (t=+1.225491ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000318ba0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc0006a02d0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.241581ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00066da20:{{1.1.1.1:1  0xc00061a618 0 <nil>}}]}  (t=+1.262104ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544140}  (t=+1.270133ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"II"}, new state: {ConnectivityState:READY Picker:0xc000318e40}  (t=+1.274592ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544140})
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000318ba0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000318e40,state:READY,stateToAggregate:READY]  (t=+1.318597ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544230}  (t=+1.296177ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544230})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00021e0a0}  (t=+1.369517ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00021e0a0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+2.01673ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+2.046108ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+2.187341ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+2.225034ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+2.241842ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+2.264883ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+2.288859ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00066d220] Created child policy 0xc000280800 of type round_robin  (t=+2.317385ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc000192540 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000192548 Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc000192550 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:CONNECTING Picker:0xc0005cc920}  (t=+2.37497ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000318ba0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000318e40,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc0005cc920,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+2.391031ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005da4a0:{{2.2.2.2:2  0xc000192408 0 <nil>}}]}  (t=+2.410518ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc00069f1a0}  (t=+2.423234ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000196140}  (t=+2.426275ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000318ba0,state:READY,stateToAggregate:READY {"subZone":"II"}:weight:1,picker:0xc000318e40,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc00069f1a0,state:READY,stateToAggregate:READY]  (t=+2.43782ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000196140})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031c3c0}  (t=+2.460269ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031c3c0})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+2.500367ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+2.511751ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+2.58805ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+2.616349ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+2.632499ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+2.651771ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+2.673606ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc000192660 Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc2, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc000192688 Type:0 Metadata:<nil>}])
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000318e40,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc00069f1a0,state:READY,stateToAggregate:READY]  (t=+2.712742ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00031c910}  (t=+2.748536ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00031c910})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+102.966765ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+102.992711ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+103.119304ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+103.150984ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+103.166306ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+103.21173ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+103.24249ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc000532080 Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc2, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc000532088 Type:0 Metadata:<nil>}])
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  0xc000532090 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc00069f1a0}  (t=+103.327799ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000318e40,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc00069f1a0,state:READY,stateToAggregate:READY]  (t=+103.345451ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005064c0:{{3.3.3.3:3  0xc000532078 0 <nil>}} 0xc0005da4a0:{{2.2.2.2:2  0xc000532070 0 <nil>}}]}  (t=+103.365914ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00066d220] Balancer state update from locality {"subZone":"III"}, new state: {ConnectivityState:READY Picker:0xc0005df200}  (t=+103.382781ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001966e0}  (t=+103.387694ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"II"}:weight:1,picker:0xc000318e40,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc0005df200,state:READY,stateToAggregate:READY]  (t=+103.397759ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001966e0})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00021e320}  (t=+103.42173ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00021e320})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+103.752499ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+103.763837ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 2,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+103.835847ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"II\"}": {
                              "weight": 2,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            },
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+103.862647ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+103.874994ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"II\"}": {
                    "weight": 2,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  },
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+103.892592ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"II\"}": {
              "weight": 2,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            },
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+103.914753ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc000532148 Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc2, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc000532150 Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc3, [{Addr:3.3.3.3:3 ServerName: Attributes:0xc000532158 Type:0 Metadata:<nil>}])
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"II"}:weight:2,picker:0xc000318e40,state:READY,stateToAggregate:READY {"subZone":"III"}:weight:1,picker:0xc0005df200,state:READY,stateToAggregate:READY]  (t=+103.978594ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00021e820}  (t=+103.993549ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00021e820})
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] resource update: [
          {}
        ]  (t=+104.027423ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+104.036927ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+104.093966ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"III\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+104.116491ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e200] switching to ("priority-0-0", 0) in syncPriority  (t=+104.127672ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"III\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+104.14298ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00066d220] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"III\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+104.166747ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc2, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc0005321f0 Type:0 Metadata:<nil>}])
    balancer.go:132: testClientConn: UpdateAddresses(sc3, [{Addr:3.3.3.3:3 ServerName: Attributes:0xc0005321f8 Type:0 Metadata:<nil>}])
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00066d220] Child pickers with config: map[{"subZone":"III"}:weight:1,picker:0xc0005df200,state:READY,stateToAggregate:READY]  (t=+104.205354ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00021eb40}  (t=+104.218248ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00021eb40})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] EDS watch canceled on test-cluster-name  (t=+204.403194ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc3)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489a00] Shutdown  (t=+204.44744ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0001c2ea0] Shutdown  (t=+204.458031ms)
=== RUN   Test/ErrorFromResolver
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000243200] Created  (t=+29.811µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000243200] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "test-eds-service-name"
            }
          ]
        }  (t=+95.801µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000243200] EDS watch started on test-eds-service-name  (t=+115.944µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000243200] resource update: [
          {}
        ]  (t=+198.982µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000243200] build balancer config: {}  (t=+328.528µs)
    tlogger.go:99: clusterresolver.go:244 [xds] [xds-cluster-resolver-lb 0xc000243200] Received error: connection error  (t=+368.814µs)
    tlogger.go:99: clusterresolver.go:244 [xds] [xds-cluster-resolver-lb 0xc000243200] Received error: clusterResolverBalancer resource not found error  (t=+20.569207ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000243200] EDS watch canceled on test-eds-service-name  (t=+20.593624ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000243200] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "test-eds-service-name"
            }
          ]
        }  (t=+20.626106ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000243200] EDS watch started on test-eds-service-name  (t=+20.637255ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000243200] build balancer config: {}  (t=+20.655326ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000243200] EDS watch canceled on test-eds-service-name  (t=+20.663007ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000243200] Shutdown  (t=+20.669581ms)
=== RUN   Test/ErrorFromXDSClientUpdate
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000242120] Created  (t=+11.061µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000242120] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "test-eds-service-name"
            }
          ]
        }  (t=+48.679µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000242120] EDS watch started on test-eds-service-name  (t=+57.769µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000242120] resource update: [
          {}
        ]  (t=+80.886µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000242120] build balancer config: {}  (t=+93.912µs)
    tlogger.go:99: clusterresolver.go:183 [xds] [xds-cluster-resolver-lb 0xc000242120] Watch error from xds-client 0xc00014e160: connection error  (t=+112.737µs)
    tlogger.go:99: clusterresolver.go:244 [xds] [xds-cluster-resolver-lb 0xc000242120] Received error: connection error  (t=+128.19µs)
    tlogger.go:99: clusterresolver.go:183 [xds] [xds-cluster-resolver-lb 0xc000242120] Watch error from xds-client 0xc00014e160: clusterResolverBalancer resource not found error  (t=+20.335706ms)
    tlogger.go:99: clusterresolver.go:244 [xds] [xds-cluster-resolver-lb 0xc000242120] Received error: clusterResolverBalancer resource not found error  (t=+20.362062ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000242120] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "test-eds-service-name"
            }
          ]
        }  (t=+30.467743ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000242120] build balancer config: {}  (t=+30.497038ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000242120] EDS watch canceled on test-eds-service-name  (t=+40.557869ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000242120] Shutdown  (t=+40.590484ms)
=== RUN   Test/FallbackToDNS
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000396000] Created  (t=+327.367µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000396000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            }
          ]
        }  (t=+409.983µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000396000] EDS watch started on test-cluster-name  (t=+446.619µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000396000] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name"
            },
            {
              "type": "LOGICAL_DNS",
              "dnsHostname": "dns.com"
            }
          ]
        }  (t=+534.036µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000396000] resource update: [
          {},
          {}
        ]  (t=+607.388µs)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00015e080] Created  (t=+636.605µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+675.713µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000396000] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "childPolicy": [
                      {
                        "pick_first": {}
                      }
                    ]
                  }
                }
              ]
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-1"
          ]
        }  (t=+914.69µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00015e080] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"I\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "priority-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "childPolicy": [
                      {
                        "pick_first": {}
                      }
                    ]
                  }
                }
              ]
            }
          },
          "priorities": [
            "priority-0-0",
            "priority-1"
          ]
        }  (t=+972.508µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00015e080] switching to ("priority-0-0", 0) in syncPriority  (t=+998.566µs)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489860] Created  (t=+1.044122ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00015e080] Created child policy 0xc000489860 of type xds_cluster_impl_experimental  (t=+1.067426ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489860] Received update from resolver, balancer config: {
          "cluster": "test-cluster-name",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"I\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+1.105726ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000092920] Created  (t=+1.12872ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000092920] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"I\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+1.154005ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000092920] Created child policy 0xc00015e600 of type round_robin  (t=+1.175575ms)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc00061a0c8 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000092920] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:CONNECTING Picker:0xc0006a0230}  (t=+1.259219ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000092920] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0006a0230,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+1.284749ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000092a80:{{0.0.0.0:0  0xc00061a0b8 0 <nil>}}]}  (t=+1.315122ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000092920] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:READY Picker:0xc000318f90}  (t=+1.333833ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000092920] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc000318f90,state:READY,stateToAggregate:READY]  (t=+1.353022ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000544a50}  (t=+1.382494ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000544aa0}  (t=+1.396813ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544aa0})
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000092920] Balancer state update from locality {"subZone":"I"}, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0006a08b0}  (t=+1.442742ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000092920] Child pickers with config: map[{"subZone":"I"}:weight:1,picker:0xc0006a08b0,state:TRANSIENT_FAILURE,stateToAggregate:TRANSIENT_FAILURE]  (t=+1.460118ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-0-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000544b40}  (t=+1.477198ms)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc00015e080] Switching priority from 0 to 1, because former became TransientFailure  (t=+1.490935ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000489a00] Created  (t=+1.508978ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00015e080] Created child policy 0xc000489a00 of type xds_cluster_impl_experimental  (t=+1.535822ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000181c80})
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000489a00] Received update from resolver, balancer config: {
          "childPolicy": [
            {
              "pick_first": {}
            }
          ]
        }  (t=+1.564315ms)
    balancer.go:107: testClientConn: NewSubConn([{3.1.4.1:5  0xc00061a0d8 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:false}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-1, new state: {ConnectivityState:IDLE Picker:0xc000544c30}  (t=+1.613362ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-1, new state: {ConnectivityState:CONNECTING Picker:0xc000544c80}  (t=+11.875983ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-1, new state: {ConnectivityState:READY Picker:0xc000544cd0}  (t=+11.918119ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000544c80})
    balancer.go:141: testClientConn: UpdateState({READY 0xc000544cd0})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00015e080] Balancer state update from locality priority-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000196500}  (t=+12.024743ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000396000] EDS watch canceled on test-cluster-name  (t=+12.045614ms)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000196500})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489860] Shutdown  (t=+12.127763ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000489a00] Shutdown  (t=+12.148534ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000396000] Shutdown  (t=+12.16784ms)
=== RUN   Test/ResourceResolverChangeEDSName
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-eds-service-name  (t=+20.818µs)
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-name  (t=+173.909µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-eds-service-name  (t=+187.944µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-name  (t=+20.458655ms)
=== RUN   Test/ResourceResolverChangeFromEDSToDNS
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-name  (t=+53.09µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-name  (t=+432.228µs)
=== RUN   Test/ResourceResolverChangePriority
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-1  (t=+26.241µs)
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-2  (t=+41.965µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-1  (t=+20.385647ms)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-2  (t=+20.414522ms)
=== RUN   Test/ResourceResolverDNSResolveNow
=== RUN   Test/ResourceResolverEDSAndDNS
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-name  (t=+28.057µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-name  (t=+10.338996ms)
=== RUN   Test/ResourceResolverError
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-name  (t=+91.927µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-name  (t=+276.445µs)
=== RUN   Test/ResourceResolverNoChangeNoUpdate
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-1  (t=+21.47µs)
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-2  (t=+36.737µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-1  (t=+30.713924ms)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-2  (t=+30.746892ms)
=== RUN   Test/ResourceResolverOneDNSResource
=== RUN   Test/ResourceResolverOneDNSResource/watch_DNS
=== RUN   Test/ResourceResolverOneEDSResource
=== RUN   Test/ResourceResolverOneEDSResource/watch_EDS
=== CONT  Test/ResourceResolverOneEDSResource
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-eds-service-name  (t=+31.435µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-eds-service-name  (t=+134.922µs)
=== RUN   Test/ResourceResolverOneEDSResource/watch_EDS_no_EDS_name
=== CONT  Test/ResourceResolverOneEDSResource
    tlogger.go:99: resource_resolver.go:226 EDS watch started on test-cluster-name  (t=+172.764µs)
    tlogger.go:99: resource_resolver.go:243 EDS watch canceled on test-cluster-name  (t=+260.932µs)
=== RUN   Test/SubConnStateChange
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000242360] Created  (t=+31.47µs)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000242360] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "test-cluster-name",
              "edsServiceName": "test-eds-service-name"
            }
          ]
        }  (t=+158.204µs)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000242360] EDS watch started on test-eds-service-name  (t=+261.82µs)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000242360] resource update: [
          {}
        ]  (t=+296.942µs)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+314.857µs)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000242360] build balancer config: {
          "children": {
            "priority-0-1": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "test-cluster-name",
                    "edsServiceName": "test-eds-service-name",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"zone\":\"zone\"}": {
                              "weight": 100,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-1"
          ]
        }  (t=+435.879µs)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000242360] EDS watch canceled on test-eds-service-name  (t=+469.206µs)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000242360] Shutdown  (t=+480.196µs)
--- PASS: Test (3.01s)
    --- PASS: Test/ClientWatchEDS (0.00s)
    --- PASS: Test/EDSPriority_FirstPriorityRemoved (0.00s)
    --- PASS: Test/EDSPriority_HighPriorityAllUnhealthy (0.00s)
    --- PASS: Test/EDSPriority_HighPriorityNoEndpoints (0.00s)
    --- PASS: Test/EDSPriority_HighPriorityReady (0.02s)
    --- PASS: Test/EDSPriority_HigherDownWhileAddingLower (0.00s)
    --- PASS: Test/EDSPriority_HigherReadyCloseAllLower (0.10s)
    --- PASS: Test/EDSPriority_InitTimeout (1.00s)
    --- PASS: Test/EDSPriority_MultipleLocalities (0.11s)
    --- PASS: Test/EDSPriority_RemovesAllLocalities (1.22s)
    --- PASS: Test/EDSPriority_SwitchPriority (0.12s)
    --- PASS: Test/EDS_CircuitBreaking (0.00s)
    --- PASS: Test/EDS_EmptyUpdate (0.00s)
    --- PASS: Test/EDS_EndpointsHealth (0.05s)
    --- PASS: Test/EDS_OneLocality (0.00s)
    --- PASS: Test/EDS_TwoLocalities (0.20s)
    --- PASS: Test/ErrorFromResolver (0.02s)
    --- PASS: Test/ErrorFromXDSClientUpdate (0.04s)
    --- PASS: Test/FallbackToDNS (0.01s)
    --- PASS: Test/ResourceResolverChangeEDSName (0.02s)
    --- PASS: Test/ResourceResolverChangeFromEDSToDNS (0.00s)
    --- PASS: Test/ResourceResolverChangePriority (0.02s)
    --- PASS: Test/ResourceResolverDNSResolveNow (0.00s)
    --- PASS: Test/ResourceResolverEDSAndDNS (0.01s)
    --- PASS: Test/ResourceResolverError (0.00s)
    --- PASS: Test/ResourceResolverNoChangeNoUpdate (0.03s)
    --- PASS: Test/ResourceResolverOneDNSResource (0.00s)
        --- PASS: Test/ResourceResolverOneDNSResource/watch_DNS (0.00s)
    --- PASS: Test/ResourceResolverOneEDSResource (0.00s)
        --- PASS: Test/ResourceResolverOneEDSResource/watch_EDS (0.00s)
        --- PASS: Test/ResourceResolverOneEDSResource/watch_EDS_no_EDS_name (0.00s)
    --- PASS: Test/SubConnStateChange (0.00s)
=== RUN   TestDiscoveryMechanismTypeMarshalJSON
=== RUN   TestDiscoveryMechanismTypeMarshalJSON/eds
=== RUN   TestDiscoveryMechanismTypeMarshalJSON/dns
--- PASS: TestDiscoveryMechanismTypeMarshalJSON (0.00s)
    --- PASS: TestDiscoveryMechanismTypeMarshalJSON/eds (0.00s)
    --- PASS: TestDiscoveryMechanismTypeMarshalJSON/dns (0.00s)
=== RUN   TestDiscoveryMechanismTypeUnmarshalJSON
=== RUN   TestDiscoveryMechanismTypeUnmarshalJSON/eds
=== RUN   TestDiscoveryMechanismTypeUnmarshalJSON/dns
=== RUN   TestDiscoveryMechanismTypeUnmarshalJSON/error
--- PASS: TestDiscoveryMechanismTypeUnmarshalJSON (0.00s)
    --- PASS: TestDiscoveryMechanismTypeUnmarshalJSON/eds (0.00s)
    --- PASS: TestDiscoveryMechanismTypeUnmarshalJSON/dns (0.00s)
    --- PASS: TestDiscoveryMechanismTypeUnmarshalJSON/error (0.00s)
=== RUN   TestParseConfig
=== RUN   TestParseConfig/empty_json
=== RUN   TestParseConfig/OK_with_one_discovery_mechanism
=== RUN   TestParseConfig/OK_with_multiple_discovery_mechanisms
=== RUN   TestParseConfig/OK_with_picking_policy_round_robin
=== RUN   TestParseConfig/OK_with_picking_policy_ring_hash
=== RUN   TestParseConfig/unsupported_picking_policy
--- PASS: TestParseConfig (0.00s)
    --- PASS: TestParseConfig/empty_json (0.00s)
    --- PASS: TestParseConfig/OK_with_one_discovery_mechanism (0.00s)
    --- PASS: TestParseConfig/OK_with_multiple_discovery_mechanisms (0.00s)
    --- PASS: TestParseConfig/OK_with_picking_policy_round_robin (0.00s)
    --- PASS: TestParseConfig/OK_with_picking_policy_ring_hash (0.00s)
    --- PASS: TestParseConfig/unsupported_picking_policy (0.00s)
=== RUN   TestBuildPriorityConfigJSON
    configbuilder_test.go:168: {
        >>>   "children": {
        >>>     "priority-0-0": {
        >>>       "config": [
        >>>         {
        >>>           "xds_cluster_impl_experimental": {
        >>>             "cluster": "test-cluster-name",
        >>>             "edsServiceName": "service-name-from-parent",
        >>>             "lrsLoadReportingServerName": "test-lrs-server",
        >>>             "maxConcurrentRequests": 314,
        >>>             "dropCategories": [
        >>>               {
        >>>                 "Category": "test-drops",
        >>>                 "RequestsPerMillion": 1
        >>>               }
        >>>             ],
        >>>             "childPolicy": [
        >>>               {
        >>>                 "weighted_target_experimental": {
        >>>                   "targets": {
        >>>                     "{\"zone\":\"test-zone-0\"}": {
        >>>                       "weight": 20,
        >>>                       "childPolicy": [
        >>>                         {
        >>>                           "round_robin": {}
        >>>                         }
        >>>                       ]
        >>>                     },
        >>>                     "{\"zone\":\"test-zone-1\"}": {
        >>>                       "weight": 80,
        >>>                       "childPolicy": [
        >>>                         {
        >>>                           "round_robin": {}
        >>>                         }
        >>>                       ]
        >>>                     }
        >>>                   }
        >>>                 }
        >>>               }
        >>>             ]
        >>>           }
        >>>         }
        >>>       ],
        >>>       "ignoreReresolutionRequests": true
        >>>     },
        >>>     "priority-0-1": {
        >>>       "config": [
        >>>         {
        >>>           "xds_cluster_impl_experimental": {
        >>>             "cluster": "test-cluster-name",
        >>>             "edsServiceName": "service-name-from-parent",
        >>>             "lrsLoadReportingServerName": "test-lrs-server",
        >>>             "maxConcurrentRequests": 314,
        >>>             "dropCategories": [
        >>>               {
        >>>                 "Category": "test-drops",
        >>>                 "RequestsPerMillion": 1
        >>>               }
        >>>             ],
        >>>             "childPolicy": [
        >>>               {
        >>>                 "weighted_target_experimental": {
        >>>                   "targets": {
        >>>                     "{\"zone\":\"test-zone-2\"}": {
        >>>                       "weight": 20,
        >>>                       "childPolicy": [
        >>>                         {
        >>>                           "round_robin": {}
        >>>                         }
        >>>                       ]
        >>>                     },
        >>>                     "{\"zone\":\"test-zone-3\"}": {
        >>>                       "weight": 80,
        >>>                       "childPolicy": [
        >>>                         {
        >>>                           "round_robin": {}
        >>>                         }
        >>>                       ]
        >>>                     }
        >>>                   }
        >>>                 }
        >>>               }
        >>>             ]
        >>>           }
        >>>         }
        >>>       ],
        >>>       "ignoreReresolutionRequests": true
        >>>     },
        >>>     "priority-1": {
        >>>       "config": [
        >>>         {
        >>>           "xds_cluster_impl_experimental": {
        >>>             "childPolicy": [
        >>>               {
        >>>                 "pick_first": {}
        >>>               }
        >>>             ]
        >>>           }
        >>>         }
        >>>       ]
        >>>     }
        >>>   },
        >>>   "priorities": [
        >>>     "priority-0-0",
        >>>     "priority-0-1",
        >>>     "priority-1"
        >>>   ]
        >>> }
--- PASS: TestBuildPriorityConfigJSON (0.00s)
=== RUN   TestBuildPriorityConfig
--- PASS: TestBuildPriorityConfig (0.00s)
=== RUN   TestBuildClusterImplConfigForDNS
--- PASS: TestBuildClusterImplConfigForDNS (0.00s)
=== RUN   TestBuildClusterImplConfigForEDS
--- PASS: TestBuildClusterImplConfigForEDS (0.00s)
=== RUN   TestGroupLocalitiesByPriority
=== RUN   TestGroupLocalitiesByPriority/1_locality_1_priority
=== RUN   TestGroupLocalitiesByPriority/2_locality_1_priority
=== RUN   TestGroupLocalitiesByPriority/1_locality_in_each
=== RUN   TestGroupLocalitiesByPriority/2_localities_in_each_sorted
=== RUN   TestGroupLocalitiesByPriority/2_localities_in_each_needs_to_sort
--- PASS: TestGroupLocalitiesByPriority (0.00s)
    --- PASS: TestGroupLocalitiesByPriority/1_locality_1_priority (0.00s)
    --- PASS: TestGroupLocalitiesByPriority/2_locality_1_priority (0.00s)
    --- PASS: TestGroupLocalitiesByPriority/1_locality_in_each (0.00s)
    --- PASS: TestGroupLocalitiesByPriority/2_localities_in_each_sorted (0.00s)
    --- PASS: TestGroupLocalitiesByPriority/2_localities_in_each_needs_to_sort (0.00s)
=== RUN   TestDedupSortedIntSlice
=== RUN   TestDedupSortedIntSlice/empty
=== RUN   TestDedupSortedIntSlice/no_dup
=== RUN   TestDedupSortedIntSlice/with_dup
--- PASS: TestDedupSortedIntSlice (0.00s)
    --- PASS: TestDedupSortedIntSlice/empty (0.00s)
    --- PASS: TestDedupSortedIntSlice/no_dup (0.00s)
    --- PASS: TestDedupSortedIntSlice/with_dup (0.00s)
=== RUN   TestPriorityLocalitiesToClusterImpl
=== RUN   TestPriorityLocalitiesToClusterImpl/round_robin_as_child,_no_LRS
=== RUN   TestPriorityLocalitiesToClusterImpl/ring_hash_as_child
=== RUN   TestPriorityLocalitiesToClusterImpl/unsupported_child
--- PASS: TestPriorityLocalitiesToClusterImpl (0.00s)
    --- PASS: TestPriorityLocalitiesToClusterImpl/round_robin_as_child,_no_LRS (0.00s)
    --- PASS: TestPriorityLocalitiesToClusterImpl/ring_hash_as_child (0.00s)
    --- PASS: TestPriorityLocalitiesToClusterImpl/unsupported_child (0.00s)
=== RUN   TestLocalitiesToWeightedTarget
=== RUN   TestLocalitiesToWeightedTarget/roundrobin_as_child,_with_LRS
=== RUN   TestLocalitiesToWeightedTarget/roundrobin_as_child,_no_LRS
=== RUN   TestLocalitiesToWeightedTarget/weighted_round_robin_as_child,_no_LRS
--- PASS: TestLocalitiesToWeightedTarget (0.00s)
    --- PASS: TestLocalitiesToWeightedTarget/roundrobin_as_child,_with_LRS (0.00s)
    --- PASS: TestLocalitiesToWeightedTarget/roundrobin_as_child,_no_LRS (0.00s)
    --- PASS: TestLocalitiesToWeightedTarget/weighted_round_robin_as_child,_no_LRS (0.00s)
=== RUN   TestLocalitiesToRingHash
=== RUN   TestLocalitiesToRingHash/with_locality_and_endpoint_weight
=== RUN   TestLocalitiesToRingHash/locality_weight_only
=== RUN   TestLocalitiesToRingHash/endpoint_weight_only
--- PASS: TestLocalitiesToRingHash (0.00s)
    --- PASS: TestLocalitiesToRingHash/with_locality_and_endpoint_weight (0.00s)
    --- PASS: TestLocalitiesToRingHash/locality_weight_only (0.00s)
    --- PASS: TestLocalitiesToRingHash/endpoint_weight_only (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/clusterresolver	(cached)
?   	google.golang.org/grpc/xds/internal/balancer/loadstore	[no test files]
=== RUN   Test
=== RUN   Test/FromMetadata
=== RUN   Test/FromMetadata/nil
=== RUN   Test/FromMetadata/valid
=== RUN   Test/ToMetadata
=== RUN   Test/ToMetadata/nil
=== RUN   Test/ToMetadata/valid
--- PASS: Test (0.00s)
    --- PASS: Test/FromMetadata (0.00s)
        --- PASS: Test/FromMetadata/nil (0.00s)
        --- PASS: Test/FromMetadata/valid (0.00s)
    --- PASS: Test/ToMetadata (0.00s)
        --- PASS: Test/ToMetadata/nil (0.00s)
        --- PASS: Test/ToMetadata/valid (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/orca	(cached)
=== RUN   Test
=== RUN   Test/IgnoreResolveNowBalancerBuilder
=== RUN   Test/Priority_ChildPolicyChange
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c080] Created  (t=+73.572µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+204.665µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c080] switching to ("child-0", 0) in syncPriority  (t=+223.55µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c080] Created child policy 0xc00050c380 of type round_robin  (t=+240.023µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0001a2418 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0004da830}  (t=+294.617µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0001a2418 0 <nil>}}]}  (t=+328.936µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc0005187e0}  (t=+344.82µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0005187e0})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "another-round-robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+394.125µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c080] switching to ("child-0", 0) in syncPriority  (t=+409.837µs)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c080] Created child policy 0xc00050c400 of type another-round-robin  (t=+427.38µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0001a2440 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0004dadb0}  (t=+477.812µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{0.0.0.0:0  0xc0001a2440 0 <nil>}}]}  (t=+494.346µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000518cc0}  (t=+503.553µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000518cc0})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_ChildPolicyUpdatePickerInline
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c480] Created  (t=+9.06µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c480] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "test-inline-update-balancer": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+35.758µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c480] switching to ("child-0", 0) in syncPriority  (t=+46.891µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c480] Created child policy 0xc000519110 of type test-inline-update-balancer  (t=+55.428µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c480] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc0004fcc80}  (t=+68.531µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0004fcc80})
=== RUN   Test/Priority_FirstPriorityUnavailable
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000298000] Created  (t=+41.049µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+252.302µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298000] switching to ("child-0", 0) in syncPriority  (t=+278.191µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298000] Created child policy 0xc00050c380 of type round_robin  (t=+290.113µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0001a2020 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298000] Received update from resolver, balancer config: {}  (t=+320.325µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc0004da8d0})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_HighPriorityNoEndpoints
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000298080] Created  (t=+51.495µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+110.476µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298080] switching to ("child-0", 0) in syncPriority  (t=+132.753µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298080] Created child policy 0xc000298300 of type round_robin  (t=+143.249µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010080 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc00007c3d0}  (t=+179.03µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc000010080 0 <nil>}}]}  (t=+203.62µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc0008122d0}  (t=+217.881µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008122d0})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+321.589µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298080] switching to ("child-0", 0) in syncPriority  (t=+347.189µs)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00007c970}  (t=+365.114µs)
    tlogger.go:99: balancer_child.go:93 [xds] [priority-lb 0xc000298080] failed to update ClientConn state for child child-0: bad resolver state  (t=+374.864µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[]}  (t=+384.599µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:IDLE Picker:0xc00007cb60}  (t=+391.827µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000298080] Switching priority from 0 to 1, because former became TransientFailure  (t=+402.634µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298080] Created child policy 0xc000298380 of type round_robin  (t=+409.071µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00007c320})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000010098 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc00007cca0}  (t=+444.423µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc000010098 0 <nil>}}]}  (t=+456.638µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc0008128d0}  (t=+465.099µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008128d0})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_HighPriorityReady
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c200] Created  (t=+137.059µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c200] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+176.783µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c200] switching to ("child-0", 0) in syncPriority  (t=+219.302µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c200] Created child policy 0xc00050c500 of type round_robin  (t=+243.65µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0001a2028 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c200] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0004da7c0}  (t=+338.644µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0001a2028 0 <nil>}}]}  (t=+360.846µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c200] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc0005187b0}  (t=+373.812µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0005187b0})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c200] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-2": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1",
            "child-2"
          ]
        }  (t=+463.776µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c200] switching to ("child-0", 0) in syncPriority  (t=+486.814µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc0001a22e0 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c200] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+101.064647ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c200] switching to ("child-0", 0) in syncPriority  (t=+101.145541ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000010020 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_HighPriorityToConnectingFromReady
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c680] Created  (t=+39.072µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c680] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+81.411µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c680] switching to ("child-0", 0) in syncPriority  (t=+102.505µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c680] Created child policy 0xc00050c880 of type round_robin  (t=+117.783µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0001a24a0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0004db0d0}  (t=+162.182µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0001a24a0 0 <nil>}}]}  (t=+186.218µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000519140}  (t=+200.581µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000519140})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[]}  (t=+239.878µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0004db4f0}  (t=+251.254µs)
    tlogger.go:99: balancer_priority.go:347 [xds] [priority-lb 0xc00050c680] Switching priority from 0 to 1, because former became TransientFailure  (t=+264.5µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c680] Created child policy 0xc00050c900 of type round_robin  (t=+273.638µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004db020})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0001a24b0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc0004db630}  (t=+380.993µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc0001a24b0 0 <nil>}}]}  (t=+431.101µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc0003f63c0}  (t=+454.421µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0003f63c0})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0004db4f0}  (t=+526.348µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0001a24a0 0 <nil>}}]}  (t=+546.939µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c680] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc0003f7140}  (t=+559.945µs)
    tlogger.go:99: balancer_priority.go:260 [xds] [priority-lb 0xc00050c680] Switching priority from 1 to 0, because latter became Ready  (t=+578.051µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0003f7140})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_HigherDownWhileAddingLower
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000146000] Created  (t=+86.651µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000146000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+270.296µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000146000] switching to ("child-0", 0) in syncPriority  (t=+297.192µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000146000] Created child policy 0xc000146200 of type round_robin  (t=+316.759µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000832010 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146000] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000192d70}  (t=+385.064µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000146000] Switching priority from 0 to 1, because former became TransientFailure  (t=+416.199µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000146000] Created child policy 0xc000146280 of type round_robin  (t=+430.618µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000192b50})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000832018 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146000] Balancer state update from locality child-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000193690}  (t=+477.745µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000193690})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000146000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-2": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1",
            "child-2"
          ]
        }  (t=+529.996µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000193ab0})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000146000] switching to ("child-2", 2) in syncPriority  (t=+560.702µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000146000] Created child policy 0xc000146400 of type round_robin  (t=+571.865µs)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc000832058 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146000] Balancer state update from locality child-2, new state: {ConnectivityState:CONNECTING Picker:0xc000193bb0}  (t=+602.345µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  0xc000832058 0 <nil>}}]}  (t=+624.596µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146000] Balancer state update from locality child-2, new state: {ConnectivityState:READY Picker:0xc000195620}  (t=+641.289µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000195620})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
=== RUN   Test/Priority_HigherReadyCloseAllLower
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000146480] Created  (t=+26.739µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000146480] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-2": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1",
            "child-2"
          ]
        }  (t=+63.609µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000146480] switching to ("child-0", 0) in syncPriority  (t=+89.708µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000146480] Created child policy 0xc000146700 of type round_robin  (t=+102.799µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0008320d0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146480] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000321720}  (t=+151.242µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000146480] Switching priority from 0 to 1, because former became TransientFailure  (t=+172.333µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000146480] Created child policy 0xc000146780 of type round_robin  (t=+183.338µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000321410})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0008320d8 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146480] Balancer state update from locality child-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00007c020}  (t=+253.873µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000146480] Switching priority from 1 to 2, because former became TransientFailure  (t=+295.718µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000146480] Created child policy 0xc000298000 of type round_robin  (t=+325.13µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000321440})
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc0008320e0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146480] Balancer state update from locality child-2, new state: {ConnectivityState:CONNECTING Picker:0xc00007c160}  (t=+377.403µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  0xc0008320e0 0 <nil>}}]}  (t=+399.036µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146480] Balancer state update from locality child-2, new state: {ConnectivityState:READY Picker:0xc00055e240}  (t=+412.236µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00055e240})
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0008320d0 0 <nil>}}]}  (t=+459.608µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000146480] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc00055e630}  (t=+472.697µs)
    tlogger.go:99: balancer_priority.go:260 [xds] [priority-lb 0xc000146480] Switching priority from 2 to 0, because latter became Ready  (t=+486.82µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00055e630})
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_IgnoreReresolutionRequest
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000298000] Created  (t=+31.732µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "test-resolve-now-balancer": {}
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+68.954µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298000] switching to ("child-0", 0) in syncPriority  (t=+87.453µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298000] Created child policy 0xc000298100 of type test-resolve-now-balancer  (t=+100.562µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000832038 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "test-resolve-now-balancer": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+100.237262ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298000] switching to ("child-0", 0) in syncPriority  (t=+100.272651ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000010018 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_IgnoreReresolutionRequestTwoChildren
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c200] Created  (t=+27.323µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c200] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "test-resolve-now-balancer": {}
                }
              ],
              "ignoreReresolutionRequests": true
            },
            "child-1": {
              "config": [
                {
                  "test-resolve-now-balancer": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+65.262µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c200] switching to ("child-0", 0) in syncPriority  (t=+85.322µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c200] Created child policy 0xc00050c500 of type test-resolve-now-balancer  (t=+98.098µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010060 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c200] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc0004dab80}  (t=+133.402µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc00050c200] Switching priority from 0 to 1, because former became TransientFailure  (t=+157.698µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c200] Created child policy 0xc00050c580 of type test-resolve-now-balancer  (t=+168.781µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004da980})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000010068 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_InitTimeout
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c200] Created  (t=+208.35µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c200] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+282.154µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c200] switching to ("child-0", 0) in syncPriority  (t=+331.726µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c200] Created child policy 0xc00050c500 of type round_robin  (t=+353.348µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000848028 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c200] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc000320ca0}  (t=+407.872µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c200] Created child policy 0xc000298000 of type round_robin  (t=+1.001192279s)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000848030 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c200] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc000192240}  (t=+1.001301755s)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc000848030 0 <nil>}}]}  (t=+1.001340553s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c200] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc000195350}  (t=+1.001362883s)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000195350})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_MoveChildToHigherPriority
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c580] Created  (t=+45.906µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c580] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+445.295µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c580] switching to ("child-0", 0) in syncPriority  (t=+513.422µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c580] Created child policy 0xc000298100 of type round_robin  (t=+563.611µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010010 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c580] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc0001241a0}  (t=+688.029µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc000010010 0 <nil>}}]}  (t=+767.074µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c580] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000844330}  (t=+796.288µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000844330})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c580] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-1",
            "child-0"
          ]
        }  (t=+876.577µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0001240e0})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c580] switching to ("child-1", 0) in syncPriority  (t=+913.366µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c580] Created child policy 0xc000298280 of type round_robin  (t=+933.878µs)
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000010038 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c580] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc000124740}  (t=+2.248704ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc000010038 0 <nil>}}]}  (t=+2.294038ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c580] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc0001952f0}  (t=+2.318009ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0001952f0})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_MoveReadyChildToHigherPriority
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00050c080] Created  (t=+34.66µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+105.583µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c080] switching to ("child-0", 0) in syncPriority  (t=+136.33µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c080] Created child policy 0xc00050c500 of type round_robin  (t=+154.86µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000848080 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000193920}  (t=+235.396µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc00050c080] Switching priority from 0 to 1, because former became TransientFailure  (t=+260.792µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00050c080] Created child policy 0xc00050c680 of type round_robin  (t=+274.429µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0001935a0})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc000848088 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc000193a90}  (t=+331.06µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc000848088 0 <nil>}}]}  (t=+354.795µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00050c080] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc000518690}  (t=+372.416µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000518690})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00050c080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-1",
            "child-0"
          ]
        }  (t=+419.12µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00050c080] switching to ("child-1", 0) in syncPriority  (t=+444.569µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc0008480a8 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_ReadyChildRemovedButInCache
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0001f2000] Created  (t=+303.233µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0001f2000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+371.224µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0001f2000] switching to ("child-0", 0) in syncPriority  (t=+401.585µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0001f2000] Created child policy 0xc0001f2100 of type round_robin  (t=+420.615µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0000b8038 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0001f2000] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc00007c2d0}  (t=+480.806µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0000b8038 0 <nil>}}]}  (t=+515.402µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0001f2000] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000844030}  (t=+536.375µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000844030})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0001f2000] Received update from resolver, balancer config: {}  (t=+589.328µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00007c710})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0001f2000] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+100.824176ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0001f2000] switching to ("child-0", 0) in syncPriority  (t=+100.874034ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0001f2000] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000844030}  (t=+100.902172ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc000010018 Type:0 Metadata:<nil>}])
    balancer.go:141: testClientConn: UpdateState({READY 0xc000844030})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_RemoveReadyLowestChild
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0001f2180] Created  (t=+53.155µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0001f2180] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+141.396µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0001f2180] switching to ("child-0", 0) in syncPriority  (t=+207.723µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0001f2180] Created child policy 0xc0001f2380 of type round_robin  (t=+270.535µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0000b8080 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0001f2180] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00007cc20}  (t=+431.382µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc0001f2180] Switching priority from 0 to 1, because former became TransientFailure  (t=+507.619µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0001f2180] Created child policy 0xc0001f2400 of type round_robin  (t=+551.13µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00007ca50})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0000b8088 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0001f2180] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc00007cd60}  (t=+668.674µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc0000b8088 0 <nil>}}]}  (t=+699.843µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0001f2180] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc0008449c0}  (t=+733.609µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008449c0})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0001f2180] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+828.917µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00007cc20})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0001f2180] switching to ("child-0", 0) in syncPriority  (t=+880.567µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc0, [{Addr:0.0.0.0:0 ServerName: Attributes:0xc0000b8098 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
=== RUN   Test/Priority_RemovesAllPriorities
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000298080] Created  (t=+42.012µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+94.763µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298080] switching to ("child-0", 0) in syncPriority  (t=+118.232µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298080] Created child policy 0xc000298300 of type round_robin  (t=+131.067µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0000b8020 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc00007c2f0}  (t=+190.354µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0000b8020 0 <nil>}}]}  (t=+214.604µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000844660}  (t=+228.437µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000844660})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298080] Received update from resolver, balancer config: {}  (t=+262.82µs)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc00007c730})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+1.369798ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298080] switching to ("child-0", 0) in syncPriority  (t=+1.38989ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298080] Created child policy 0xc000298400 of type round_robin  (t=+1.402706ms)
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc0000b8048 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298080] Created child policy 0xc000298480 of type round_robin  (t=+1.003486472s)
    balancer.go:107: testClientConn: NewSubConn([{3.3.3.3:3  0xc0000b8050 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc00007cae0}  (t=+1.003572634s)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{3.3.3.3:3  0xc0000b8050 0 <nil>}}]}  (t=+1.003603656s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc000844d80}  (t=+1.003625577s)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000844d80})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298080] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0"
          ]
        }  (t=+1.00368491s)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00007c720})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298080] switching to ("child-0", 0) in syncPriority  (t=+1.003719417s)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:2.2.2.2:2 ServerName: Attributes:0xc0000b8060 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc00007c9d0}  (t=+1.005020936s)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{2.2.2.2:2  0xc0000b8060 0 <nil>}}]}  (t=+1.005042913s)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298080] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc0008451a0}  (t=+1.005055771s)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0008451a0})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
=== RUN   Test/Priority_SwitchPriority
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000298500] Created  (t=+29.008µs)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298500] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+68.603µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298500] switching to ("child-0", 0) in syncPriority  (t=+92.066µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298500] Created child policy 0xc000298700 of type round_robin  (t=+107.19µs)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc0000b80b8 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-0, new state: {ConnectivityState:CONNECTING Picker:0xc00007d6b0}  (t=+175.734µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc0:{{0.0.0.0:0  0xc0000b80b8 0 <nil>}}]}  (t=+200.283µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-0, new state: {ConnectivityState:READY Picker:0xc000845860}  (t=+215.16µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000845860})
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-0, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc00007da40}  (t=+255.437µs)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000298500] Switching priority from 0 to 1, because former became TransientFailure  (t=+271.592µs)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298500] Created child policy 0xc000298780 of type round_robin  (t=+284.217µs)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc00007d600})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc0000b80c0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-1, new state: {ConnectivityState:CONNECTING Picker:0xc00007db80}  (t=+334.284µs)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc0000b80c0 0 <nil>}}]}  (t=+354.813µs)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc000845b30}  (t=+369.815µs)
    balancer.go:141: testClientConn: UpdateState({READY 0xc000845b30})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298500] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-2": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1",
            "child-2"
          ]
        }  (t=+450.449µs)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298500] switching to ("child-1", 1) in syncPriority  (t=+477.623µs)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc0000b8110 Type:0 Metadata:<nil>}])
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-1, new state: {ConnectivityState:TRANSIENT_FAILURE Picker:0xc000320cd0}  (t=+100.908702ms)
    tlogger.go:99: balancer_priority.go:297 [xds] [priority-lb 0xc000298500] Switching priority from 1 to 2, because former became TransientFailure  (t=+100.940729ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000298500] Created child policy 0xc000298900 of type round_robin  (t=+100.955877ms)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc000320340})
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  0xc0000b8118 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-2, new state: {ConnectivityState:CONNECTING Picker:0xc000320f60}  (t=+101.035551ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc2:{{2.2.2.2:2  0xc0000b8118 0 <nil>}}]}  (t=+101.098428ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-2, new state: {ConnectivityState:READY Picker:0xc0003f63c0}  (t=+101.133178ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc0003f63c0})
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000298500] Received update from resolver, balancer config: {
          "children": {
            "child-0": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            },
            "child-1": {
              "config": [
                {
                  "round_robin": {}
                }
              ]
            }
          },
          "priorities": [
            "child-0",
            "child-1"
          ]
        }  (t=+101.216638ms)
    balancer.go:141: testClientConn: UpdateState({TRANSIENT_FAILURE 0xc000320cd0})
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000298500] switching to ("child-1", 1) in syncPriority  (t=+101.250511ms)
    balancer.go:132: testClientConn: UpdateAddresses(sc1, [{Addr:1.1.1.1:1 ServerName: Attributes:0xc0001a2448 Type:0 Metadata:<nil>}])
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[sc1:{{1.1.1.1:1  0xc0001a2448 0 <nil>}}]}  (t=+102.470633ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000298500] Balancer state update from locality child-1, new state: {ConnectivityState:READY Picker:0xc00037ec00}  (t=+102.493611ms)
    balancer.go:141: testClientConn: UpdateState({READY 0xc00037ec00})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
--- PASS: Test (5.20s)
    --- PASS: Test/IgnoreResolveNowBalancerBuilder (0.10s)
    --- PASS: Test/Priority_ChildPolicyChange (0.00s)
    --- PASS: Test/Priority_ChildPolicyUpdatePickerInline (0.00s)
    --- PASS: Test/Priority_FirstPriorityUnavailable (2.00s)
    --- PASS: Test/Priority_HighPriorityNoEndpoints (0.00s)
    --- PASS: Test/Priority_HighPriorityReady (0.20s)
    --- PASS: Test/Priority_HighPriorityToConnectingFromReady (0.00s)
    --- PASS: Test/Priority_HigherDownWhileAddingLower (0.00s)
    --- PASS: Test/Priority_HigherReadyCloseAllLower (0.00s)
    --- PASS: Test/Priority_IgnoreReresolutionRequest (0.10s)
    --- PASS: Test/Priority_IgnoreReresolutionRequestTwoChildren (0.10s)
    --- PASS: Test/Priority_InitTimeout (1.06s)
    --- PASS: Test/Priority_MoveChildToHigherPriority (0.00s)
    --- PASS: Test/Priority_MoveReadyChildToHigherPriority (0.10s)
    --- PASS: Test/Priority_ReadyChildRemovedButInCache (0.20s)
    --- PASS: Test/Priority_RemoveReadyLowestChild (0.10s)
    --- PASS: Test/Priority_RemovesAllPriorities (1.11s)
    --- PASS: Test/Priority_SwitchPriority (0.10s)
=== RUN   TestParseConfig
=== RUN   TestParseConfig/child_not_found
=== RUN   TestParseConfig/child_not_used
=== RUN   TestParseConfig/good
--- PASS: TestParseConfig (0.00s)
    --- PASS: TestParseConfig/child_not_found (0.00s)
    --- PASS: TestParseConfig/child_not_used (0.00s)
    --- PASS: TestParseConfig/good (0.00s)
=== RUN   TestCompareStringSlice
=== RUN   TestCompareStringSlice/equal
=== RUN   TestCompareStringSlice/not_equal
=== RUN   TestCompareStringSlice/both_empty
=== RUN   TestCompareStringSlice/one_empty
--- PASS: TestCompareStringSlice (0.00s)
    --- PASS: TestCompareStringSlice/equal (0.00s)
    --- PASS: TestCompareStringSlice/not_equal (0.00s)
    --- PASS: TestCompareStringSlice/both_empty (0.00s)
    --- PASS: TestCompareStringSlice/one_empty (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/priority	(cached)
=== RUN   TestParseConfig
=== RUN   TestParseConfig/OK
=== RUN   TestParseConfig/OK_with_default_min
=== RUN   TestParseConfig/OK_with_default_max
=== RUN   TestParseConfig/min_greater_than_max
--- PASS: TestParseConfig (0.00s)
    --- PASS: TestParseConfig/OK (0.00s)
    --- PASS: TestParseConfig/OK_with_default_min (0.00s)
    --- PASS: TestParseConfig/OK_with_default_max (0.00s)
    --- PASS: TestParseConfig/min_greater_than_max (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/ringhash	(cached)
=== RUN   Test_parseConfig
=== RUN   Test_parseConfig/empty_json
=== RUN   Test_parseConfig/OK
--- PASS: Test_parseConfig (0.00s)
    --- PASS: Test_parseConfig/empty_json (0.00s)
    --- PASS: Test_parseConfig/OK (0.00s)
=== RUN   TestWeightedTarget
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc00019e9a0 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc0
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004d6f40})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0004d70a0})
    balancer.go:107: testClientConn: NewSubConn([{1.1.1.1:1  0xc00019ea28 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc1
    balancer.go:107: testClientConn: NewSubConn([{2.2.2.2:2  <nil> 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc2
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004d7500})
    balancer.go:123: testClientConn: RemoveSubConn(sc0)
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004d6200})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0004d65e0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0004d67c0})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0004d69a0})
    balancer.go:123: testClientConn: RemoveSubConn(sc1)
    balancer.go:123: testClientConn: RemoveSubConn(sc2)
    balancer.go:107: testClientConn: NewSubConn([{0.0.0.0:0  0xc000010038 0 <nil>}], {CredsBundle:<nil> HealthCheckEnabled:true}) => sc3
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004d6d40})
    balancer.go:141: testClientConn: UpdateState({CONNECTING 0xc0004d6f00})
    balancer.go:141: testClientConn: UpdateState({READY 0xc0004d7070})
--- PASS: TestWeightedTarget (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/balancer/weightedtarget	(cached)
?   	google.golang.org/grpc/xds/internal/balancer/weightedtarget/weightedaggregator	[no test files]
?   	google.golang.org/grpc/xds/internal/httpfilter	[no test files]
=== RUN   Test
=== RUN   Test/FaultInjection_MaxActiveFaults
    tlogger.go:99: server.go:88 [xds-e2e] Created new snapshot cache...  (t=+149.933µs)
    tlogger.go:99: server.go:102 [xds-e2e] Registered Aggregated Discovery Service (ADS)...  (t=+1.532749ms)
    tlogger.go:99: server.go:106 [xds-e2e] xDS management server serving at: 127.0.0.1:61960...  (t=+1.56914ms)
    tlogger.go:99: bootstrap.go:80 [internal/xds] Created bootstrap file at "/var/folders/cl/f8vhjmb14694s95xvbb2z_nh00rk43/T/test_xds_bootstrap_942539294" with contents: {
          "xds_servers": [
            {
              "server_uri": "127.0.0.1:61960",
              "channel_creds": [
                {
                  "type": "insecure"
                }
              ],
              "server_features": [
                "xds_v3"
              ]
            }
          ],
          "node": {
            "id": "f7d0906e-6adc-4134-b677-25cca692017a"
          },
          "server_listener_resource_name_template": "grpc/server"
        }
          (t=+2.059842ms)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+5.781098ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+5.803708ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+5.84566ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000485a00] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice}  (t=+5.889569ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61960",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "f7d0906e-6adc-4134-b677-25cca692017a",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+6.474949ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+6.509645ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+6.530913ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61960  <nil> 0 <nil>}] <nil> <nil>}  (t=+6.560471ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+6.585932ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+6.600486ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000246b00] Created ClientConn to xDS management server: 127.0.0.1:61960  (t=+6.639361ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000246b00] Created  (t=+6.661523ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000485a00] Watch started on resource name myservice with xds-client 0x22751b0  (t=+6.689927ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+6.712923ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61960" to connect  (t=+6.787265ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+6.818161ms)
    tlogger.go:99: syscall_nonlinux.go:38 [core] CPU time info is unavailable on non-linux or appengine environment.  (t=+7.061689ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+7.385029ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+7.430365ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000246b00] ADS stream created  (t=+7.503411ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice] version "" with version "1"  (t=+8.005415ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+8.68403ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000246b00] Resource with name: myservice, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice"
                    },
                    "httpFilters": [
                      {
                        "name": "fault",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "delay": {
                            "fixedDelay": "1s",
                            "percentage": {
                              "numerator": 100
                            }
                          },
                          "maxActiveFaults": 2
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice"
              },
              "httpFilters": [
                {
                  "name": "fault",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "delay": {
                      "fixedDelay": "1s",
                      "percentage": {
                        "numerator": 100
                      }
                    },
                    "maxActiveFaults": 2
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+9.176066ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: ListenerResource, version: 1, nonce: 1  (t=+9.448346ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000485a00] received LDS update: {
          "RouteConfigName": "route-myservice",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CglteXNlcnZpY2Ua+gIa5AIKLWVudm95LmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlciKyAgpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISyAEqXwoFZmF1bHQiVgpEdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5mYXVsdC52My5IVFRQRmF1bHQSDgoIIgIIZBoCCAEyAggCKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFQoCGgASD3JvdXRlLW15c2VydmljZToRZmlsdGVyLWNoYWluLW5hbWWaAbUCCrICCmV0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlchLIASpfCgVmYXVsdCJWCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIOCggiAghkGgIIATICCAIqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoVCgIaABIPcm91dGUtbXlzZXJ2aWNl"
          }
        }, err: <nil>  (t=+9.560828ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 1 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice] from nodeID "f7d0906e-6adc-4134-b677-25cca692017a", version "1"  (t=+9.951349ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice] version "" with version "1"  (t=+10.083657ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+10.940101ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000246b00] Resource with name: route-myservice, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice",
          "virtualHosts": [
            {
              "domains": [
                "myservice"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice"
                  }
                }
              ]
            }
          ]
        }.  (t=+11.131659ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: RouteConfigResource, version: 1, nonce: 2  (t=+11.20036ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000485a00] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "Cg9yb3V0ZS1teXNlcnZpY2USJxIJbXlzZXJ2aWNlGhoKAwoBLxITChFjbHVzdGVyLW15c2VydmljZQ=="
          }
        }, err: <nil>  (t=+11.263729ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 2 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice] from nodeID "f7d0906e-6adc-4134-b677-25cca692017a", version "1"  (t=+11.30432ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000485a00] Received update on resource myservice from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+11.385212ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0005343e0 0xc000112468}  (t=+11.461551ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+11.477255ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+11.489229ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000534820] Created  (t=+11.515848ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000534820] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0005343e0 Attributes:0xc000112468}  (t=+11.558719ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0006120f0] Created  (t=+11.595387ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0006120f0] xDS credentials in use: false  (t=+11.610662ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000534820] Created child policy 0xc0006120f0 of type cds_experimental  (t=+11.629134ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0006120f0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice"
        }  (t=+11.646754ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0006120f0] CDS watch started on cluster-myservice  (t=+11.690874ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice] version "" with version "1"  (t=+11.834337ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+12.746516ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000246b00] Resource with name: cluster-myservice, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice"
          }
        }  (t=+12.894337ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: ClusterResource, version: 1, nonce: 3  (t=+12.988175ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0006120f0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice",
            "EDSServiceName": "endpoints-myservice",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChFjbHVzdGVyLW15c2VydmljZRoZCgIaABITZW5kcG9pbnRzLW15c2VydmljZRAD"
            }
          }
        ], security config: null  (t=+13.029433ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] Created  (t=+13.067781ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0006120f0] Created child policy 0xc0000e70e0 of type cluster_resolver_experimental  (t=+13.083525ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 3 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice] from nodeID "f7d0906e-6adc-4134-b677-25cca692017a", version "1"  (t=+13.093636ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice",
              "edsServiceName": "endpoints-myservice"
            }
          ]
        }  (t=+13.162354ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] EDS watch started on endpoints-myservice  (t=+13.183629ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice] version "" with version "1"  (t=+13.288729ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+13.511987ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000246b00] Resource with name: endpoints-myservice, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61961
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+13.647499ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: EndpointsResource, version: 1, nonce: 4  (t=+13.763343ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] resource update: [
          {}
        ]  (t=+13.786876ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004a8380] Created  (t=+13.81603ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+13.849371ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 4 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice] from nodeID "f7d0906e-6adc-4134-b677-25cca692017a", version "1"  (t=+13.864668ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice",
                    "edsServiceName": "endpoints-myservice",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+14.018841ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004a8380] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice",
                    "edsServiceName": "endpoints-myservice",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+14.063283ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004a8380] switching to ("priority-0-0", 0) in syncPriority  (t=+14.099552ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc00016c000] Created  (t=+14.133208ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004a8380] Created child policy 0xc00016c000 of type xds_cluster_impl_experimental  (t=+14.148142ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc00016c000] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice",
          "edsServiceName": "endpoints-myservice",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+14.177087ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0005353a0] Created  (t=+14.200242ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005353a0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+14.220638ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0005353a0] Created child policy 0xc0004a8580 of type round_robin  (t=+14.241205ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+14.280828ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61961" to connect  (t=+14.296457ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005353a0] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000901e50}  (t=+14.330964ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005353a0] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000901e50,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+14.378317ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a8380] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00003c140}  (t=+14.408918ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+15.316649ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005354e0:{{localhost:61961  0xc000112948 0 <nil>}}]}  (t=+15.359199ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005353a0] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000257d70}  (t=+15.376867ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005353a0] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000257d70,state:READY,stateToAggregate:READY]  (t=+15.393254ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a8380] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00069aa00}  (t=+15.411813ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000534820] Balancer state update from locality cluster-myservice, new state: {ConnectivityState:READY Picker:0xc00069aa00}  (t=+15.43364ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000534820] Child pickers: map[cluster-myservice:picker:0xc00069aa00,state:READY,stateToAggregate:READY]  (t=+15.458688ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+15.47314ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+120.978557ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0006120f0] CDS watch canceled on cluster-myservice  (t=+121.008467ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] EDS watch canceled on endpoints-myservice  (t=+121.026295ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc00016c000] Shutdown  (t=+121.056627ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] Shutdown  (t=+121.067585ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0006120f0] Shutdown  (t=+121.075233ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000534820] Shutdown  (t=+121.094756ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000485a00] Watch cancel on resource name myservice with xds-client 0x22751b0  (t=+121.10935ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+121.136076ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+121.173584ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000246b00] Shutdown  (t=+121.193229ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000485a00] Shutdown  (t=+121.20427ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+121.231122ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000246b00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+121.233629ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 5 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "f7d0906e-6adc-4134-b677-25cca692017a", version "1"  (t=+121.140132ms)
=== RUN   Test/FaultInjection_Unary
    tlogger.go:99: server.go:88 [xds-e2e] Created new snapshot cache...  (t=+190.47µs)
    tlogger.go:99: server.go:102 [xds-e2e] Registered Aggregated Discovery Service (ADS)...  (t=+979.443µs)
    tlogger.go:99: server.go:106 [xds-e2e] xDS management server serving at: 127.0.0.1:61967...  (t=+1.040237ms)
    tlogger.go:99: bootstrap.go:80 [internal/xds] Created bootstrap file at "/var/folders/cl/f8vhjmb14694s95xvbb2z_nh00rk43/T/test_xds_bootstrap_067498725" with contents: {
          "xds_servers": [
            {
              "server_uri": "127.0.0.1:61967",
              "channel_creds": [
                {
                  "type": "insecure"
                }
              ],
              "server_features": [
                "xds_v3"
              ]
            }
          ],
          "node": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2"
          },
          "server_listener_resource_name_template": "grpc/server"
        }
          (t=+1.422303ms)
=== RUN   Test/FaultInjection_Unary/max_faults_zero
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+2.270276ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+2.291258ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+2.345004ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc0004a8580] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice0}  (t=+2.367187ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+2.627992ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+2.65161ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+2.66835ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+2.691057ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+2.709257ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+2.749906ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc0006bcc00] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+2.793782ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc0006bcc00] Created  (t=+2.825266ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc0004a8580] Watch started on resource name myservice0 with xds-client 0x22751b0  (t=+2.871133ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+2.883565ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+2.908078ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+2.97357ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+2.98143ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+3.322702ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+3.362513ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc0006bcc00] ADS stream created  (t=+3.384615ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice0] version "" with version "1"  (t=+3.706536ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+3.925172ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0006bcc00] Resource with name: myservice0, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice0",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice0"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "abort": {
                            "grpcStatus": 10,
                            "percentage": {
                              "numerator": 100
                            }
                          },
                          "maxActiveFaults": 0
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice0"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "abort": {
                      "grpcStatus": 10,
                      "percentage": {
                        "numerator": 100
                      }
                    },
                    "maxActiveFaults": 0
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+4.474933ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: ListenerResource, version: 1, nonce: 1  (t=+4.614406ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc0004a8580] received LDS update: {
          "RouteConfigName": "route-myservice0",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2UwGvgCGuICCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIisAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsYBKlwKBmZhdWx0MCJSCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIKEgYaAghkKAoyACpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2UwOhFmaWx0ZXItY2hhaW4tbmFtZZoBswIKsAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsYBKlwKBmZhdWx0MCJSCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIKEgYaAghkKAoyACpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2Uw"
          }
        }, err: <nil>  (t=+4.747834ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 1 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice0] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+4.855923ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice0] version "" with version "1"  (t=+4.930943ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+5.070179ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc0006bcc00] Resource with name: route-myservice0, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice0",
          "virtualHosts": [
            {
              "domains": [
                "myservice0"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice0"
                  }
                }
              ]
            }
          ]
        }.  (t=+5.286341ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: RouteConfigResource, version: 1, nonce: 2  (t=+5.395961ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc0004a8580] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice0"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice0": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2UwEikSCm15c2VydmljZTAaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlMA=="
          }
        }, err: <nil>  (t=+5.473301ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 2 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice0] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+5.707129ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc0004a8580] Received update on resource myservice0 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice0": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice0"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+5.726808ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc000534a20 0xc000010688}  (t=+5.944795ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+5.968842ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+5.983079ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000534ba0] Created  (t=+6.004981ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000534ba0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice0": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice0"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc000534a20 Attributes:0xc000010688}  (t=+6.038697ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000ba5a0] Created  (t=+6.067434ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000ba5a0] xDS credentials in use: false  (t=+6.080918ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000534ba0] Created child policy 0xc0000ba5a0 of type cds_experimental  (t=+6.101122ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000ba5a0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice0"
        }  (t=+6.118473ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000ba5a0] CDS watch started on cluster-myservice0  (t=+6.186511ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice0] version "" with version "1"  (t=+6.332377ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+6.430977ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc0006bcc00] Resource with name: cluster-myservice0, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice0",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice0"
          }
        }  (t=+6.563271ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: ClusterResource, version: 1, nonce: 3  (t=+6.615315ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000ba5a0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice0",
            "EDSServiceName": "endpoints-myservice0",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTAaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2UwEAM="
            }
          }
        ], security config: null  (t=+6.693564ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00012cd80] Created  (t=+6.733815ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 3 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice0] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+6.734168ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000ba5a0] Created child policy 0xc00012cd80 of type cluster_resolver_experimental  (t=+6.753838ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00012cd80] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice0",
              "edsServiceName": "endpoints-myservice0"
            }
          ]
        }  (t=+6.831318ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00012cd80] EDS watch started on endpoints-myservice0  (t=+6.854319ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice0] version "" with version "1"  (t=+7.014194ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+7.180889ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc0006bcc00] Resource with name: endpoints-myservice0, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice0",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+7.354897ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: EndpointsResource, version: 1, nonce: 4  (t=+7.465494ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00012cd80] resource update: [
          {}
        ]  (t=+7.470576ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0005bf180] Created  (t=+7.515202ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+7.560061ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 4 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice0] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+7.598692ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00012cd80] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice0",
                    "edsServiceName": "endpoints-myservice0",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+7.787961ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0005bf180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice0",
                    "edsServiceName": "endpoints-myservice0",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+7.834716ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0005bf180] switching to ("priority-0-0", 0) in syncPriority  (t=+7.853305ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0007bc1a0] Created  (t=+7.871865ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0005bf180] Created child policy 0xc0007bc1a0 of type xds_cluster_impl_experimental  (t=+7.882282ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0007bc1a0] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice0",
          "edsServiceName": "endpoints-myservice0",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+7.939123ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0006a8640] Created  (t=+7.955099ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0006a8640] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+7.978304ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0006a8640] Created child policy 0xc0005bf480 of type round_robin  (t=+7.997193ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+8.043589ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+8.063116ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0006a8640] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000196740}  (t=+8.111478ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0006a8640] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000196740,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+8.141512ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0005bf180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000241040}  (t=+8.171089ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+13.113031ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0006a8780:{{localhost:61968  0xc0001122c8 0 <nil>}}]}  (t=+13.178605ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0006a8640] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc0007cf230}  (t=+13.206473ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0006a8640] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0007cf230,state:READY,stateToAggregate:READY]  (t=+13.229588ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0005bf180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0002412c0}  (t=+13.253649ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000534ba0] Balancer state update from locality cluster-myservice0, new state: {ConnectivityState:READY Picker:0xc0002412c0}  (t=+13.285059ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000534ba0] Child pickers: map[cluster-myservice0:picker:0xc0002412c0,state:READY,stateToAggregate:READY]  (t=+13.321461ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+13.340289ms)
=== CONT  Test/FaultInjection_Unary/max_faults_zero
    fault_test.go:547: : RPC 0: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 1: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 2: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 3: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 4: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 5: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 6: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 7: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 8: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 9: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 10: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 11: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 12: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 13: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 14: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 15: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 16: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 17: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 18: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 19: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 20: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 21: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 22: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 23: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 24: err: <nil>, intnCalls: [], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+21.606968ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000ba5a0] CDS watch canceled on cluster-myservice0  (t=+21.653265ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00012cd80] EDS watch canceled on endpoints-myservice0  (t=+21.719378ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0007bc1a0] Shutdown  (t=+21.820369ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00012cd80] Shutdown  (t=+21.843899ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000ba5a0] Shutdown  (t=+21.859423ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000534ba0] Shutdown  (t=+21.918084ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc0004a8580] Watch cancel on resource name myservice0 with xds-client 0x22751b0  (t=+21.946979ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 5 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+21.958142ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+21.968332ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 6 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+21.986859ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+22.016322ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc0006bcc00] Shutdown  (t=+22.041859ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc0004a8580] Shutdown  (t=+22.056613ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+22.070114ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc0006bcc00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+22.068983ms)
=== RUN   Test/FaultInjection_Unary/no_abort_or_delay
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 7 for type.googleapis.com/envoy.config.listener.v3.Listener[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "1"  (t=+22.103642ms)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+22.258963ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+22.279544ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+22.301608ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc0005bfc80] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice1}  (t=+22.331199ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+22.548559ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+22.576727ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+22.596622ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+22.622872ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+22.648605ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+22.665629ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000246b00] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+26.688869ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+26.732171ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000246b00] Created  (t=+26.746852ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+26.78206ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc0005bfc80] Watch started on resource name myservice1 with xds-client 0x22751b0  (t=+26.97217ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+26.802933ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+26.813751ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+27.426979ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+27.487905ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000246b00] ADS stream created  (t=+27.536872ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice1] version "" with version "2"  (t=+27.792885ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+27.974511ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000246b00] Resource with name: myservice1, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice1",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice1"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault"
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice1"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault"
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+28.309454ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: ListenerResource, version: 2, nonce: 1  (t=+28.400935ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc0005bfc80] received LDS update: {
          "RouteConfigName": "route-myservice1",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2UxGuwCGtYCCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIipAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEroBKlAKBmZhdWx0MCJGCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdCpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2UxOhFmaWx0ZXItY2hhaW4tbmFtZZoBpwIKpAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEroBKlAKBmZhdWx0MCJGCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdCpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2Ux"
          }
        }, err: <nil>  (t=+28.49044ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 8 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice1] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "2"  (t=+28.558545ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice1] version "" with version "2"  (t=+30.839904ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+30.977383ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000246b00] Resource with name: route-myservice1, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice1",
          "virtualHosts": [
            {
              "domains": [
                "myservice1"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice1"
                  }
                }
              ]
            }
          ]
        }.  (t=+31.153113ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: RouteConfigResource, version: 2, nonce: 2  (t=+31.228096ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc0005bfc80] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice1"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice1": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2UxEikSCm15c2VydmljZTEaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlMQ=="
          }
        }, err: <nil>  (t=+31.264407ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 9 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice1] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "2"  (t=+31.33523ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc0005bfc80] Received update on resource myservice1 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+31.412294ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc000091ee0 0xc0004fc278}  (t=+31.639001ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+31.663829ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+31.679061ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000ae0100] Created  (t=+31.702394ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000ae0100] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice1": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice1"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc000091ee0 Attributes:0xc0004fc278}  (t=+31.741237ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc000e02000] Created  (t=+31.814652ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc000e02000] xDS credentials in use: false  (t=+31.858564ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000ae0100] Created child policy 0xc000e02000 of type cds_experimental  (t=+31.890785ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc000e02000] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice1"
        }  (t=+31.914718ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc000e02000] CDS watch started on cluster-myservice1  (t=+32.039034ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice1] version "" with version "2"  (t=+32.271579ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+32.388993ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000246b00] Resource with name: cluster-myservice1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice1"
          }
        }  (t=+32.572656ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: ClusterResource, version: 2, nonce: 3  (t=+32.641632ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc000e02000] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice1",
            "EDSServiceName": "endpoints-myservice1",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTEaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2UxEAM="
            }
          }
        ], security config: null  (t=+32.722218ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0006f2360] Created  (t=+32.762916ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc000e02000] Created child policy 0xc0006f2360 of type cluster_resolver_experimental  (t=+32.809869ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0006f2360] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice1",
              "edsServiceName": "endpoints-myservice1"
            }
          ]
        }  (t=+32.851589ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0006f2360] EDS watch started on endpoints-myservice1  (t=+32.8711ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 10 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice1] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "2"  (t=+32.853588ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice1] version "" with version "2"  (t=+33.100584ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246b00] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+33.236382ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000246b00] Resource with name: endpoints-myservice1, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice1",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+33.407312ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246b00] Sending ACK for response type: EndpointsResource, version: 2, nonce: 4  (t=+33.482874ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0006f2360] resource update: [
          {}
        ]  (t=+33.498209ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000e82180] Created  (t=+33.542835ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+35.119607ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 11 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice1] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "2"  (t=+33.654036ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0006f2360] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice1",
                    "edsServiceName": "endpoints-myservice1",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+35.342237ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000e82180] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice1",
                    "edsServiceName": "endpoints-myservice1",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+35.382208ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000e82180] switching to ("priority-0-0", 0) in syncPriority  (t=+35.400774ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000f00000] Created  (t=+35.429582ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000e82180] Created child policy 0xc000f00000 of type xds_cluster_impl_experimental  (t=+35.440464ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000f00000] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice1",
          "edsServiceName": "endpoints-myservice1",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+35.47204ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000750640] Created  (t=+35.487131ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000750640] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+35.505176ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000750640] Created child policy 0xc000762200 of type round_robin  (t=+35.526369ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+35.565033ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+35.582162ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000750640] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc0007745d0}  (t=+35.606476ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000750640] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0007745d0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+35.630443ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000e82180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0008fea00}  (t=+35.659614ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+36.968805ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000750780:{{localhost:61968  0xc0003820b0 0 <nil>}}]}  (t=+37.010298ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000750640] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000adaf30}  (t=+37.032623ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000750640] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000adaf30,state:READY,stateToAggregate:READY]  (t=+37.063874ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000e82180] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000e06140}  (t=+37.082183ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000ae0100] Balancer state update from locality cluster-myservice1, new state: {ConnectivityState:READY Picker:0xc000e06140}  (t=+37.104209ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000ae0100] Child pickers: map[cluster-myservice1:picker:0xc000e06140,state:READY,stateToAggregate:READY]  (t=+37.125085ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+37.138011ms)
=== CONT  Test/FaultInjection_Unary/no_abort_or_delay
    fault_test.go:547: : RPC 0: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 1: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 2: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 3: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 4: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 5: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 6: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 7: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 8: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 9: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 10: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 11: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 12: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 13: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 14: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 15: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 16: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 17: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 18: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 19: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 20: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 21: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 22: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 23: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: : RPC 24: err: <nil>, intnCalls: [], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+42.441713ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc000e02000] CDS watch canceled on cluster-myservice1  (t=+42.480423ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0006f2360] EDS watch canceled on endpoints-myservice1  (t=+42.541181ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000f00000] Shutdown  (t=+42.586976ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0006f2360] Shutdown  (t=+42.619111ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc000e02000] Shutdown  (t=+42.656753ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000ae0100] Shutdown  (t=+42.708812ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc0005bfc80] Watch cancel on resource name myservice1 with xds-client 0x22751b0  (t=+42.742747ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+42.78072ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 12 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "2"  (t=+42.81297ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 13 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "2"  (t=+42.875665ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+42.821104ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000246b00] Shutdown  (t=+42.924247ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000246b00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+42.970006ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc0005bfc80] Shutdown  (t=+42.982482ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+43.040441ms)
=== RUN   Test/FaultInjection_Unary/abort_always
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+43.255022ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+43.282086ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+43.322876ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000d18500] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice2}  (t=+43.375429ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+43.540387ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+43.572149ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+43.585733ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+43.601064ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+43.612852ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+43.622991ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000d4c000] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+43.644824ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000d4c000] Created  (t=+43.657546ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+43.674085ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000d18500] Watch started on resource name myservice2 with xds-client 0x22751b0  (t=+43.676882ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+43.714537ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+43.708193ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+43.7258ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+44.166673ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+44.197296ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000d4c000] ADS stream created  (t=+44.228733ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice2] version "" with version "3"  (t=+44.417089ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000d4c000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+44.558123ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000d4c000] Resource with name: myservice2, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice2",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice2"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "abort": {
                            "grpcStatus": 10,
                            "percentage": {
                              "numerator": 100
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice2"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "abort": {
                      "grpcStatus": 10,
                      "percentage": {
                        "numerator": 100
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+45.055686ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000d4c000] Sending ACK for response type: ListenerResource, version: 3, nonce: 1  (t=+45.178705ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000d18500] received LDS update: {
          "RouteConfigName": "route-myservice2",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2UyGvYCGuACCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIirgIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsQBKloKBmZhdWx0MCJQCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIIEgYaAghkKAoqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoWCgIaABIQcm91dGUtbXlzZXJ2aWNlMjoRZmlsdGVyLWNoYWluLW5hbWWaAbECCq4CCmV0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlchLEASpaCgZmYXVsdDAiUApEdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5mYXVsdC52My5IVFRQRmF1bHQSCBIGGgIIZCgKKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFgoCGgASEHJvdXRlLW15c2VydmljZTI="
          }
        }, err: <nil>  (t=+45.240784ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 14 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice2] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "3"  (t=+45.340956ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice2] version "" with version "3"  (t=+45.404369ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000d4c000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+45.529149ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000d4c000] Resource with name: route-myservice2, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice2",
          "virtualHosts": [
            {
              "domains": [
                "myservice2"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice2"
                  }
                }
              ]
            }
          ]
        }.  (t=+45.744551ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000d4c000] Sending ACK for response type: RouteConfigResource, version: 3, nonce: 2  (t=+45.807093ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000d18500] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice2"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice2": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2UyEikSCm15c2VydmljZTIaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlMg=="
          }
        }, err: <nil>  (t=+45.850639ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000d18500] Received update on resource myservice2 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice2": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice2"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+45.918455ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 15 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice2] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "3"  (t=+45.974703ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0005f5860 0xc0005e8410}  (t=+46.010734ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+46.030284ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+46.042757ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc0005f59e0] Created  (t=+46.085714ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc0005f59e0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice2": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice2"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0005f5860 Attributes:0xc0005e8410}  (t=+46.134608ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0006121e0] Created  (t=+46.160563ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0006121e0] xDS credentials in use: false  (t=+46.177735ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc0005f59e0] Created child policy 0xc0006121e0 of type cds_experimental  (t=+46.199399ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0006121e0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice2"
        }  (t=+46.219251ms)
=== CONT  Test/FaultInjection_Unary/abort_always
    fault_test.go:547: : RPC 0: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0006121e0] CDS watch started on cluster-myservice2  (t=+46.264531ms)
=== CONT  Test/FaultInjection_Unary/abort_always
    fault_test.go:547: : RPC 1: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 2: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 3: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 4: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 5: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 6: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 7: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 8: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice2] version "" with version "3"  (t=+46.410504ms)
=== CONT  Test/FaultInjection_Unary/abort_always
    fault_test.go:547: : RPC 9: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 10: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 11: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 12: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 13: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 14: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 15: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 16: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 17: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000d4c000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+46.535147ms)
=== CONT  Test/FaultInjection_Unary/abort_always
    fault_test.go:547: : RPC 18: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 19: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 20: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 21: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 22: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 23: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: : RPC 24: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+46.655306ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000d4c000] Resource with name: cluster-myservice2, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice2",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice2"
          }
        }  (t=+46.673392ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0006121e0] CDS watch canceled on cluster-myservice2  (t=+46.684266ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000d4c000] Sending ACK for response type: ClusterResource, version: 3, nonce: 3  (t=+46.731099ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0006121e0] Shutdown  (t=+46.735859ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc0005f59e0] Shutdown  (t=+46.764843ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000d18500] Watch cancel on resource name myservice2 with xds-client 0x22751b0  (t=+46.81842ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+46.842868ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 16 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice2] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "3"  (t=+46.868007ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+46.883963ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 17 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "3"  (t=+46.909831ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000d4c000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+46.936051ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000d4c000] Shutdown  (t=+46.912953ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000d18500] Shutdown  (t=+47.117528ms)
=== RUN   Test/FaultInjection_Unary/abort_10%
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 18 for type.googleapis.com/envoy.config.listener.v3.Listener[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "3"  (t=+47.009485ms)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+47.234601ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+47.253127ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+47.270903ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000e82700] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice3}  (t=+47.29138ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+47.451478ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+47.476723ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+47.493037ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+47.51513ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+47.526629ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+47.536376ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000247000] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+47.561974ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+47.584997ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000247000] Created  (t=+47.585454ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+47.62422ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+47.602041ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+47.619345ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000e82700] Watch started on resource name myservice3 with xds-client 0x22751b0  (t=+47.678259ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+48.74421ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+48.851908ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000247000] ADS stream created  (t=+48.906474ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice3] version "" with version "4"  (t=+49.414343ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000247000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+50.381293ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000247000] Resource with name: myservice3, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice3",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice3"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "abort": {
                            "grpcStatus": 10,
                            "percentage": {
                              "numerator": 100000,
                              "denominator": "MILLION"
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice3"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "abort": {
                      "grpcStatus": 10,
                      "percentage": {
                        "numerator": 100000,
                        "denominator": "MILLION"
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+50.916892ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000247000] Sending ACK for response type: ListenerResource, version: 4, nonce: 1  (t=+51.079377ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000e82700] received LDS update: {
          "RouteConfigName": "route-myservice3",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2UzGvoCGuQCCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIisgIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsgBKl4KBmZhdWx0MCJUCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIMEgoaBgigjQYQAigKKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFgoCGgASEHJvdXRlLW15c2VydmljZTM6EWZpbHRlci1jaGFpbi1uYW1lmgG1AgqyAgpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISyAEqXgoGZmF1bHQwIlQKRHR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuZmF1bHQudjMuSFRUUEZhdWx0EgwSChoGCKCNBhACKAoqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoWCgIaABIQcm91dGUtbXlzZXJ2aWNlMw=="
          }
        }, err: <nil>  (t=+51.252086ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 19 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice3] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "4"  (t=+51.403754ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice3] version "" with version "4"  (t=+51.477198ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000247000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+51.56626ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000247000] Resource with name: route-myservice3, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice3",
          "virtualHosts": [
            {
              "domains": [
                "myservice3"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice3"
                  }
                }
              ]
            }
          ]
        }.  (t=+51.762344ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000247000] Sending ACK for response type: RouteConfigResource, version: 4, nonce: 2  (t=+51.869173ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000e82700] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice3"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice3": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2UzEikSCm15c2VydmljZTMaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlMw=="
          }
        }, err: <nil>  (t=+51.978656ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000e82700] Received update on resource myservice3 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice3": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice3"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+52.051496ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc000eaa4c0 0xc0005e8208}  (t=+52.166997ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+52.189027ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+52.206263ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000eaa640] Created  (t=+52.23031ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000eaa640] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice3": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice3"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc000eaa4c0 Attributes:0xc0005e8208}  (t=+52.271001ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0006122d0] Created  (t=+52.294851ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0006122d0] xDS credentials in use: false  (t=+52.310322ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000eaa640] Created child policy 0xc0006122d0 of type cds_experimental  (t=+52.327863ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0006122d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice3"
        }  (t=+52.346683ms)
=== CONT  Test/FaultInjection_Unary/abort_10%
    fault_test.go:547: [0,10]%: RPC 0: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: [0,10]%: RPC 1: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [1000000], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0006122d0] CDS watch started on cluster-myservice3  (t=+52.4452ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 20 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice3] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "4"  (t=+52.630062ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice3] version "" with version "4"  (t=+52.662457ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000247000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+52.951566ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000247000] Resource with name: cluster-myservice3, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice3",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice3"
          }
        }  (t=+53.197717ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000247000] Sending ACK for response type: ClusterResource, version: 4, nonce: 3  (t=+53.283068ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0006122d0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice3",
            "EDSServiceName": "endpoints-myservice3",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTMaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2UzEAM="
            }
          }
        ], security config: null  (t=+53.3948ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0000e6240] Created  (t=+53.425129ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0006122d0] Created child policy 0xc0000e6240 of type cluster_resolver_experimental  (t=+53.44805ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0000e6240] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice3",
              "edsServiceName": "endpoints-myservice3"
            }
          ]
        }  (t=+53.497203ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 21 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice3] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "4"  (t=+53.507619ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0000e6240] EDS watch started on endpoints-myservice3  (t=+53.516433ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice3] version "" with version "4"  (t=+53.678475ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000247000] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+53.846433ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000247000] Resource with name: endpoints-myservice3, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice3",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+54.117806ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000247000] Sending ACK for response type: EndpointsResource, version: 4, nonce: 4  (t=+54.229531ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0000e6240] resource update: [
          {}
        ]  (t=+54.30045ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000762200] Created  (t=+54.325556ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+54.349196ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0000e6240] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice3",
                    "edsServiceName": "endpoints-myservice3",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+54.564267ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000762200] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice3",
                    "edsServiceName": "endpoints-myservice3",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+54.641897ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000762200] switching to ("priority-0-0", 0) in syncPriority  (t=+54.668796ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0000b29c0] Created  (t=+54.692179ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000762200] Created child policy 0xc0000b29c0 of type xds_cluster_impl_experimental  (t=+54.707996ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0000b29c0] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice3",
          "edsServiceName": "endpoints-myservice3",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+54.756299ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0007c4600] Created  (t=+54.78214ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0007c4600] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+54.807195ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0007c4600] Created child policy 0xc000762480 of type round_robin  (t=+54.839715ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+54.921118ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+54.946761ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 22 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice3] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "4"  (t=+54.915359ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0007c4600] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000a27080}  (t=+55.563289ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0007c4600] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000a27080,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+55.60993ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000762200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000a10050}  (t=+55.646568ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+58.600328ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0007c4740:{{localhost:61968  0xc0003820a0 0 <nil>}}]}  (t=+58.685599ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0007c4600] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc0006b08a0}  (t=+58.730467ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0007c4600] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0006b08a0,state:READY,stateToAggregate:READY]  (t=+58.765994ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000762200] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001bc6e0}  (t=+58.793575ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000eaa640] Balancer state update from locality cluster-myservice3, new state: {ConnectivityState:READY Picker:0xc0001bc6e0}  (t=+58.828421ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000eaa640] Child pickers: map[cluster-myservice3:picker:0xc0001bc6e0,state:READY,stateToAggregate:READY]  (t=+58.866514ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+58.893392ms)
=== CONT  Test/FaultInjection_Unary/abort_10%
    fault_test.go:547: (10,100]%: RPC 2: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 3: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 4: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 5: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 6: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 7: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 8: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 9: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 10: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 11: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 12: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 13: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 14: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 15: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 16: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 17: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 18: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 19: err: <nil>, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: [0,10]% again: RPC 20: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [1000000], newTimerCalls: []
    fault_test.go:547: [0,10]% again: RPC 21: err: rpc error: code = Aborted desc = RPC terminated due to fault injection, intnCalls: [1000000], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+69.428052ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0006122d0] CDS watch canceled on cluster-myservice3  (t=+69.493372ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0000e6240] EDS watch canceled on endpoints-myservice3  (t=+69.523049ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0000b29c0] Shutdown  (t=+69.556706ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0000e6240] Shutdown  (t=+69.574977ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0006122d0] Shutdown  (t=+69.606264ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000eaa640] Shutdown  (t=+69.633275ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000e82700] Watch cancel on resource name myservice3 with xds-client 0x22751b0  (t=+69.659643ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+69.681731ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+69.712487ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000247000] Shutdown  (t=+69.775346ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000e82700] Shutdown  (t=+69.800848ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+69.818443ms)
=== RUN   Test/FaultInjection_Unary/delay_always
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000247000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: read tcp 127.0.0.1:61976->127.0.0.1:61967: use of closed network connection  (t=+69.88825ms)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+69.981566ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+70.001675ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+70.026257ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000e64280] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice4}  (t=+70.067703ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+70.52381ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+70.583942ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+70.609377ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+70.637055ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+70.657348ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+70.676187ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000510000] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+70.745806ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000510000] Created  (t=+70.775807ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000e64280] Watch started on resource name myservice4 with xds-client 0x22751b0  (t=+70.807075ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+70.846311ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+70.86671ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+71.186883ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+71.218501ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+71.649946ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+71.685555ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000510000] ADS stream created  (t=+71.719195ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice4] version "" with version "5"  (t=+72.232403ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+72.43046ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000510000] Resource with name: myservice4, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice4",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice4"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "delay": {
                            "fixedDelay": "1s",
                            "percentage": {
                              "numerator": 100
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice4"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "delay": {
                      "fixedDelay": "1s",
                      "percentage": {
                        "numerator": 100
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+73.134088ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: ListenerResource, version: 5, nonce: 1  (t=+73.29877ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000e64280] received LDS update: {
          "RouteConfigName": "route-myservice4",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2U0GvgCGuICCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIisAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsYBKlwKBmZhdWx0MCJSCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIKCggiAghkGgIIASpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2U0OhFmaWx0ZXItY2hhaW4tbmFtZZoBswIKsAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsYBKlwKBmZhdWx0MCJSCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIKCggiAghkGgIIASpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2U0"
          }
        }, err: <nil>  (t=+73.430732ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 23 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice4] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "5"  (t=+73.65252ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice4] version "" with version "5"  (t=+73.712031ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+73.978343ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000510000] Resource with name: route-myservice4, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice4",
          "virtualHosts": [
            {
              "domains": [
                "myservice4"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice4"
                  }
                }
              ]
            }
          ]
        }.  (t=+74.272781ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: RouteConfigResource, version: 5, nonce: 2  (t=+75.906514ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000e64280] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice4"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice4": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2U0EikSCm15c2VydmljZTQaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlNA=="
          }
        }, err: <nil>  (t=+76.056543ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000e64280] Received update on resource myservice4 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice4": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice4"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+76.15308ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 24 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice4] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "5"  (t=+76.233001ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0005356a0 0xc000112500}  (t=+76.310297ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+76.381602ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+76.402816ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000535820] Created  (t=+76.446457ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000535820] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice4": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice4"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0005356a0 Attributes:0xc000112500}  (t=+76.621938ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000ba2d0] Created  (t=+76.683349ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000ba2d0] xDS credentials in use: false  (t=+76.737115ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000535820] Created child policy 0xc0000ba2d0 of type cds_experimental  (t=+76.76476ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000ba2d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice4"
        }  (t=+76.788943ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000ba2d0] CDS watch started on cluster-myservice4  (t=+76.88568ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice4] version "" with version "5"  (t=+77.253459ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+77.56848ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000510000] Resource with name: cluster-myservice4, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice4",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice4"
          }
        }  (t=+77.785372ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: ClusterResource, version: 5, nonce: 3  (t=+77.862845ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000ba2d0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice4",
            "EDSServiceName": "endpoints-myservice4",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTQaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2U0EAM="
            }
          }
        ], security config: null  (t=+78.018192ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00012d680] Created  (t=+78.056608ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000ba2d0] Created child policy 0xc00012d680 of type cluster_resolver_experimental  (t=+78.08037ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00012d680] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice4",
              "edsServiceName": "endpoints-myservice4"
            }
          ]
        }  (t=+78.121528ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00012d680] EDS watch started on endpoints-myservice4  (t=+78.146224ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 25 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice4] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "5"  (t=+78.425827ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice4] version "" with version "5"  (t=+78.502412ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+78.747011ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000510000] Resource with name: endpoints-myservice4, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice4",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+78.942477ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: EndpointsResource, version: 5, nonce: 4  (t=+79.004841ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00012d680] resource update: [
          {}
        ]  (t=+79.08083ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004a9680] Created  (t=+79.104802ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+79.128088ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00012d680] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice4",
                    "edsServiceName": "endpoints-myservice4",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+79.334737ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004a9680] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice4",
                    "edsServiceName": "endpoints-myservice4",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+79.390423ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004a9680] switching to ("priority-0-0", 0) in syncPriority  (t=+79.415792ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0007bc820] Created  (t=+79.436274ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 26 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice4] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "5"  (t=+79.442207ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004a9680] Created child policy 0xc0007bc820 of type xds_cluster_impl_experimental  (t=+79.454168ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0007bc820] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice4",
          "edsServiceName": "endpoints-myservice4",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+79.580866ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc00041ad60] Created  (t=+79.632292ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc00041ad60] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+79.671082ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc00041ad60] Created child policy 0xc000a24180 of type round_robin  (t=+79.719676ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+79.796028ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+79.815524ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00041ad60] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc0003805f0}  (t=+80.112692ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00041ad60] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0003805f0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+80.146173ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a9680] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000a11bd0}  (t=+80.189923ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+83.233577ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc00041b2a0:{{localhost:61968  0xc000578000 0 <nil>}}]}  (t=+83.329574ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc00041ad60] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000536030}  (t=+83.405075ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc00041ad60] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000536030,state:READY,stateToAggregate:READY]  (t=+83.440419ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a9680] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0002b6be0}  (t=+83.471221ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000535820] Balancer state update from locality cluster-myservice4, new state: {ConnectivityState:READY Picker:0xc0002b6be0}  (t=+83.509648ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000535820] Child pickers: map[cluster-myservice4:picker:0xc0002b6be0,state:READY,stateToAggregate:READY]  (t=+83.545984ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+83.566092ms)
=== CONT  Test/FaultInjection_Unary/delay_always
    fault_test.go:547: : RPC 0: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 1: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 2: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 3: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 4: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 5: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 6: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 7: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 8: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 9: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 10: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 11: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 12: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 13: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 14: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 15: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 16: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 17: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 18: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 19: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 20: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 21: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 22: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 23: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
    fault_test.go:547: : RPC 24: err: <nil>, intnCalls: [100], newTimerCalls: [1s]
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+97.848693ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000ba2d0] CDS watch canceled on cluster-myservice4  (t=+97.902953ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00012d680] EDS watch canceled on endpoints-myservice4  (t=+97.94584ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0007bc820] Shutdown  (t=+97.986166ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00012d680] Shutdown  (t=+98.013156ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000ba2d0] Shutdown  (t=+98.081642ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000535820] Shutdown  (t=+98.116648ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000e64280] Watch cancel on resource name myservice4 with xds-client 0x22751b0  (t=+98.151592ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+98.175069ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+98.208232ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000510000] Shutdown  (t=+98.279383ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000e64280] Shutdown  (t=+99.877289ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000510000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+99.887402ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+99.904902ms)
=== RUN   Test/FaultInjection_Unary/delay_10%
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+100.049629ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 23[myservice4] with new version "6"  (t=+100.088798ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "myservice5" not listed  (t=+100.110484ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 24[route-myservice4] with new version "6"  (t=+100.131656ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "route-myservice5" not listed  (t=+100.149143ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 25[cluster-myservice4] with new version "6"  (t=+100.169095ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "cluster-myservice5" not listed  (t=+100.185972ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 26[endpoints-myservice4] with new version "6"  (t=+100.205379ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "endpoints-myservice5" not listed  (t=+100.22207ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+100.237701ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+100.262152ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000e82200] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice5}  (t=+100.286796ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+100.559342ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+100.635092ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+100.663194ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+100.735142ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+100.77761ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+100.931637ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000110000] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+100.969665ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000110000] Created  (t=+101.008184ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000e82200] Watch started on resource name myservice5 with xds-client 0x22751b0  (t=+101.036865ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+101.143936ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+101.175286ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+101.261848ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+101.310992ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+102.095951ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+102.135899ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000110000] ADS stream created  (t=+102.175296ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice5] version "" with version "6"  (t=+102.527231ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+102.768233ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000110000] Resource with name: myservice5, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice5",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice5"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "delay": {
                            "fixedDelay": "1s",
                            "percentage": {
                              "numerator": 1000,
                              "denominator": "TEN_THOUSAND"
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice5"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "delay": {
                      "fixedDelay": "1s",
                      "percentage": {
                        "numerator": 1000,
                        "denominator": "TEN_THOUSAND"
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+103.369137ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110000] Sending ACK for response type: ListenerResource, version: 6, nonce: 1  (t=+103.497257ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000e82200] received LDS update: {
          "RouteConfigName": "route-myservice5",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2U1GvsCGuUCCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIiswIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEskBKl8KBmZhdWx0MCJVCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBINCgsiBQjoBxABGgIIASpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2U1OhFmaWx0ZXItY2hhaW4tbmFtZZoBtgIKswIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEskBKl8KBmZhdWx0MCJVCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBINCgsiBQjoBxABGgIIASpOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGhYKAhoAEhByb3V0ZS1teXNlcnZpY2U1"
          }
        }, err: <nil>  (t=+103.637281ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 27 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice5] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "6"  (t=+104.152717ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice5] version "" with version "6"  (t=+104.188861ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+104.492967ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000110000] Resource with name: route-myservice5, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice5",
          "virtualHosts": [
            {
              "domains": [
                "myservice5"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice5"
                  }
                }
              ]
            }
          ]
        }.  (t=+104.704463ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110000] Sending ACK for response type: RouteConfigResource, version: 6, nonce: 2  (t=+104.784864ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000e82200] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice5"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice5": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2U1EikSCm15c2VydmljZTUaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlNQ=="
          }
        }, err: <nil>  (t=+104.979825ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000e82200] Received update on resource myservice5 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice5": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice5"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+105.097305ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0007c4660 0xc0004fc258}  (t=+105.229603ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+105.253185ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+105.270416ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc0007c47e0] Created  (t=+105.294081ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc0007c47e0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice5": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice5"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0007c4660 Attributes:0xc0004fc258}  (t=+105.336878ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0006783c0] Created  (t=+105.36148ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0006783c0] xDS credentials in use: false  (t=+105.380319ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 28 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice5] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "6"  (t=+105.388396ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc0007c47e0] Created child policy 0xc0006783c0 of type cds_experimental  (t=+105.397608ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0006783c0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice5"
        }  (t=+105.443822ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0006783c0] CDS watch started on cluster-myservice5  (t=+105.509317ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice5] version "" with version "6"  (t=+105.742674ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+105.935137ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000110000] Resource with name: cluster-myservice5, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice5",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice5"
          }
        }  (t=+106.136568ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110000] Sending ACK for response type: ClusterResource, version: 6, nonce: 3  (t=+106.238629ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0006783c0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice5",
            "EDSServiceName": "endpoints-myservice5",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTUaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2U1EAM="
            }
          }
        ], security config: null  (t=+106.410453ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000164480] Created  (t=+106.442942ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 29 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice5] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "6"  (t=+106.462838ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0006783c0] Created child policy 0xc000164480 of type cluster_resolver_experimental  (t=+106.465463ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000164480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice5",
              "edsServiceName": "endpoints-myservice5"
            }
          ]
        }  (t=+106.541705ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000164480] EDS watch started on endpoints-myservice5  (t=+106.577289ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice5] version "" with version "6"  (t=+106.790867ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110000] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+107.140742ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000110000] Resource with name: endpoints-myservice5, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice5",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+107.289086ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110000] Sending ACK for response type: EndpointsResource, version: 6, nonce: 4  (t=+107.3673ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000164480] resource update: [
          {}
        ]  (t=+107.443815ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000e64d80] Created  (t=+107.471602ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+107.495491ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 30 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice5] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "6"  (t=+107.749544ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000164480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice5",
                    "edsServiceName": "endpoints-myservice5",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+107.770035ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000e64d80] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice5",
                    "edsServiceName": "endpoints-myservice5",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+107.871171ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000e64d80] switching to ("priority-0-0", 0) in syncPriority  (t=+107.906399ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0000b2ea0] Created  (t=+107.931609ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000e64d80] Created child policy 0xc0000b2ea0 of type xds_cluster_impl_experimental  (t=+107.951388ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0000b2ea0] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice5",
          "edsServiceName": "endpoints-myservice5",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+107.991817ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0007c5020] Created  (t=+108.017847ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0007c5020] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+108.048016ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0007c5020] Created child policy 0xc000e64f80 of type round_robin  (t=+108.070812ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+108.121715ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+108.140962ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0007c5020] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000e89b80}  (t=+108.294179ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0007c5020] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000e89b80,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+108.32995ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000e64d80] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0008fe9b0}  (t=+108.368129ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+113.567577ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0007c5180:{{localhost:61968  0xc0004fc2c8 0 <nil>}}]}  (t=+113.721463ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0007c5020] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc0006425d0}  (t=+113.786822ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0007c5020] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0006425d0,state:READY,stateToAggregate:READY]  (t=+113.831539ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000e64d80] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000546230}  (t=+113.908607ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc0007c47e0] Balancer state update from locality cluster-myservice5, new state: {ConnectivityState:READY Picker:0xc000546230}  (t=+113.98181ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc0007c47e0] Child pickers: map[cluster-myservice5:picker:0xc000546230,state:READY,stateToAggregate:READY]  (t=+114.016852ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+114.035436ms)
=== CONT  Test/FaultInjection_Unary/delay_10%
    fault_test.go:547: [0,10]%: RPC 0: err: <nil>, intnCalls: [10000], newTimerCalls: [1s]
    fault_test.go:547: [0,10]%: RPC 1: err: <nil>, intnCalls: [10000], newTimerCalls: [1s]
    fault_test.go:547: (10,100]%: RPC 2: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 3: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 4: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 5: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 6: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 7: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 8: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 9: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 10: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 11: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 12: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 13: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 14: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 15: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 16: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 17: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 18: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: (10,100]%: RPC 19: err: <nil>, intnCalls: [10000], newTimerCalls: []
    fault_test.go:547: [0,10]% again: RPC 20: err: <nil>, intnCalls: [10000], newTimerCalls: [1s]
    fault_test.go:547: [0,10]% again: RPC 21: err: <nil>, intnCalls: [10000], newTimerCalls: [1s]
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+124.202086ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0006783c0] CDS watch canceled on cluster-myservice5  (t=+124.243083ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000164480] EDS watch canceled on endpoints-myservice5  (t=+124.268082ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0000b2ea0] Shutdown  (t=+124.316931ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000164480] Shutdown  (t=+124.341534ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0006783c0] Shutdown  (t=+124.38376ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc0007c47e0] Shutdown  (t=+124.456402ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000e82200] Watch cancel on resource name myservice5 with xds-client 0x22751b0  (t=+124.50401ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+124.527316ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+124.551021ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000110000] Shutdown  (t=+124.571753ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000e82200] Shutdown  (t=+124.586896ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+124.602584ms)
=== RUN   Test/FaultInjection_Unary/delay_80%,_abort_50%
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+124.754325ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 27[myservice5] with new version "7"  (t=+124.78548ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "myservice6" not listed  (t=+124.808061ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 28[route-myservice5] with new version "7"  (t=+124.828785ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "route-myservice6" not listed  (t=+124.846681ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 29[cluster-myservice5] with new version "7"  (t=+124.873372ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "cluster-myservice6" not listed  (t=+124.890539ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 30[endpoints-myservice5] with new version "7"  (t=+124.909494ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "endpoints-myservice6" not listed  (t=+124.925974ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+124.942168ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+124.968443ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000711200] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice6}  (t=+124.992345ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000110000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+124.782112ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+125.250923ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+125.292508ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+125.317903ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+125.346639ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+125.368508ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+125.387841ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc0006bcc00] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+125.426343ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc0006bcc00] Created  (t=+125.449112ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000711200] Watch started on resource name myservice6 with xds-client 0x22751b0  (t=+125.473145ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+125.5184ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+125.552156ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+125.606507ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+125.653757ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+126.135067ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+126.179142ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc0006bcc00] ADS stream created  (t=+126.211102ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice6] version "" with version "7"  (t=+126.503987ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+126.88995ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0006bcc00] Resource with name: myservice6, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice6",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice6"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "delay": {
                            "fixedDelay": "3s",
                            "percentage": {
                              "numerator": 80
                            }
                          },
                          "abort": {
                            "grpcStatus": 12,
                            "percentage": {
                              "numerator": 50
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice6"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "delay": {
                      "fixedDelay": "3s",
                      "percentage": {
                        "numerator": 80
                      }
                    },
                    "abort": {
                      "grpcStatus": 12,
                      "percentage": {
                        "numerator": 50
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+127.482397ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: ListenerResource, version: 7, nonce: 1  (t=+127.628987ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 31 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice6] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+127.810332ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000711200] received LDS update: {
          "RouteConfigName": "route-myservice6",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2U2GoADGuoCCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIiuAIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEs4BKmQKBmZhdWx0MCJaCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBISCggiAghQGgIIAxIGGgIIMigMKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFgoCGgASEHJvdXRlLW15c2VydmljZTY6EWZpbHRlci1jaGFpbi1uYW1lmgG7Agq4AgpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISzgEqZAoGZmF1bHQwIloKRHR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuZmF1bHQudjMuSFRUUEZhdWx0EhIKCCICCFAaAggDEgYaAggyKAwqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoWCgIaABIQcm91dGUtbXlzZXJ2aWNlNg=="
          }
        }, err: <nil>  (t=+127.827806ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice6] version "" with version "7"  (t=+128.122267ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+128.266348ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc0006bcc00] Resource with name: route-myservice6, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice6",
          "virtualHosts": [
            {
              "domains": [
                "myservice6"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice6"
                  }
                }
              ]
            }
          ]
        }.  (t=+128.952673ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: RouteConfigResource, version: 7, nonce: 2  (t=+129.082896ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000711200] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice6"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice6": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2U2EikSCm15c2VydmljZTYaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlNg=="
          }
        }, err: <nil>  (t=+129.134814ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000711200] Received update on resource myservice6 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice6": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice6"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+129.235664ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc000dc3c40 0xc0005789a0}  (t=+129.351078ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+129.376783ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 32 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice6] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+129.387075ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+129.396305ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc0005f4d80] Created  (t=+129.51947ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc0005f4d80] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice6": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice6"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc000dc3c40 Attributes:0xc0005789a0}  (t=+129.586006ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc000a46000] Created  (t=+129.646615ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc000a46000] xDS credentials in use: false  (t=+129.665389ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc0005f4d80] Created child policy 0xc000a46000 of type cds_experimental  (t=+129.688044ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc000a46000] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice6"
        }  (t=+129.727494ms)
=== CONT  Test/FaultInjection_Unary/delay_80%,_abort_50%
    fault_test.go:547: 50% delay and abort: RPC 0: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 1: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc000a46000] CDS watch started on cluster-myservice6  (t=+129.804693ms)
=== CONT  Test/FaultInjection_Unary/delay_80%,_abort_50%
    fault_test.go:547: 50% delay and abort: RPC 2: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 3: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 4: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 5: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 6: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 7: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 8: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort: RPC 9: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice6] version "" with version "7"  (t=+130.001657ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+130.149493ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc0006bcc00] Resource with name: cluster-myservice6, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice6",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice6"
          }
        }  (t=+130.343892ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: ClusterResource, version: 7, nonce: 3  (t=+130.421747ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc000a46000] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice6",
            "EDSServiceName": "endpoints-myservice6",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTYaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2U2EAM="
            }
          }
        ], security config: null  (t=+130.532973ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] Created  (t=+130.57322ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 33 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice6] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+130.579486ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc000a46000] Created child policy 0xc0000e70e0 of type cluster_resolver_experimental  (t=+130.596271ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice6",
              "edsServiceName": "endpoints-myservice6"
            }
          ]
        }  (t=+130.658114ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] EDS watch started on endpoints-myservice6  (t=+130.682008ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice6] version "" with version "7"  (t=+130.84734ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0006bcc00] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+130.998406ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc0006bcc00] Resource with name: endpoints-myservice6, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice6",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+131.136954ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0006bcc00] Sending ACK for response type: EndpointsResource, version: 7, nonce: 4  (t=+131.200677ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] resource update: [
          {}
        ]  (t=+131.216027ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000a24c80] Created  (t=+131.268514ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+131.293684ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 34 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice6] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+131.346064ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice6",
                    "edsServiceName": "endpoints-myservice6",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+131.479733ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000a24c80] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice6",
                    "edsServiceName": "endpoints-myservice6",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+131.535258ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000a24c80] switching to ("priority-0-0", 0) in syncPriority  (t=+131.566511ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000a6a000] Created  (t=+131.597957ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000a24c80] Created child policy 0xc000a6a000 of type xds_cluster_impl_experimental  (t=+131.621494ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000a6a000] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice6",
          "edsServiceName": "endpoints-myservice6",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+131.66214ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0005f5a20] Created  (t=+131.68916ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005f5a20] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+131.722112ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0005f5a20] Created child policy 0xc000a24e00 of type round_robin  (t=+131.751225ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+131.821509ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+131.847866ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005f5a20] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000a49410}  (t=+131.890694ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005f5a20] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000a49410,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+131.933603ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000a24c80] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0001bc690}  (t=+131.980531ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+133.450034ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005f5b60:{{localhost:61968  0xc00030a298 0 <nil>}}]}  (t=+133.5054ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005f5a20] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc0005e1230}  (t=+133.531443ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005f5a20] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0005e1230,state:READY,stateToAggregate:READY]  (t=+133.554784ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000a24c80] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001bc6e0}  (t=+133.590373ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc0005f4d80] Balancer state update from locality cluster-myservice6, new state: {ConnectivityState:READY Picker:0xc0001bc6e0}  (t=+133.625274ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc0005f4d80] Child pickers: map[cluster-myservice6:picker:0xc0001bc6e0,state:READY,stateToAggregate:READY]  (t=+133.662544ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+133.686251ms)
=== CONT  Test/FaultInjection_Unary/delay_80%,_abort_50%
    fault_test.go:547: 30% delay, no abort: RPC 10: err: <nil>, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 30% delay, no abort: RPC 11: err: <nil>, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 30% delay, no abort: RPC 12: err: <nil>, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 30% delay, no abort: RPC 13: err: <nil>, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 30% delay, no abort: RPC 14: err: <nil>, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 30% delay, no abort: RPC 15: err: <nil>, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 20% success: RPC 16: err: <nil>, intnCalls: [100 100], newTimerCalls: []
    fault_test.go:547: 20% success: RPC 17: err: <nil>, intnCalls: [100 100], newTimerCalls: []
    fault_test.go:547: 20% success: RPC 18: err: <nil>, intnCalls: [100 100], newTimerCalls: []
    fault_test.go:547: 20% success: RPC 19: err: <nil>, intnCalls: [100 100], newTimerCalls: []
    fault_test.go:547: 50% delay and abort again: RPC 20: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 21: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 22: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 23: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 24: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 25: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 26: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 27: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 28: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
    fault_test.go:547: 50% delay and abort again: RPC 29: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100 100], newTimerCalls: [3s]
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+138.026811ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc000a46000] CDS watch canceled on cluster-myservice6  (t=+138.07572ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] EDS watch canceled on endpoints-myservice6  (t=+138.138929ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000a6a000] Shutdown  (t=+138.202859ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0000e70e0] Shutdown  (t=+138.234024ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc000a46000] Shutdown  (t=+138.25194ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc0005f4d80] Shutdown  (t=+138.289586ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000711200] Watch cancel on resource name myservice6 with xds-client 0x22751b0  (t=+138.31423ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+138.334615ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 35 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+138.349126ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+138.357391ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 36 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+138.39446ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc0006bcc00] Shutdown  (t=+138.428085ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000711200] Shutdown  (t=+138.469481ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc0006bcc00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+138.443835ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+138.490388ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 37 for type.googleapis.com/envoy.config.listener.v3.Listener[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "7"  (t=+138.538691ms)
=== RUN   Test/FaultInjection_Unary/header_abort
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+138.691318ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+138.718394ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+138.746121ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000a24280] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice7}  (t=+138.773025ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+139.027199ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+139.065899ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+139.088775ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+139.113922ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+139.162002ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+139.185899ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000510000] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+139.225948ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000510000] Created  (t=+139.248847ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+139.262946ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+139.294454ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+139.33162ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000a24280] Watch started on resource name myservice7 with xds-client 0x22751b0  (t=+139.274496ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+139.349458ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+139.686237ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+139.717959ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000510000] ADS stream created  (t=+139.787263ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice7] version "" with version "8"  (t=+140.024253ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+140.175321ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000510000] Resource with name: myservice7, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice7",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice7"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "abort": {
                            "headerAbort": {
        
                            },
                            "percentage": {
                              "numerator": 80
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice7"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "abort": {
                      "headerAbort": {
        
                      },
                      "percentage": {
                        "numerator": 80
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+140.672788ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: ListenerResource, version: 8, nonce: 1  (t=+140.806651ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000a24280] received LDS update: {
          "RouteConfigName": "route-myservice7",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2U3GvYCGuACCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIirgIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsQBKloKBmZhdWx0MCJQCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIIEgYaAghQIgAqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoWCgIaABIQcm91dGUtbXlzZXJ2aWNlNzoRZmlsdGVyLWNoYWluLW5hbWWaAbECCq4CCmV0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlchLEASpaCgZmYXVsdDAiUApEdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5mYXVsdC52My5IVFRQRmF1bHQSCBIGGgIIUCIAKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFgoCGgASEHJvdXRlLW15c2VydmljZTc="
          }
        }, err: <nil>  (t=+140.870257ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 38 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice7] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "8"  (t=+140.966356ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice7] version "" with version "8"  (t=+141.047561ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+141.18995ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000510000] Resource with name: route-myservice7, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice7",
          "virtualHosts": [
            {
              "domains": [
                "myservice7"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice7"
                  }
                }
              ]
            }
          ]
        }.  (t=+141.379274ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: RouteConfigResource, version: 8, nonce: 2  (t=+141.455527ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000a24280] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice7"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice7": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2U3EikSCm15c2VydmljZTcaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlNw=="
          }
        }, err: <nil>  (t=+141.515796ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 39 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice7] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "8"  (t=+141.601143ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000a24280] Received update on resource myservice7 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice7": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice7"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+141.63784ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0006c4260 0xc000178040}  (t=+141.758295ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+141.781366ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+141.799731ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc0006c43e0] Created  (t=+141.827949ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc0006c43e0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice7": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice7"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0006c4260 Attributes:0xc000178040}  (t=+141.866939ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000ba2d0] Created  (t=+141.902453ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000ba2d0] xDS credentials in use: false  (t=+141.920953ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc0006c43e0] Created child policy 0xc0000ba2d0 of type cds_experimental  (t=+141.943642ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000ba2d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice7"
        }  (t=+141.965879ms)
=== CONT  Test/FaultInjection_Unary/header_abort
    fault_test.go:547: 30% abort; [0,30]%: RPC 0: err: rpc error: code = DataLoss desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000ba2d0] CDS watch started on cluster-myservice7  (t=+142.008193ms)
=== CONT  Test/FaultInjection_Unary/header_abort
    fault_test.go:547: 30% abort; [0,30]%: RPC 1: err: rpc error: code = DataLoss desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 30% abort; [0,30]%: RPC 2: err: rpc error: code = DataLoss desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice7] version "" with version "8"  (t=+142.178837ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+142.335581ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000510000] Resource with name: cluster-myservice7, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice7",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice7"
          }
        }  (t=+142.494009ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: ClusterResource, version: 8, nonce: 3  (t=+142.553311ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000ba2d0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice7",
            "EDSServiceName": "endpoints-myservice7",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTcaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2U3EAM="
            }
          }
        ], security config: null  (t=+142.597879ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00072e480] Created  (t=+142.653506ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000ba2d0] Created child policy 0xc00072e480 of type cluster_resolver_experimental  (t=+142.683686ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 40 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice7] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "8"  (t=+142.705919ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00072e480] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice7",
              "edsServiceName": "endpoints-myservice7"
            }
          ]
        }  (t=+142.74134ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00072e480] EDS watch started on endpoints-myservice7  (t=+142.763061ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice7] version "" with version "8"  (t=+142.917109ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000510000] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+143.073652ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000510000] Resource with name: endpoints-myservice7, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice7",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+143.284347ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000510000] Sending ACK for response type: EndpointsResource, version: 8, nonce: 4  (t=+143.366945ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00072e480] resource update: [
          {}
        ]  (t=+143.387653ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000a24800] Created  (t=+143.417378ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+143.458203ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 41 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice7] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "8"  (t=+143.501463ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00072e480] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice7",
                    "edsServiceName": "endpoints-myservice7",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+143.686354ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000a24800] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice7",
                    "edsServiceName": "endpoints-myservice7",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+143.747588ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000a24800] switching to ("priority-0-0", 0) in syncPriority  (t=+143.779624ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000a6a1a0] Created  (t=+143.810413ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000a24800] Created child policy 0xc000a6a1a0 of type xds_cluster_impl_experimental  (t=+143.829007ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000a6a1a0] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice7",
          "edsServiceName": "endpoints-myservice7",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+143.871055ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0005f5100] Created  (t=+143.896085ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0005f5100] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+143.930814ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0005f5100] Created child policy 0xc000a24b80 of type round_robin  (t=+143.955829ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+144.007707ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+144.031672ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005f5100] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc0002bbee0}  (t=+144.197949ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005f5100] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0002bbee0,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+144.2311ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000a24800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000e52a00}  (t=+144.293227ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+147.223565ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0005f5240:{{localhost:61968  0xc00030a180 0 <nil>}}]}  (t=+147.303796ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0005f5100] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc00098cb10}  (t=+147.349534ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0005f5100] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc00098cb10,state:READY,stateToAggregate:READY]  (t=+147.384317ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000a24800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001bd360}  (t=+147.436112ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc0006c43e0] Balancer state update from locality cluster-myservice7, new state: {ConnectivityState:READY Picker:0xc0001bd360}  (t=+147.486142ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc0006c43e0] Child pickers: map[cluster-myservice7:picker:0xc0001bd360,state:READY,stateToAggregate:READY]  (t=+147.573815ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+147.602467ms)
=== CONT  Test/FaultInjection_Unary/header_abort
    fault_test.go:547: 30% abort; (30,60]%: RPC 3: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 30% abort; (30,60]%: RPC 4: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 30% abort; (30,60]%: RPC 5: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 80% abort; (60,80]%: RPC 6: err: rpc error: code = DataLoss desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 80% abort; (60,80]%: RPC 7: err: rpc error: code = DataLoss desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: cannot exceed percentage in filter: RPC 8: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: cannot exceed percentage in filter: RPC 9: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: HTTP Status 404: RPC 10: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: HTTP Status 429: RPC 11: err: rpc error: code = Unavailable desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: HTTP Status 200: RPC 12: err: rpc error: code = Unknown desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: gRPC Status OK: RPC 13: err: EOF, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: invalid header results in no abort: RPC 14: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: invalid header results in default percentage: RPC 15: err: rpc error: code = DataLoss desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+149.961156ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000ba2d0] CDS watch canceled on cluster-myservice7  (t=+149.990116ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00072e480] EDS watch canceled on endpoints-myservice7  (t=+150.012326ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000a6a1a0] Shutdown  (t=+150.034307ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00072e480] Shutdown  (t=+150.048963ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000ba2d0] Shutdown  (t=+150.061297ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc0006c43e0] Shutdown  (t=+150.080447ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000a24280] Watch cancel on resource name myservice7 with xds-client 0x22751b0  (t=+150.098941ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+150.114815ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+150.132598ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000510000] Shutdown  (t=+150.14891ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000a24280] Shutdown  (t=+150.161496ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+150.173224ms)
=== RUN   Test/FaultInjection_Unary/header_delay
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+150.292372ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 38[myservice7] with new version "9"  (t=+150.318059ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "myservice8" not listed  (t=+150.336525ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 39[route-myservice7] with new version "9"  (t=+150.373261ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "route-myservice8" not listed  (t=+150.415132ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 40[cluster-myservice7] with new version "9"  (t=+150.436912ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "cluster-myservice8" not listed  (t=+150.451759ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 41[endpoints-myservice7] with new version "9"  (t=+150.482068ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "endpoints-myservice8" not listed  (t=+150.49804ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+150.51184ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+150.533723ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000e64800] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice8}  (t=+150.555407ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000510000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: read tcp 127.0.0.1:61988->127.0.0.1:61967: use of closed network connection  (t=+150.715632ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+150.802733ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+150.833684ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+150.855344ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+150.882146ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+150.90153ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+150.920868ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000110500] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+150.963193ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000110500] Created  (t=+150.985778ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000e64800] Watch started on resource name myservice8 with xds-client 0x22751b0  (t=+151.006678ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+151.023748ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+151.049892ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+151.079496ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+151.131223ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+151.542216ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+151.596124ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000110500] ADS stream created  (t=+151.649589ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice8] version "" with version "9"  (t=+151.961682ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110500] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+152.205385ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000110500] Resource with name: myservice8, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice8",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice8"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "delay": {
                            "headerDelay": {
        
                            },
                            "percentage": {
                              "numerator": 80
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice8"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "delay": {
                      "headerDelay": {
        
                      },
                      "percentage": {
                        "numerator": 80
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+152.702358ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110500] Sending ACK for response type: ListenerResource, version: 9, nonce: 1  (t=+152.80096ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000e64800] received LDS update: {
          "RouteConfigName": "route-myservice8",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2U4GvYCGuACCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIirgIKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEsQBKloKBmZhdWx0MCJQCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIICgYiAghQKgAqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoWCgIaABIQcm91dGUtbXlzZXJ2aWNlODoRZmlsdGVyLWNoYWluLW5hbWWaAbECCq4CCmV0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlchLEASpaCgZmYXVsdDAiUApEdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5mYXVsdC52My5IVFRQRmF1bHQSCAoGIgIIUCoAKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFgoCGgASEHJvdXRlLW15c2VydmljZTg="
          }
        }, err: <nil>  (t=+152.942423ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 42 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice8] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "9"  (t=+153.038808ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice8] version "" with version "9"  (t=+153.119992ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110500] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+153.240499ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000110500] Resource with name: route-myservice8, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice8",
          "virtualHosts": [
            {
              "domains": [
                "myservice8"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice8"
                  }
                }
              ]
            }
          ]
        }.  (t=+153.460876ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110500] Sending ACK for response type: RouteConfigResource, version: 9, nonce: 2  (t=+153.529468ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000e64800] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice8"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice8": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2U4EikSCm15c2VydmljZTgaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlOA=="
          }
        }, err: <nil>  (t=+153.596098ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000e64800] Received update on resource myservice8 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice8": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice8"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+153.711548ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 43 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice8] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "9"  (t=+153.714396ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0006c4e20 0xc000178128}  (t=+153.909184ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+153.96851ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+154.000549ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc0006c4fa0] Created  (t=+154.073497ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc0006c4fa0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice8": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice8"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0006c4e20 Attributes:0xc000178128}  (t=+154.144172ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000ba4b0] Created  (t=+154.178517ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000ba4b0] xDS credentials in use: false  (t=+154.205918ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc0006c4fa0] Created child policy 0xc0000ba4b0 of type cds_experimental  (t=+154.230881ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000ba4b0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice8"
        }  (t=+154.277399ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000ba4b0] CDS watch started on cluster-myservice8  (t=+154.415696ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice8] version "" with version "9"  (t=+154.587071ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110500] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+154.763953ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000110500] Resource with name: cluster-myservice8, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice8",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice8"
          }
        }  (t=+155.073022ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110500] Sending ACK for response type: ClusterResource, version: 9, nonce: 3  (t=+155.139563ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000ba4b0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice8",
            "EDSServiceName": "endpoints-myservice8",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTgaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2U4EAM="
            }
          }
        ], security config: null  (t=+155.250229ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00012d200] Created  (t=+155.275443ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000ba4b0] Created child policy 0xc00012d200 of type cluster_resolver_experimental  (t=+155.299523ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00012d200] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice8",
              "edsServiceName": "endpoints-myservice8"
            }
          ]
        }  (t=+155.334614ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00012d200] EDS watch started on endpoints-myservice8  (t=+155.352012ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 44 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice8] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "9"  (t=+155.47648ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice8] version "" with version "9"  (t=+155.539896ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000110500] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+155.732117ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000110500] Resource with name: endpoints-myservice8, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice8",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+155.855409ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000110500] Sending ACK for response type: EndpointsResource, version: 9, nonce: 4  (t=+155.947603ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00012d200] resource update: [
          {}
        ]  (t=+155.966692ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004a8b00] Created  (t=+156.001463ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+156.025788ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 45 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice8] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "9"  (t=+156.175601ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00012d200] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice8",
                    "edsServiceName": "endpoints-myservice8",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+156.270632ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004a8b00] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice8",
                    "edsServiceName": "endpoints-myservice8",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+156.35205ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004a8b00] switching to ("priority-0-0", 0) in syncPriority  (t=+156.396561ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0007bc340] Created  (t=+156.431551ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004a8b00] Created child policy 0xc0007bc340 of type xds_cluster_impl_experimental  (t=+156.449112ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0007bc340] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice8",
          "edsServiceName": "endpoints-myservice8",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+156.488828ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000eaace0] Created  (t=+156.514967ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000eaace0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+156.546229ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000eaace0] Created child policy 0xc0004a8d00 of type round_robin  (t=+156.570972ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+156.619166ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+156.643915ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000eaace0] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc0005f3c90}  (t=+156.731017ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000eaace0] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0005f3c90,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+156.817126ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a8b00] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0007a2050}  (t=+156.892736ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+158.354318ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000eaae20:{{localhost:61968  0xc0003820e0 0 <nil>}}]}  (t=+158.949423ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000eaace0] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000e4ea50}  (t=+158.984302ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000eaace0] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000e4ea50,state:READY,stateToAggregate:READY]  (t=+159.011855ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a8b00] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc000e534a0}  (t=+159.057706ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc0006c4fa0] Balancer state update from locality cluster-myservice8, new state: {ConnectivityState:READY Picker:0xc000e534a0}  (t=+159.10241ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc0006c4fa0] Child pickers: map[cluster-myservice8:picker:0xc000e534a0,state:READY,stateToAggregate:READY]  (t=+159.164551ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+159.190844ms)
=== CONT  Test/FaultInjection_Unary/header_delay
    fault_test.go:547: 30% delay; [0,30]%: RPC 0: err: <nil>, intnCalls: [100], newTimerCalls: [2ms]
    fault_test.go:547: 30% delay; [0,30]%: RPC 1: err: <nil>, intnCalls: [100], newTimerCalls: [2ms]
    fault_test.go:547: 30% delay; [0,30]%: RPC 2: err: <nil>, intnCalls: [100], newTimerCalls: [2ms]
    fault_test.go:547: 30% delay; (30, 60]%: RPC 3: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 30% delay; (30, 60]%: RPC 4: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 30% delay; (30, 60]%: RPC 5: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: invalid header results in no delay: RPC 6: err: <nil>, intnCalls: [], newTimerCalls: []
    fault_test.go:547: invalid header results in default percentage: RPC 7: err: <nil>, intnCalls: [100], newTimerCalls: [2ms]
    fault_test.go:547: invalid header results in default percentage: RPC 8: err: <nil>, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: cannot exceed percentage in filter: RPC 9: err: <nil>, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+163.693354ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000ba4b0] CDS watch canceled on cluster-myservice8  (t=+163.741726ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00012d200] EDS watch canceled on endpoints-myservice8  (t=+163.777497ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0007bc340] Shutdown  (t=+163.82376ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00012d200] Shutdown  (t=+163.845652ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000ba4b0] Shutdown  (t=+163.870538ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc0006c4fa0] Shutdown  (t=+163.898852ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000e64800] Watch cancel on resource name myservice8 with xds-client 0x22751b0  (t=+163.964625ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+164.019916ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+164.063744ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000110500] Shutdown  (t=+164.107753ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000e64800] Shutdown  (t=+164.169669ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+164.202375ms)
=== RUN   Test/FaultInjection_Unary/abort_then_delay_filters
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+164.505771ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 42[myservice8] with new version "10"  (t=+165.107201ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "myservice9" not listed  (t=+165.132562ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 43[route-myservice8] with new version "10"  (t=+165.154799ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000110500] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+165.01005ms)
    tlogger.go:99: transport_helper.go:275 [xds] [xds-client 0xc000110500] ADS request for {target: [], type: ClusterResource, version: "9", nonce: "3"} failed: xds: stream.Send(version_info:"9"  node:{id:"b22bddc1-91e0-4357-b6e5-fda193e77df2"  user_agent_name:"gRPC Go"  user_agent_version:"1.41.0-dev"  client_features:"envoy.lb.does_not_support_overprovisioning"}  type_url:"type.googleapis.com/envoy.config.cluster.v3.Cluster"  response_nonce:"3") failed: EOF  (t=+165.071642ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "route-myservice9" not listed  (t=+165.187149ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 44[cluster-myservice8] with new version "10"  (t=+165.238608ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "cluster-myservice9" not listed  (t=+165.259387ms)
    tlogger.go:99: simple.go:205 [xds-e2e] respond open watch 45[endpoints-myservice8] with new version "10"  (t=+165.280501ms)
    tlogger.go:99: simple.go:354 [xds-e2e] ADS mode: not responding to request: "endpoints-myservice9" not listed  (t=+165.297638ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+165.315271ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+165.343544ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000462980] Creating resolver for target: {Scheme:xds Authority: Endpoint:myservice9}  (t=+165.370129ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:61967",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "b22bddc1-91e0-4357-b6e5-fda193e77df2",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": null,
          "ServerListenerResourceNameTemplate": "grpc/server"
        }  (t=+165.65922ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+165.696189ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+165.719222ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:61967  <nil> 0 <nil>}] <nil> <nil>}  (t=+165.74679ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+165.76976ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+165.78998ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000246700] Created ClientConn to xDS management server: 127.0.0.1:61967  (t=+165.823983ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000246700] Created  (t=+165.849466ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000462980] Watch started on resource name myservice9 with xds-client 0x22751b0  (t=+165.900669ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+165.943372ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:61967" to connect  (t=+165.962554ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+166.129763ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+166.189848ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+166.434237ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+166.462902ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000246700] ADS stream created  (t=+166.493199ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[myservice9] version "" with version "10"  (t=+166.749287ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246700] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+166.900462ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000246700] Resource with name: myservice9, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "myservice9",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-myservice9"
                    },
                    "httpFilters": [
                      {
                        "name": "fault0",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "abort": {
                            "grpcStatus": 12,
                            "percentage": {
                              "numerator": 50
                            }
                          }
                        }
                      },
                      {
                        "name": "fault1",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                          "delay": {
                            "fixedDelay": "1s",
                            "percentage": {
                              "numerator": 80
                            }
                          }
                        }
                      },
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-myservice9"
              },
              "httpFilters": [
                {
                  "name": "fault0",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "abort": {
                      "grpcStatus": 12,
                      "percentage": {
                        "numerator": 50
                      }
                    }
                  }
                },
                {
                  "name": "fault1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault",
                    "delay": {
                      "fixedDelay": "1s",
                      "percentage": {
                        "numerator": 80
                      }
                    }
                  }
                },
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+167.503597ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246700] Sending ACK for response type: ListenerResource, version: 10, nonce: 1  (t=+167.635469ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000462980] received LDS update: {
          "RouteConfigName": "route-myservice9",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "fault0",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "fault1",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CgpteXNlcnZpY2U5GtQDGr4DCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIijAMKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEqICKloKBmZhdWx0MCJQCkR0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLmZhdWx0LnYzLkhUVFBGYXVsdBIIEgYaAggyKAwqXAoGZmF1bHQxIlIKRHR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuZmF1bHQudjMuSFRUUEZhdWx0EgoKCCICCFAaAggBKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaFgoCGgASEHJvdXRlLW15c2VydmljZTk6EWZpbHRlci1jaGFpbi1uYW1lmgGPAwqMAwpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISogIqWgoGZmF1bHQwIlAKRHR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAuZmF1bHQudjMuSFRUUEZhdWx0EggSBhoCCDIoDCpcCgZmYXVsdDEiUgpEdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5mYXVsdC52My5IVFRQRmF1bHQSCgoIIgIIUBoCCAEqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchoWCgIaABIQcm91dGUtbXlzZXJ2aWNlOQ=="
          }
        }, err: <nil>  (t=+167.758053ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 46 for type.googleapis.com/envoy.config.listener.v3.Listener[myservice9] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "10"  (t=+168.221213ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice9] version "" with version "10"  (t=+168.263908ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246700] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+168.370188ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000246700] Resource with name: route-myservice9, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-myservice9",
          "virtualHosts": [
            {
              "domains": [
                "myservice9"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-myservice9"
                  }
                }
              ]
            }
          ]
        }.  (t=+168.549575ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246700] Sending ACK for response type: RouteConfigResource, version: 10, nonce: 2  (t=+168.613532ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000462980] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "myservice9"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-myservice9": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "ChByb3V0ZS1teXNlcnZpY2U5EikSCm15c2VydmljZTkaGwoDCgEvEhQKEmNsdXN0ZXItbXlzZXJ2aWNlOQ=="
          }
        }, err: <nil>  (t=+168.697038ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000462980] Received update on resource myservice9 from xds-client 0x22751b0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-myservice9": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-myservice9"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+168.785196ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 47 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-myservice9] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "10"  (t=+168.87097ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0007c4860 0xc000178058}  (t=+168.920718ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+168.951246ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+168.970909ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc0007c4a00] Created  (t=+168.994048ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc0007c4a00] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-myservice9": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-myservice9"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0007c4860 Attributes:0xc000178058}  (t=+169.036608ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0000ba2d0] Created  (t=+169.066768ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0000ba2d0] xDS credentials in use: false  (t=+169.085984ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc0007c4a00] Created child policy 0xc0000ba2d0 of type cds_experimental  (t=+169.108931ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0000ba2d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-myservice9"
        }  (t=+169.133019ms)
=== CONT  Test/FaultInjection_Unary/abort_then_delay_filters
    fault_test.go:547: 50% delay and abort (abort skips delay): RPC 0: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0000ba2d0] CDS watch started on cluster-myservice9  (t=+169.179433ms)
=== CONT  Test/FaultInjection_Unary/abort_then_delay_filters
    fault_test.go:547: 50% delay and abort (abort skips delay): RPC 1: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 50% delay and abort (abort skips delay): RPC 2: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 50% delay and abort (abort skips delay): RPC 3: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
    fault_test.go:547: 50% delay and abort (abort skips delay): RPC 4: err: rpc error: code = Unimplemented desc = RPC terminated due to fault injection, intnCalls: [100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice9] version "" with version "10"  (t=+169.415219ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246700] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+169.63947ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000246700] Resource with name: cluster-myservice9, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-myservice9",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-myservice9"
          }
        }  (t=+169.79679ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246700] Sending ACK for response type: ClusterResource, version: 10, nonce: 3  (t=+169.853771ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0000ba2d0] Watch update from xds-client 0x22751b0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-myservice9",
            "EDSServiceName": "endpoints-myservice9",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChJjbHVzdGVyLW15c2VydmljZTkaGgoCGgASFGVuZHBvaW50cy1teXNlcnZpY2U5EAM="
            }
          }
        ], security config: null  (t=+169.977979ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc00012cb40] Created  (t=+170.011523ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0000ba2d0] Created child policy 0xc00012cb40 of type cluster_resolver_experimental  (t=+170.069192ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 48 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-myservice9] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "10"  (t=+170.104163ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc00012cb40] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-myservice9",
              "edsServiceName": "endpoints-myservice9"
            }
          ]
        }  (t=+170.111851ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc00012cb40] EDS watch started on endpoints-myservice9  (t=+170.157213ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice9] version "" with version "10"  (t=+170.321483ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000246700] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+170.493467ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000246700] Resource with name: endpoints-myservice9, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-myservice9",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 61968
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+171.447326ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000246700] Sending ACK for response type: EndpointsResource, version: 10, nonce: 4  (t=+171.528242ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc00012cb40] resource update: [
          {}
        ]  (t=+171.603527ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0004a8680] Created  (t=+171.629905ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+171.939772ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc00012cb40] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice9",
                    "edsServiceName": "endpoints-myservice9",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+172.123768ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 49 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-myservice9] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "10"  (t=+172.173848ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0004a8680] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-myservice9",
                    "edsServiceName": "endpoints-myservice9",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+172.190226ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0004a8680] switching to ("priority-0-0", 0) in syncPriority  (t=+172.225237ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000a82000] Created  (t=+172.273852ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0004a8680] Created child policy 0xc000a82000 of type xds_cluster_impl_experimental  (t=+172.294936ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000a82000] Received update from resolver, balancer config: {
          "cluster": "cluster-myservice9",
          "edsServiceName": "endpoints-myservice9",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+172.342815ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0006c47e0] Created  (t=+172.369673ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0006c47e0] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+172.397805ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0006c47e0] Created child policy 0xc0004a8800 of type round_robin  (t=+172.436173ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+172.485744ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:61968" to connect  (t=+172.507737ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0006c47e0] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc0007b1d10}  (t=+173.088931ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0006c47e0] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc0007b1d10,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+173.124031ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a8680] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000a10410}  (t=+173.166926ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+174.480541ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0006c4920:{{localhost:61968  0xc0003820a0 0 <nil>}}]}  (t=+174.541004ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0006c47e0] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc00098c060}  (t=+174.569315ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0006c47e0] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc00098c060,state:READY,stateToAggregate:READY]  (t=+174.593156ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0004a8680] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0005e2e10}  (t=+174.618162ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc0007c4a00] Balancer state update from locality cluster-myservice9, new state: {ConnectivityState:READY Picker:0xc0005e2e10}  (t=+174.645093ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc0007c4a00] Child pickers: map[cluster-myservice9:picker:0xc0005e2e10,state:READY,stateToAggregate:READY]  (t=+174.676492ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+174.695967ms)
=== CONT  Test/FaultInjection_Unary/abort_then_delay_filters
    fault_test.go:547: 30% delay, no abort: RPC 5: err: <nil>, intnCalls: [100 100], newTimerCalls: [1s]
    fault_test.go:547: 30% delay, no abort: RPC 6: err: <nil>, intnCalls: [100 100], newTimerCalls: [1s]
    fault_test.go:547: 30% delay, no abort: RPC 7: err: <nil>, intnCalls: [100 100], newTimerCalls: [1s]
    fault_test.go:547: 20% success: RPC 8: err: <nil>, intnCalls: [100 100], newTimerCalls: []
    fault_test.go:547: 20% success: RPC 9: err: <nil>, intnCalls: [100 100], newTimerCalls: []
=== CONT  Test/FaultInjection_Unary
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+175.960382ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0000ba2d0] CDS watch canceled on cluster-myservice9  (t=+176.789929ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc00012cb40] EDS watch canceled on endpoints-myservice9  (t=+176.825241ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000a82000] Shutdown  (t=+176.854653ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc00012cb40] Shutdown  (t=+177.203465ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 50 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "10"  (t=+177.026369ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0000ba2d0] Shutdown  (t=+177.246187ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 51 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "b22bddc1-91e0-4357-b6e5-fda193e77df2", version "10"  (t=+177.27133ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc0007c4a00] Shutdown  (t=+177.281416ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000462980] Watch cancel on resource name myservice9 with xds-client 0x22751b0  (t=+179.926345ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+179.964781ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+180.005447ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000246700] Shutdown  (t=+180.027596ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000462980] Shutdown  (t=+180.043459ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+180.057974ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000246700] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: read tcp 127.0.0.1:61994->127.0.0.1:61967: use of closed network connection  (t=+180.198588ms)
    tlogger.go:99: transport_helper.go:275 [xds] [xds-client 0xc000246700] ADS request for {target: [], type: ListenerResource, version: "10", nonce: "1"} failed: xds: stream.Send(version_info:"10"  node:{id:"b22bddc1-91e0-4357-b6e5-fda193e77df2"  user_agent_name:"gRPC Go"  user_agent_version:"1.41.0-dev"  client_features:"envoy.lb.does_not_support_overprovisioning"}  type_url:"type.googleapis.com/envoy.config.listener.v3.Listener"  response_nonce:"1") failed: EOF  (t=+180.327717ms)
--- PASS: Test (0.86s)
    --- PASS: Test/FaultInjection_MaxActiveFaults (0.68s)
    --- PASS: Test/FaultInjection_Unary (0.18s)
        --- PASS: Test/FaultInjection_Unary/max_faults_zero (0.02s)
        --- PASS: Test/FaultInjection_Unary/no_abort_or_delay (0.02s)
        --- PASS: Test/FaultInjection_Unary/abort_always (0.00s)
        --- PASS: Test/FaultInjection_Unary/abort_10% (0.02s)
        --- PASS: Test/FaultInjection_Unary/delay_always (0.03s)
        --- PASS: Test/FaultInjection_Unary/delay_10% (0.02s)
        --- PASS: Test/FaultInjection_Unary/delay_80%,_abort_50% (0.01s)
        --- PASS: Test/FaultInjection_Unary/header_abort (0.01s)
        --- PASS: Test/FaultInjection_Unary/header_delay (0.01s)
        --- PASS: Test/FaultInjection_Unary/abort_then_delay_filters (0.02s)
PASS
ok  	google.golang.org/grpc/xds/internal/httpfilter/fault	(cached)
?   	google.golang.org/grpc/xds/internal/httpfilter/router	[no test files]
=== RUN   Test
=== RUN   Test/FindBestMatchingVirtualHost
=== RUN   Test/FindBestMatchingVirtualHost/exact-match
=== RUN   Test/FindBestMatchingVirtualHost/suffix-match
=== RUN   Test/FindBestMatchingVirtualHost/prefix-match
=== RUN   Test/FindBestMatchingVirtualHost/universal-match
=== RUN   Test/FindBestMatchingVirtualHost/long-exact-match
=== RUN   Test/FindBestMatchingVirtualHost/multiple-match-exact
=== RUN   Test/FindBestMatchingVirtualHost/multiple-match-suffix
=== RUN   Test/FindBestMatchingVirtualHost/multiple-match-prefix
=== RUN   Test/GenerateRequestHash
=== RUN   Test/GenerateRequestHash/test-generate-request-hash-headers
=== RUN   Test/GenerateRequestHash/test-generate-request-hash-channel-id
=== RUN   Test/GenerateRequestHash/test-generate-request-hash-empty-string
=== RUN   Test/PruneActiveClusters
=== RUN   Test/Register
=== RUN   Test/ResolverBuilder
=== RUN   Test/ResolverBuilder/simple-good
=== CONT  Test/ResolverBuilder
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c580] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+66.527µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00044c580] Watch started on resource name target with xds-client 0xc0000c11e0  (t=+107.548µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00044c580] Watch cancel on resource name target with xds-client 0xc0000c11e0  (t=+128.669µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00044c580] Shutdown  (t=+180.399µs)
=== RUN   Test/ResolverBuilder/newXDSClient-throws-error
=== CONT  Test/ResolverBuilder
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c600] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+212.399µs)
=== RUN   Test/ResolverBuilder_xdsCredsBootstrapMismatch
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c680] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+10.241µs)
=== RUN   Test/ServiceNotCancelRDSOnSameLDSUpdate
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+363.908µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+424.722µs)
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+685.306µs)
=== RUN   Test/ServiceWatch
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+99.856µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+354.54µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": "",
                  "Prefix": null,
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            },
            {
              "Domains": [
                "random"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+525.247µs)
=== RUN   Test/ServiceWatchInlineRDS
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+15.504µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+71.18µs)
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "",
          "InlineRouteConfig": {
            "VirtualHosts": [
              {
                "Domains": [
                  "target"
                ],
                "Routes": [
                  {
                    "Path": "",
                    "Prefix": null,
                    "Regex": null,
                    "CaseInsensitive": false,
                    "Headers": null,
                    "Fraction": null,
                    "HashPolicies": null,
                    "WeightedClusters": {
                      "cluster": {
                        "Weight": 1,
                        "HTTPFilterConfigOverride": null
                      }
                    },
                    "MaxStreamDuration": null,
                    "HTTPFilterConfigOverride": null,
                    "RouteAction": 0
                  }
                ],
                "HTTPFilterConfigOverride": null
              }
            ],
            "Raw": null
          },
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+317.159µs)
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+458.669µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+498.059µs)
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "",
          "InlineRouteConfig": {
            "VirtualHosts": [
              {
                "Domains": [
                  "target"
                ],
                "Routes": [
                  {
                    "Path": "",
                    "Prefix": null,
                    "Regex": null,
                    "CaseInsensitive": false,
                    "Headers": null,
                    "Fraction": null,
                    "HashPolicies": null,
                    "WeightedClusters": {
                      "cluster": {
                        "Weight": 1,
                        "HTTPFilterConfigOverride": null
                      }
                    },
                    "MaxStreamDuration": null,
                    "HTTPFilterConfigOverride": null,
                    "RouteAction": 0
                  }
                ],
                "HTTPFilterConfigOverride": null
              }
            ],
            "Raw": null
          },
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+662.535µs)
=== RUN   Test/ServiceWatchLDSUpdate
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+33.218µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+284.769µs)
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route2",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+465.216µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster2": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+487.097µs)
=== RUN   Test/ServiceWatchLDSUpdateMaxStreamDuration
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 1000000000,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+43.779µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+76.867µs)
    tlogger.go:99: watch_service.go:85 received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": null,
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+289.124µs)
    tlogger.go:99: watch_service.go:166 received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster2": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+546.817µs)
=== RUN   Test/XDSResolverBadServiceUpdate
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000197380] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+49.007µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000197380] Watch started on resource name target with xds-client 0xc0000c11e0  (t=+76.024µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000197380] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+141.811µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000197380] received RDS update: {
          "VirtualHosts": null,
          "Raw": null
        }, err: bad serviceupdate  (t=+214.879µs)
    tlogger.go:99: xds_resolver.go:201 [xds] [xds-resolver 0xc000197380] Watch error on resource target from xds-client 0xc0000c11e0, bad serviceupdate  (t=+301.987µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000197380] Watch cancel on resource name target with xds-client 0xc0000c11e0  (t=+324.862µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000197380] Shutdown  (t=+344.033µs)
=== RUN   Test/XDSResolverCloseClosesXDSClient
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c580] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+21.081µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00044c580] Watch started on resource name target with xds-client 0xc0000c1080  (t=+35.576µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00044c580] Watch cancel on resource name target with xds-client 0xc0000c1080  (t=+46.717µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00044c580] Shutdown  (t=+55.772µs)
=== RUN   Test/XDSResolverDelayedOnCommitted
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196000] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+67.841µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196000] Watch started on resource name target with xds-client 0xc000400d10  (t=+182.689µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196000] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+226.968µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "test-cluster-1": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+269.516µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196000] Received update on resource target from xds-client 0xc000400d10, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+365.044µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "NEW": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+502.789µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196000] Received update on resource target from xds-client 0xc000400d10, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "NEW": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "NEW"
                        }
                      }
                    ]
                  },
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+531.038µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "NEW": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+572.689µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196000] Received update on resource target from xds-client 0xc000400d10, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "NEW": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "NEW"
                        }
                      }
                    ]
                  },
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+600.427µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "NEW": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+677.218µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196000] Received update on resource target from xds-client 0xc000400d10, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "NEW": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "NEW"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+734.932µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196000] Received update on resource target from xds-client 0xc000400d10, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "NEW": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "NEW"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+793.887µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196000] Watch cancel on resource name target with xds-client 0xc000400d10  (t=+835.086µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196000] Shutdown  (t=+851.579µs)
=== RUN   Test/XDSResolverGoodServiceUpdate
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c780] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+20.047µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00044c780] Watch started on resource name target with xds-client 0xc0001949a0  (t=+34.712µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc00044c780] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+64.68µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00044c780] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "test-cluster-1": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+103.133µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00044c780] Received update on resource target from xds-client 0xc0001949a0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+146.649µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00044c780] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster_1": {
                      "Weight": 75,
                      "HTTPFilterConfigOverride": null
                    },
                    "cluster_2": {
                      "Weight": 25,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+297.056µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00044c780] Received update on resource target from xds-client 0xc0001949a0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster_1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_1"
                        }
                      }
                    ]
                  },
                  "cluster_2": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_2"
                        }
                      }
                    ]
                  },
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+339.294µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00044c780] Received update on resource target from xds-client 0xc0001949a0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster_1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_1"
                        }
                      }
                    ]
                  },
                  "cluster_2": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_2"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+393.385µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00044c780] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster_1": {
                      "Weight": 75,
                      "HTTPFilterConfigOverride": null
                    },
                    "cluster_2": {
                      "Weight": 25,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+532.457µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00044c780] Received update on resource target from xds-client 0xc0001949a0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster_1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_1"
                        }
                      }
                    ]
                  },
                  "cluster_2": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_2"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+602.875µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00044c780] Watch cancel on resource name target with xds-client 0xc0001949a0  (t=+665.726µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00044c780] Shutdown  (t=+685.45µs)
=== RUN   Test/XDSResolverGoodUpdateAfterError
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196000] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+35.137µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196000] Watch started on resource name target with xds-client 0xc000400d10  (t=+60.935µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196000] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+94.576µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": null,
          "Raw": null
        }, err: bad serviceupdate  (t=+132.797µs)
    tlogger.go:99: xds_resolver.go:201 [xds] [xds-resolver 0xc000196000] Watch error on resource target from xds-client 0xc000400d10, bad serviceupdate  (t=+169.326µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+191.869µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196000] Received update on resource target from xds-client 0xc000400d10, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+223.734µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196000] received RDS update: {
          "VirtualHosts": null,
          "Raw": null
        }, err: bad serviceupdate 2  (t=+306.919µs)
    tlogger.go:99: xds_resolver.go:201 [xds] [xds-resolver 0xc000196000] Watch error on resource target from xds-client 0xc000400d10, bad serviceupdate 2  (t=+332.192µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196000] Watch cancel on resource name target with xds-client 0xc000400d10  (t=+362.889µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196000] Shutdown  (t=+375.012µs)
=== RUN   Test/XDSResolverHTTPFilters
=== RUN   Test/XDSResolverHTTPFilters/no_router_filter
=== CONT  Test/XDSResolverHTTPFilters
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196580] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+42.03µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196580] Watch started on resource name target with xds-client 0xc0000c13f0  (t=+53.033µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196580] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "foo",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+94.223µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196580] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "1",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                },
                {
                  "Path": null,
                  "Prefix": "2",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+122.787µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196580] Received update on resource target from xds-client 0xc0000c13f0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "A": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "A"
                        }
                      }
                    ]
                  },
                  "B": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "B"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+163.421µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196580] Watch cancel on resource name target with xds-client 0xc0000c13f0  (t=+234.089µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196580] Shutdown  (t=+266.044µs)
=== RUN   Test/XDSResolverHTTPFilters/ignored_after_router_filter
=== CONT  Test/XDSResolverHTTPFilters
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196780] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+296.127µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196780] Watch started on resource name target with xds-client 0xc0000c1970  (t=+305.012µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196780] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "foo",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            },
            {
              "Name": "foo2",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+324.36µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196780] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "1",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                },
                {
                  "Path": null,
                  "Prefix": "2",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+349.684µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196780] Received update on resource target from xds-client 0xc0000c1970, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "A": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "A"
                        }
                      }
                    ]
                  },
                  "B": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "B"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+389.702µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196780] Watch cancel on resource name target with xds-client 0xc0000c1970  (t=+447.825µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196780] Shutdown  (t=+457.988µs)
=== RUN   Test/XDSResolverHTTPFilters/NewStream_error;_ensure_earlier_interceptor_Done_is_still_called
=== CONT  Test/XDSResolverHTTPFilters
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196980] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+531.467µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196980] Watch started on resource name target with xds-client 0xc0000c1ef0  (t=+547.532µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196980] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "foo",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "bar",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+579.167µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196980] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "1",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                },
                {
                  "Path": null,
                  "Prefix": "2",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+621.73µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196980] Received update on resource target from xds-client 0xc0000c1ef0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "A": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "A"
                        }
                      }
                    ]
                  },
                  "B": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "B"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+686.935µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196980] Watch cancel on resource name target with xds-client 0xc0000c1ef0  (t=+778.347µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196980] Shutdown  (t=+797.236µs)
=== RUN   Test/XDSResolverHTTPFilters/all_overrides
=== CONT  Test/XDSResolverHTTPFilters
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196b80] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+852.226µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196b80] Watch started on resource name target with xds-client 0xc0001e24d0  (t=+868.934µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196b80] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "foo",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "bar",
              "Filter": {
                "Filter": null
              },
              "Config": {
                "FilterConfig": null
              }
            },
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+895.65µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196b80] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "1",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                },
                {
                  "Path": null,
                  "Prefix": "2",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": {
                        "bar": {
                          "FilterConfig": null
                        },
                        "foo": {
                          "FilterConfig": null
                        }
                      }
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": {
                    "bar": {
                      "FilterConfig": null
                    },
                    "foo": {
                      "FilterConfig": null
                    }
                  },
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": {
                "bar": {
                  "FilterConfig": null
                },
                "foo": {
                  "FilterConfig": null
                }
              }
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+943.974µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196b80] Received update on resource target from xds-client 0xc0001e24d0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "A": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "A"
                        }
                      }
                    ]
                  },
                  "B": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "B"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+995.887µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196b80] Watch cancel on resource name target with xds-client 0xc0001e24d0  (t=+1.099729ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196b80] Shutdown  (t=+1.112742ms)
=== RUN   Test/XDSResolverMaxStreamDuration
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000197200] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+71.105µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000197200] Watch started on resource name target with xds-client 0xc0001e2a50  (t=+213.611µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000197200] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 1000000000,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+279.366µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000197200] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/foo",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": 5000000000,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                },
                {
                  "Path": null,
                  "Prefix": "/bar",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "B": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": 0,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                },
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "C": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+349.629µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000197200] Received update on resource target from xds-client 0xc0001e2a50, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "A": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "A"
                        }
                      }
                    ]
                  },
                  "B": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "B"
                        }
                      }
                    ]
                  },
                  "C": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "C"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+439.117µs)
=== RUN   Test/XDSResolverMaxStreamDuration/RDS_setting
=== RUN   Test/XDSResolverMaxStreamDuration/explicit_zero_in_RDS;_ignore_LDS
=== RUN   Test/XDSResolverMaxStreamDuration/no_config_in_RDS;_fallback_to_LDS
=== CONT  Test/XDSResolverMaxStreamDuration
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000197200] Watch cancel on resource name target with xds-client 0xc0001e2a50  (t=+562.716µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000197200] Shutdown  (t=+576.397µs)
=== RUN   Test/XDSResolverMultipleLDSUpdates
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196300] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+22.357µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196300] Watch started on resource name target with xds-client 0xc0001e2630  (t=+36.583µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196300] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+60.087µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196300] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+80.51µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196300] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 1000000000,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+607.379µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196300] Watch cancel on resource name target with xds-client 0xc0001e2630  (t=+765.518µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196300] Shutdown  (t=+785.328µs)
=== RUN   Test/XDSResolverRemovedResource
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196380] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+53.377µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196380] Watch started on resource name target with xds-client 0xc0001e26e0  (t=+81.485µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196380] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+132.787µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196380] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "test-cluster-1": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+324.937µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196380] Received update on resource target from xds-client 0xc0001e26e0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+429.23µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196380] received RDS update: {
          "VirtualHosts": null,
          "Raw": null
        }, err: resource removed error  (t=+512.113µs)
    tlogger.go:99: xds_resolver.go:201 [xds] [xds-resolver 0xc000196380] Watch error on resource target from xds-client 0xc0001e26e0, resource removed error  (t=+566.446µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196380] Received update on resource target from xds-client 0xc0001e26e0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+585.459µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196380] Watch cancel on resource name target with xds-client 0xc0001e26e0  (t=+624.789µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196380] Shutdown  (t=+638.253µs)
=== RUN   Test/XDSResolverRemovedWithRPCs
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196080] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+22.424µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196080] Watch started on resource name target with xds-client 0xc0000c1810  (t=+34.039µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196080] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+90.208µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196080] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "test-cluster-1": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+123.935µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196080] Received update on resource target from xds-client 0xc0000c1810, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+163.021µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196080] received RDS update: {
          "VirtualHosts": null,
          "Raw": null
        }, err: resource removed error  (t=+213.54µs)
    tlogger.go:99: xds_resolver.go:201 [xds] [xds-resolver 0xc000196080] Watch error on resource target from xds-client 0xc0000c1810, resource removed error  (t=+228.112µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196080] Received update on resource target from xds-client 0xc0000c1810, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "test-cluster-1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "test-cluster-1"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+245.384µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196080] Watch cancel on resource name target with xds-client 0xc0000c1810  (t=+271.849µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196080] Shutdown  (t=+280.12µs)
=== RUN   Test/XDSResolverRequestHash
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c400] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+26.243µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00044c400] Watch started on resource name target with xds-client 0xc0000c1080  (t=+45.313µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc00044c400] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+71.57µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00044c400] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": [
                    {
                      "HashPolicyType": 0,
                      "Terminal": false,
                      "HeaderName": ":path",
                      "Regex": null,
                      "RegexSubstitution": ""
                    }
                  ],
                  "WeightedClusters": {
                    "cluster_1": {
                      "Weight": 75,
                      "HTTPFilterConfigOverride": null
                    },
                    "cluster_2": {
                      "Weight": 25,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+103.817µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00044c400] Received update on resource target from xds-client 0xc0000c1080, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster_1": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_1"
                        }
                      }
                    ]
                  },
                  "cluster_2": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster_2"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+146.122µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00044c400] Watch cancel on resource name target with xds-client 0xc0000c1080  (t=+205.954µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00044c400] Shutdown  (t=+218.071µs)
=== RUN   Test/XDSResolverResourceNotFoundError
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c700] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+16.543µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00044c700] Watch started on resource name target with xds-client 0xc0000c1600  (t=+27.916µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc00044c700] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+48.281µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00044c700] received RDS update: {
          "VirtualHosts": null,
          "Raw": null
        }, err: resource removed error  (t=+67.829µs)
    tlogger.go:99: xds_resolver.go:201 [xds] [xds-resolver 0xc00044c700] Watch error on resource target from xds-client 0xc0000c1600, resource removed error  (t=+84.876µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00044c700] Watch cancel on resource name target with xds-client 0xc0000c1600  (t=+1.00028983s)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00044c700] Shutdown  (t=+1.000363716s)
=== RUN   Test/XDSResolverWRR
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000196080] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+280.456µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000196080] Watch started on resource name target with xds-client 0xc000644000  (t=+328.02µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000196080] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+385.934µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000196080] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "A": {
                      "Weight": 5,
                      "HTTPFilterConfigOverride": null
                    },
                    "B": {
                      "Weight": 10,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+447.426µs)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000196080] Received update on resource target from xds-client 0xc000644000, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "A": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "A"
                        }
                      }
                    ]
                  },
                  "B": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "B"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+532.113µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000196080] Watch cancel on resource name target with xds-client 0xc000644000  (t=+671.387µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000196080] Shutdown  (t=+692.946µs)
=== RUN   Test/XDSResolverWatchCallbackAfterClose
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00044c600] Creating resolver for target: {Scheme: Authority: Endpoint:target}  (t=+33.235µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00044c600] Watch started on resource name target with xds-client 0xc0000c14a0  (t=+54.456µs)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc00044c600] received LDS update: {
          "RouteConfigName": "route",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "rtr",
              "Filter": {},
              "Config": null
            }
          ],
          "InboundListenerCfg": null,
          "Raw": null
        }, err: <nil>  (t=+89.135µs)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00044c600] Watch cancel on resource name target with xds-client 0xc0000c14a0  (t=+113.873µs)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00044c600] Shutdown  (t=+134.854µs)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00044c600] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "target"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 0
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": null
        }, err: <nil>  (t=+169.902µs)
--- PASS: Test (2.03s)
    --- PASS: Test/FindBestMatchingVirtualHost (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/exact-match (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/suffix-match (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/prefix-match (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/universal-match (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/long-exact-match (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/multiple-match-exact (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/multiple-match-suffix (0.00s)
        --- PASS: Test/FindBestMatchingVirtualHost/multiple-match-prefix (0.00s)
    --- PASS: Test/GenerateRequestHash (0.00s)
        --- PASS: Test/GenerateRequestHash/test-generate-request-hash-headers (0.00s)
        --- PASS: Test/GenerateRequestHash/test-generate-request-hash-channel-id (0.00s)
        --- PASS: Test/GenerateRequestHash/test-generate-request-hash-empty-string (0.00s)
    --- PASS: Test/PruneActiveClusters (0.00s)
    --- PASS: Test/Register (0.00s)
    --- PASS: Test/ResolverBuilder (0.00s)
        --- PASS: Test/ResolverBuilder/simple-good (0.00s)
        --- PASS: Test/ResolverBuilder/newXDSClient-throws-error (0.00s)
    --- PASS: Test/ResolverBuilder_xdsCredsBootstrapMismatch (0.00s)
    --- PASS: Test/ServiceNotCancelRDSOnSameLDSUpdate (0.00s)
    --- PASS: Test/ServiceWatch (0.00s)
    --- PASS: Test/ServiceWatchInlineRDS (0.00s)
    --- PASS: Test/ServiceWatchLDSUpdate (0.00s)
    --- PASS: Test/ServiceWatchLDSUpdateMaxStreamDuration (0.00s)
    --- PASS: Test/XDSResolverBadServiceUpdate (0.00s)
    --- PASS: Test/XDSResolverCloseClosesXDSClient (0.00s)
    --- PASS: Test/XDSResolverDelayedOnCommitted (0.00s)
    --- PASS: Test/XDSResolverGoodServiceUpdate (0.00s)
    --- PASS: Test/XDSResolverGoodUpdateAfterError (0.00s)
    --- PASS: Test/XDSResolverHTTPFilters (0.00s)
        --- PASS: Test/XDSResolverHTTPFilters/no_router_filter (0.00s)
        --- PASS: Test/XDSResolverHTTPFilters/ignored_after_router_filter (0.00s)
        --- PASS: Test/XDSResolverHTTPFilters/NewStream_error;_ensure_earlier_interceptor_Done_is_still_called (0.00s)
        --- PASS: Test/XDSResolverHTTPFilters/all_overrides (0.00s)
    --- PASS: Test/XDSResolverMaxStreamDuration (0.00s)
        --- PASS: Test/XDSResolverMaxStreamDuration/RDS_setting (0.00s)
        --- PASS: Test/XDSResolverMaxStreamDuration/explicit_zero_in_RDS;_ignore_LDS (0.00s)
        --- PASS: Test/XDSResolverMaxStreamDuration/no_config_in_RDS;_fallback_to_LDS (0.00s)
    --- PASS: Test/XDSResolverMultipleLDSUpdates (0.00s)
    --- PASS: Test/XDSResolverRemovedResource (0.00s)
    --- PASS: Test/XDSResolverRemovedWithRPCs (0.00s)
    --- PASS: Test/XDSResolverRequestHash (0.00s)
    --- PASS: Test/XDSResolverResourceNotFoundError (1.00s)
    --- PASS: Test/XDSResolverWRR (0.00s)
    --- PASS: Test/XDSResolverWatchCallbackAfterClose (1.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/resolver	(cached)
=== RUN   Test
=== RUN   Test/ErrorReceived
=== RUN   Test/ListenerWrapper_Accept
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc0007ce000] Watch started on resource name lds.target.1.2.3.4:1111  (t=+464.818µs)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc0007ce000] Received update for resource "lds.target.1.2.3.4:1111": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc000222cf0 Raw:<nil>}  (t=+742.637µs)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc0007ce000] Listener "0.0.0.0:50051" entering mode: "serving" due to error: <nil>  (t=+815.525µs)
    tlogger.go:99: listener_wrapper.go:301 [xds] [xds-server-listener 0xc0007ce000] connection from 10.1.1.1:80 to 192.168.1.2:79 failed to find any matching filter chain  (t=+1.039873ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc0007ce000] Watch cancelled on resource name lds.target.1.2.3.4:1111  (t=+1.152003ms)
=== RUN   Test/NewListenerWrapper
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc0000fc2d0] Watch started on resource name lds.target.1.2.3.4:1111  (t=+20.26µs)
    tlogger.go:99: listener_wrapper.go:392 [xds] [xds-server-listener 0xc0000fc2d0] Received error for resource "lds.target.1.2.3.4:1111": bad listener update  (t=+98.599µs)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc0000fc2d0] Received update for resource "lds.target.1.2.3.4:1111": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc0007c4870 Raw:<nil>}  (t=+10.356986ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc0000fc2d0] Listener "0.0.0.0:50051" entering mode: "not-serving" due to error: address (10.0.0.1:50051) in Listener update does not match listening address: (0.0.0.0:50051)  (t=+10.414526ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc0000fc2d0] Received update for resource "lds.target.1.2.3.4:1111": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc0007c4930 Raw:<nil>}  (t=+20.666803ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc0000fc2d0] Listener "0.0.0.0:50051" entering mode: "serving" due to error: <nil>  (t=+20.726508ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc0000fc2d0] Watch cancelled on resource name lds.target.1.2.3.4:1111  (t=+20.784698ms)
=== RUN   Test/NewListenerWrapperWithRouteUpdate
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc0000fc3c0] Watch started on resource name lds.target.1.2.3.4:1111  (t=+45.908µs)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc0000fc3c0] Received update for resource "lds.target.1.2.3.4:1111": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc000222ed0 Raw:<nil>}  (t=+207.153µs)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc0000fc3c0] Listener "0.0.0.0:50051" entering mode: "serving" due to error: <nil>  (t=+10.743126ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc0000fc3c0] Watch cancelled on resource name lds.target.1.2.3.4:1111  (t=+10.791181ms)
=== RUN   Test/SuccessCaseDeletedRoute
=== RUN   Test/SuccessCaseOneRDSWatch
=== RUN   Test/SuccessCaseSecondUpdateMakesRouteFull
=== RUN   Test/SuccessCaseTwoUpdates
=== RUN   Test/SuccessCaseTwoUpdatesAddAndDeleteRoute
--- PASS: Test (0.13s)
    --- PASS: Test/ErrorReceived (0.00s)
    --- PASS: Test/ListenerWrapper_Accept (0.00s)
    --- PASS: Test/NewListenerWrapper (0.08s)
    --- PASS: Test/NewListenerWrapperWithRouteUpdate (0.01s)
    --- PASS: Test/SuccessCaseDeletedRoute (0.00s)
    --- PASS: Test/SuccessCaseOneRDSWatch (0.00s)
    --- PASS: Test/SuccessCaseSecondUpdateMakesRouteFull (0.01s)
    --- PASS: Test/SuccessCaseTwoUpdates (0.01s)
    --- PASS: Test/SuccessCaseTwoUpdatesAddAndDeleteRoute (0.01s)
PASS
ok  	google.golang.org/grpc/xds/internal/server	(cached)
=== RUN   Test
=== RUN   Test/ClientSideXDS
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+2.857963ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+2.885413ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+2.915943ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc000439d80] Creating resolver for target: {Scheme:xds Authority: Endpoint:my-service-client-side-xds}  (t=+2.9423ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:62762",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "87ef1e66-29fe-458f-afeb-54510258ab6b",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": {
            "client-side-certificate-provider-instance": {},
            "server-side-certificate-provider-instance": {}
          },
          "ServerListenerResourceNameTemplate": "grpc/server?xds.resource.listening_address=%s"
        }  (t=+3.495706ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+3.546777ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+3.575734ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62762  <nil> 0 <nil>}] <nil> <nil>}  (t=+3.5965ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+3.61479ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+3.624448ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc0004f2b00] Created ClientConn to xDS management server: 127.0.0.1:62762  (t=+3.651215ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc0004f2b00] Created  (t=+3.694643ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc000439d80] Watch started on resource name my-service-client-side-xds with xds-client 0xc00000e528  (t=+3.749872ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+3.761851ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62762" to connect  (t=+3.821961ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+3.856968ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+3.881279ms)
    tlogger.go:99: syscall_nonlinux.go:38 [core] CPU time info is unavailable on non-linux or appengine environment.  (t=+4.095598ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+4.425294ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+4.471369ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc0004f2b00] ADS stream created  (t=+4.571426ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[my-service-client-side-xds] version "" with version "1"  (t=+5.061026ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2b00] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+6.488641ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2b00] Resource with name: my-service-client-side-xds, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "my-service-client-side-xds",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-my-service-client-side-xds"
                    },
                    "httpFilters": [
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-my-service-client-side-xds"
              },
              "httpFilters": [
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+6.80713ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2b00] Sending ACK for response type: ListenerResource, version: 1, nonce: 1  (t=+7.008938ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc000439d80] received LDS update: {
          "RouteConfigName": "route-my-service-client-side-xds",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "ChpteS1zZXJ2aWNlLWNsaWVudC1zaWRlLXhkcxqpAhqTAgotZW52b3kuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyIuEBCmV0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlchJ4Kk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaJgoCGgASIHJvdXRlLW15LXNlcnZpY2UtY2xpZW50LXNpZGUteGRzOhFmaWx0ZXItY2hhaW4tbmFtZZoB5AEK4QEKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEngqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchomCgIaABIgcm91dGUtbXktc2VydmljZS1jbGllbnQtc2lkZS14ZHM="
          }
        }, err: <nil>  (t=+7.05581ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 1 for type.googleapis.com/envoy.config.listener.v3.Listener[my-service-client-side-xds] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "1"  (t=+7.11244ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-client-side-xds] version "" with version "1"  (t=+7.148341ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2b00] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+7.518913ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc0004f2b00] Resource with name: route-my-service-client-side-xds, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-my-service-client-side-xds",
          "virtualHosts": [
            {
              "domains": [
                "my-service-client-side-xds"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-my-service-client-side-xds"
                  }
                }
              ]
            }
          ]
        }.  (t=+7.828589ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2b00] Sending ACK for response type: RouteConfigResource, version: 1, nonce: 2  (t=+7.867648ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc000439d80] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "my-service-client-side-xds"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-my-service-client-side-xds": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "CiByb3V0ZS1teS1zZXJ2aWNlLWNsaWVudC1zaWRlLXhkcxJJEhpteS1zZXJ2aWNlLWNsaWVudC1zaWRlLXhkcxorCgMKAS8SJAoiY2x1c3Rlci1teS1zZXJ2aWNlLWNsaWVudC1zaWRlLXhkcw=="
          }
        }, err: <nil>  (t=+7.928655ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 2 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-client-side-xds] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "1"  (t=+7.986471ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc000439d80] Received update on resource my-service-client-side-xds from xds-client 0xc00000e528, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-my-service-client-side-xds": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-my-service-client-side-xds"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+8.026153ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc0005382e0 0xc000816138}  (t=+8.080143ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+8.091052ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+8.102851ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000538460] Created  (t=+8.123763ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000538460] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-my-service-client-side-xds": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-my-service-client-side-xds"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc0005382e0 Attributes:0xc000816138}  (t=+8.151752ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc000768000] Created  (t=+8.175146ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc000768000] xDS credentials in use: false  (t=+8.186498ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000538460] Created child policy 0xc000768000 of type cds_experimental  (t=+8.200559ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc000768000] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-my-service-client-side-xds"
        }  (t=+8.215193ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc000768000] CDS watch started on cluster-my-service-client-side-xds  (t=+8.250676ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-client-side-xds] version "" with version "1"  (t=+8.343971ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2b00] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+8.999059ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc0004f2b00] Resource with name: cluster-my-service-client-side-xds, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-my-service-client-side-xds",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-my-service-client-side-xds"
          }
        }  (t=+9.097084ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2b00] Sending ACK for response type: ClusterResource, version: 1, nonce: 3  (t=+9.180054ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc000768000] Watch update from xds-client 0xc00000e528, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-my-service-client-side-xds",
            "EDSServiceName": "endpoints-my-service-client-side-xds",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "CiJjbHVzdGVyLW15LXNlcnZpY2UtY2xpZW50LXNpZGUteGRzGioKAhoAEiRlbmRwb2ludHMtbXktc2VydmljZS1jbGllbnQtc2lkZS14ZHMQAw=="
            }
          }
        ], security config: null  (t=+9.211355ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000548c60] Created  (t=+9.243392ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 3 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-client-side-xds] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "1"  (t=+9.250213ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc000768000] Created child policy 0xc000548c60 of type cluster_resolver_experimental  (t=+9.259027ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000548c60] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-my-service-client-side-xds",
              "edsServiceName": "endpoints-my-service-client-side-xds"
            }
          ]
        }  (t=+9.322794ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000548c60] EDS watch started on endpoints-my-service-client-side-xds  (t=+9.339406ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-client-side-xds] version "" with version "1"  (t=+9.417159ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2b00] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+9.634791ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc0004f2b00] Resource with name: endpoints-my-service-client-side-xds, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-my-service-client-side-xds",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "localhost",
                        "portValue": 62763
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+9.723231ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2b00] Sending ACK for response type: EndpointsResource, version: 1, nonce: 4  (t=+9.825159ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000548c60] resource update: [
          {}
        ]  (t=+9.845511ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00073a100] Created  (t=+9.862098ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+9.881733ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 4 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-client-side-xds] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "1"  (t=+9.897085ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000548c60] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-client-side-xds",
                    "edsServiceName": "endpoints-my-service-client-side-xds",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+9.997094ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00073a100] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-client-side-xds",
                    "edsServiceName": "endpoints-my-service-client-side-xds",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+10.022596ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00073a100] switching to ("priority-0-0", 0) in syncPriority  (t=+10.044386ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000216000] Created  (t=+10.067261ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00073a100] Created child policy 0xc000216000 of type xds_cluster_impl_experimental  (t=+10.077348ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000216000] Received update from resolver, balancer config: {
          "cluster": "cluster-my-service-client-side-xds",
          "edsServiceName": "endpoints-my-service-client-side-xds",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+10.097914ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000538e40] Created  (t=+10.112815ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000538e40] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+10.127514ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000538e40] Created child policy 0xc00073a300 of type round_robin  (t=+10.138612ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+10.172257ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "localhost:62763" to connect  (t=+10.186455ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000538e40] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc00068fa50}  (t=+10.213238ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000538e40] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc00068fa50,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+10.240956ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00073a100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc0009cc8c0}  (t=+10.258761ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+11.403311ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000538f80:{{localhost:62763  0xc000816358 0 <nil>}}]}  (t=+11.478213ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000538e40] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000309800}  (t=+11.638563ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000538e40] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000309800,state:READY,stateToAggregate:READY]  (t=+11.656789ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00073a100] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00074cb40}  (t=+11.675409ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000538460] Balancer state update from locality cluster-my-service-client-side-xds, new state: {ConnectivityState:READY Picker:0xc00074cb40}  (t=+11.694216ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000538460] Child pickers: map[cluster-my-service-client-side-xds:picker:0xc00074cb40,state:READY,stateToAggregate:READY]  (t=+11.715916ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+11.728133ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+11.930791ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc000768000] CDS watch canceled on cluster-my-service-client-side-xds  (t=+11.950338ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000548c60] EDS watch canceled on endpoints-my-service-client-side-xds  (t=+11.976301ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000216000] Shutdown  (t=+11.995342ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000548c60] Shutdown  (t=+12.004301ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc000768000] Shutdown  (t=+12.012185ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000538460] Shutdown  (t=+12.024483ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc000439d80] Watch cancel on resource name my-service-client-side-xds with xds-client 0xc00000e528  (t=+12.036307ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+12.051865ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+12.062884ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc0004f2b00] Shutdown  (t=+12.073723ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 5 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "1"  (t=+12.080047ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc000439d80] Shutdown  (t=+12.083986ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+12.135956ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 6 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "1"  (t=+12.107083ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc0004f2b00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+12.103445ms)
=== RUN   Test/ServerSideXDS_Fallback
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc0006904b0] Created xds.GRPCServer  (t=+19.636µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc0006904b0] xDS credentials in use: true  (t=+55.529µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc0006904b0] Serve() passed a net.Listener on 127.0.0.1:62767  (t=+503.669µs)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+536.789µs)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+551.579µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+569.325µs)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc0009d2380] Creating resolver for target: {Scheme:xds Authority: Endpoint:my-service-fallback}  (t=+581.918µs)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:62762",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "87ef1e66-29fe-458f-afeb-54510258ab6b",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": {
            "client-side-certificate-provider-instance": {},
            "server-side-certificate-provider-instance": {}
          },
          "ServerListenerResourceNameTemplate": "grpc/server?xds.resource.listening_address=%s"
        }  (t=+633.738µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+652.67µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+663.848µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62762  <nil> 0 <nil>}] <nil> <nil>}  (t=+676.16µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+687.139µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+695.806µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc0004f2000] Created ClientConn to xDS management server: 127.0.0.1:62762  (t=+712.952µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+728.59µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc0004f2000] Created  (t=+737.095µs)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc0006904b0] Created an xdsClient  (t=+746.902µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+747.241µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62762" to connect  (t=+738.704µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc0009d2380] Watch started on resource name my-service-fallback with xds-client 0xc00058f260  (t=+768.177µs)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc0007680f0] Watch started on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62767  (t=+771.101µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.004168ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.025776ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc0004f2000] ADS stream created  (t=+1.054953ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[my-service-fallback grpc/server?xds.resource.listening_address=127.0.0.1:62767] version "" with version "2"  (t=+1.173955ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+1.337901ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2000] Resource with name: my-service-fallback, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "my-service-fallback",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-my-service-fallback"
                    },
                    "httpFilters": [
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-my-service-fallback"
              },
              "httpFilters": [
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+1.679192ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2000] Resource with name: grpc/server?xds.resource.listening_address=127.0.0.1:62767, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=127.0.0.1:62767",
          "address": {
            "socketAddress": {
              "address": "127.0.0.1",
              "portValue": 62767
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v4-wildcard"
            },
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v6-wildcard"
            }
          ]
        }  (t=+1.800428ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: ListenerResource, version: 2, nonce: 1  (t=+1.879605ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc0009d2380] received LDS update: {
          "RouteConfigName": "route-my-service-fallback",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "ChNteS1zZXJ2aWNlLWZhbGxiYWNrGqICGowCCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIi2gEKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEnEqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchofCgIaABIZcm91dGUtbXktc2VydmljZS1mYWxsYmFjazoRZmlsdGVyLWNoYWluLW5hbWWaAd0BCtoBCmV0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5uZXR3b3JrLmh0dHBfY29ubmVjdGlvbl9tYW5hZ2VyLnYzLkh0dHBDb25uZWN0aW9uTWFuYWdlchJxKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaHwoCGgASGXJvdXRlLW15LXNlcnZpY2UtZmFsbGJhY2s="
          }
        }, err: <nil>  (t=+1.913416ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 7 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62767 my-service-fallback] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+1.946986ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-fallback] version "" with version "2"  (t=+2.001221ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+2.06121ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc0007680f0] Received update for resource "grpc/server?xds.resource.listening_address=127.0.0.1:62767": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc000122660 Raw:[type.googleapis.com/envoy.config.listener.v3.Listener]:{name:"grpc/server?xds.resource.listening_address=127.0.0.1:62767"  address:{socket_address:{address:"127.0.0.1"  port_value:62767}}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v4-wildcard"}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"::"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"::"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v6-wildcard"}}}  (t=+2.091667ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc0007680f0] Listener "127.0.0.1:62767" entering mode: "serving" due to error: <nil>  (t=+2.108212ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc0004f2000] Resource with name: route-my-service-fallback, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-my-service-fallback",
          "virtualHosts": [
            {
              "domains": [
                "my-service-fallback"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-my-service-fallback"
                  }
                }
              ]
            }
          ]
        }.  (t=+2.134976ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: RouteConfigResource, version: 2, nonce: 2  (t=+2.171357ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc0009d2380] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "my-service-fallback"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-my-service-fallback": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "Chlyb3V0ZS1teS1zZXJ2aWNlLWZhbGxiYWNrEjsSE215LXNlcnZpY2UtZmFsbGJhY2saJAoDCgEvEh0KG2NsdXN0ZXItbXktc2VydmljZS1mYWxsYmFjaw=="
          }
        }, err: <nil>  (t=+2.19871ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 8 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-fallback] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+2.238422ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc0009d2380] Received update on resource my-service-fallback from xds-client 0xc00058f260, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-my-service-fallback": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-my-service-fallback"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+2.240742ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc00049c460 0xc0009fc0b8}  (t=+2.301441ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+2.311122ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+2.319054ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc00049c5e0] Created  (t=+2.331707ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc00049c5e0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-my-service-fallback": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-my-service-fallback"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc00049c460 Attributes:0xc0009fc0b8}  (t=+2.351862ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0005f41e0] Created  (t=+2.371781ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0005f41e0] xDS credentials in use: true  (t=+2.380155ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc00049c5e0] Created child policy 0xc0005f41e0 of type cds_experimental  (t=+2.390476ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0005f41e0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-my-service-fallback"
        }  (t=+2.401663ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0005f41e0] CDS watch started on cluster-my-service-fallback  (t=+2.425554ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-fallback] version "" with version "2"  (t=+2.505283ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+2.565883ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc0004f2000] Resource with name: cluster-my-service-fallback, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-my-service-fallback",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-my-service-fallback"
          }
        }  (t=+2.640133ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: ClusterResource, version: 2, nonce: 3  (t=+2.670314ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0005f41e0] Watch update from xds-client 0xc00058f260, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-my-service-fallback",
            "EDSServiceName": "endpoints-my-service-fallback",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "ChtjbHVzdGVyLW15LXNlcnZpY2UtZmFsbGJhY2saIwoCGgASHWVuZHBvaW50cy1teS1zZXJ2aWNlLWZhbGxiYWNrEAM="
            }
          }
        ], security config: null  (t=+2.691702ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000900ea0] Created  (t=+2.709085ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0005f41e0] Created child policy 0xc000900ea0 of type cluster_resolver_experimental  (t=+2.722151ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 9 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-fallback] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+2.735448ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000900ea0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-my-service-fallback",
              "edsServiceName": "endpoints-my-service-fallback"
            }
          ]
        }  (t=+2.743961ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000900ea0] EDS watch started on endpoints-my-service-fallback  (t=+2.757281ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-fallback] version "" with version "2"  (t=+2.843387ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+3.23408ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc0004f2000] Resource with name: endpoints-my-service-fallback, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-my-service-fallback",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "127.0.0.1",
                        "portValue": 62767
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+3.374191ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: EndpointsResource, version: 2, nonce: 4  (t=+3.433576ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000900ea0] resource update: [
          {}
        ]  (t=+3.471243ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc000132980] Created  (t=+3.521649ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+3.555239ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 10 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-fallback] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+3.565628ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000900ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-fallback",
                    "edsServiceName": "endpoints-my-service-fallback",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+3.858356ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc000132980] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-fallback",
                    "edsServiceName": "endpoints-my-service-fallback",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+3.891699ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc000132980] switching to ("priority-0-0", 0) in syncPriority  (t=+3.906957ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000216000] Created  (t=+3.922702ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc000132980] Created child policy 0xc000216000 of type xds_cluster_impl_experimental  (t=+3.931508ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000216000] Received update from resolver, balancer config: {
          "cluster": "cluster-my-service-fallback",
          "edsServiceName": "endpoints-my-service-fallback",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+3.950389ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000708820] Created  (t=+3.96226ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000708820] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+3.976752ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000708820] Created child policy 0xc000697a00 of type round_robin  (t=+3.988216ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+4.012699ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62767" to connect  (t=+4.024009ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000708820] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000408b30}  (t=+4.04533ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000708820] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000408b30,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+4.066443ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000132980] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000690050}  (t=+4.087216ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+4.283746ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000708ea0:{{127.0.0.1:62767  0xc000114490 0 <nil>}}]}  (t=+4.311676ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000708820] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc00090a240}  (t=+4.324726ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000708820] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc00090a240,state:READY,stateToAggregate:READY]  (t=+4.337175ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc000132980] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0009cc190}  (t=+4.351223ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc00049c5e0] Balancer state update from locality cluster-my-service-fallback, new state: {ConnectivityState:READY Picker:0xc0009cc190}  (t=+4.367644ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc00049c5e0] Child pickers: map[cluster-my-service-fallback:picker:0xc0009cc190,state:READY,stateToAggregate:READY]  (t=+4.384507ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+4.394686ms)
    xds_server_integration_test.go:163: rpc EmptyCall() failed: rpc error: code = Unavailable desc = the incoming RPC did not match a configured Virtual Host
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+4.535281ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0005f41e0] CDS watch canceled on cluster-my-service-fallback  (t=+4.54861ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000900ea0] EDS watch canceled on endpoints-my-service-fallback  (t=+4.558775ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000216000] Shutdown  (t=+4.571669ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000900ea0] Shutdown  (t=+4.57975ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0005f41e0] Shutdown  (t=+4.586659ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc00049c5e0] Shutdown  (t=+4.596581ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc0009d2380] Watch cancel on resource name my-service-fallback with xds-client 0xc00058f260  (t=+4.606258ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc0009d2380] Shutdown  (t=+4.614299ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+4.622263ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 11 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+4.638817ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 12 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+4.667163ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc0007680f0] Watch cancelled on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62767  (t=+4.651881ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+4.698378ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+4.710949ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc0004f2000] Shutdown  (t=+4.722837ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 13 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62767] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+4.763935ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc0004f2000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+4.761746ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 14 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "2"  (t=+4.788981ms)
=== RUN   Test/ServerSideXDS_FileWatcherCerts
=== RUN   Test/ServerSideXDS_FileWatcherCerts/tls
=== CONT  Test/ServerSideXDS_FileWatcherCerts
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc0006901e0] Created xds.GRPCServer  (t=+20.337µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc0006901e0] xDS credentials in use: true  (t=+35.228µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc0006901e0] Serve() passed a net.Listener on 127.0.0.1:62770  (t=+447.334µs)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:62762",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "87ef1e66-29fe-458f-afeb-54510258ab6b",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": {
            "client-side-certificate-provider-instance": {},
            "server-side-certificate-provider-instance": {}
          },
          "ServerListenerResourceNameTemplate": "grpc/server?xds.resource.listening_address=%s"
        }  (t=+567.945µs)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+572.644µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+587.122µs)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+591.087µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+598.557µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+608.81µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62762  <nil> 0 <nil>}] <nil> <nil>}  (t=+610.546µs)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc0009d3680] Creating resolver for target: {Scheme:xds Authority: Endpoint:my-service-file-watcher-certs-tls}  (t=+621.515µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+624.435µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+635.456µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00029e700] Created ClientConn to xDS management server: 127.0.0.1:62762  (t=+652.593µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00029e700] Created  (t=+666.029µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+668.292µs)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc0006901e0] Created an xdsClient  (t=+675.856µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62762" to connect  (t=+680.01µs)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000768000] Watch started on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62770  (t=+690.396µs)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+697.616µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc0009d3680] Watch started on resource name my-service-file-watcher-certs-tls with xds-client 0xc000516258  (t=+704.347µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+705.224µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+879.347µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+893.176µs)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc00029e700] ADS stream created  (t=+912.125µs)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62770 my-service-file-watcher-certs-tls] version "" with version "3"  (t=+1.039059ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc00029e700] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+1.481637ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc00029e700] Resource with name: my-service-file-watcher-certs-tls, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "my-service-file-watcher-certs-tls",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-my-service-file-watcher-certs-tls"
                    },
                    "httpFilters": [
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-my-service-file-watcher-certs-tls"
              },
              "httpFilters": [
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+2.062125ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc00029e700] Resource with name: grpc/server?xds.resource.listening_address=127.0.0.1:62770, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=127.0.0.1:62770",
          "address": {
            "socketAddress": {
              "address": "127.0.0.1",
              "portValue": 62770
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "server-side-certificate-provider-instance"
                    }
                  }
                }
              },
              "name": "v4-wildcard"
            },
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "server-side-certificate-provider-instance"
                    }
                  }
                }
              },
              "name": "v6-wildcard"
            }
          ]
        }  (t=+2.204624ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc00029e700] Sending ACK for response type: ListenerResource, version: 3, nonce: 1  (t=+2.290583ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc0009d3680] received LDS update: {
          "RouteConfigName": "route-my-service-file-watcher-certs-tls",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CiFteS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy10bHMasAIamgIKLWVudm95LmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlciLoAQpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISfypOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGi0KAhoAEidyb3V0ZS1teS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy10bHM6EWZpbHRlci1jaGFpbi1uYW1lmgHrAQroAQpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISfypOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGi0KAhoAEidyb3V0ZS1teS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy10bHM="
          }
        }, err: <nil>  (t=+2.330009ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 15 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62770 my-service-file-watcher-certs-tls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+2.38384ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-file-watcher-certs-tls] version "" with version "3"  (t=+2.41897ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc00029e700] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+2.479818ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000768000] Received update for resource "grpc/server?xds.resource.listening_address=127.0.0.1:62770": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc00059fe30 Raw:[type.googleapis.com/envoy.config.listener.v3.Listener]:{name:"grpc/server?xds.resource.listening_address=127.0.0.1:62770"  address:{socket_address:{address:"127.0.0.1"  port_value:62770}}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  transport_socket:{name:"envoy.transport_sockets.tls"  typed_config:{[type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext]:{common_tls_context:{tls_certificate_certificate_provider_instance:{instance_name:"server-side-certificate-provider-instance"}}}}}  name:"v4-wildcard"}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"::"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"::"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  transport_socket:{name:"envoy.transport_sockets.tls"  typed_config:{[type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext]:{common_tls_context:{tls_certificate_certificate_provider_instance:{instance_name:"server-side-certificate-provider-instance"}}}}}  name:"v6-wildcard"}}}  (t=+2.500099ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000768000] Listener "127.0.0.1:62770" entering mode: "serving" due to error: <nil>  (t=+2.514608ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc00029e700] Resource with name: route-my-service-file-watcher-certs-tls, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-my-service-file-watcher-certs-tls",
          "virtualHosts": [
            {
              "domains": [
                "my-service-file-watcher-certs-tls"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-my-service-file-watcher-certs-tls"
                  }
                }
              ]
            }
          ]
        }.  (t=+2.578971ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc00029e700] Sending ACK for response type: RouteConfigResource, version: 3, nonce: 2  (t=+2.619114ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc0009d3680] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "my-service-file-watcher-certs-tls"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-my-service-file-watcher-certs-tls": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "Cidyb3V0ZS1teS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy10bHMSVxIhbXktc2VydmljZS1maWxlLXdhdGNoZXItY2VydHMtdGxzGjIKAwoBLxIrCiljbHVzdGVyLW15LXNlcnZpY2UtZmlsZS13YXRjaGVyLWNlcnRzLXRscw=="
          }
        }, err: <nil>  (t=+2.650039ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 16 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-file-watcher-certs-tls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+2.689921ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc0009d3680] Received update on resource my-service-file-watcher-certs-tls from xds-client 0xc000516258, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-my-service-file-watcher-certs-tls": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-my-service-file-watcher-certs-tls"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+2.69745ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc000538280 0xc000816030}  (t=+2.748492ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+2.758866ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+2.767405ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000538420] Created  (t=+2.780507ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000538420] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-my-service-file-watcher-certs-tls": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-my-service-file-watcher-certs-tls"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc000538280 Attributes:0xc000816030}  (t=+2.801524ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0003a8000] Created  (t=+2.815847ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0003a8000] xDS credentials in use: true  (t=+2.82458ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000538420] Created child policy 0xc0003a8000 of type cds_experimental  (t=+2.835333ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0003a8000] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-my-service-file-watcher-certs-tls"
        }  (t=+2.846192ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0003a8000] CDS watch started on cluster-my-service-file-watcher-certs-tls  (t=+2.869282ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-file-watcher-certs-tls] version "" with version "3"  (t=+2.948407ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc00029e700] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+3.012237ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc00029e700] Resource with name: cluster-my-service-file-watcher-certs-tls, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-my-service-file-watcher-certs-tls",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-my-service-file-watcher-certs-tls"
          },
          "transportSocket": {
            "name": "envoy.transport_sockets.tls",
            "typedConfig": {
              "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
              "commonTlsContext": {
                "validationContextCertificateProviderInstance": {
                  "instanceName": "client-side-certificate-provider-instance"
                }
              }
            }
          }
        }  (t=+3.106744ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc00029e700] Sending ACK for response type: ClusterResource, version: 3, nonce: 3  (t=+3.142456ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0003a8000] Watch update from xds-client 0xc000516258, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-my-service-file-watcher-certs-tls",
            "EDSServiceName": "endpoints-my-service-file-watcher-certs-tls",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "client-side-certificate-provider-instance",
              "RootCertName": "",
              "IdentityInstanceName": "",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": null,
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "CiljbHVzdGVyLW15LXNlcnZpY2UtZmlsZS13YXRjaGVyLWNlcnRzLXRscxoxCgIaABIrZW5kcG9pbnRzLW15LXNlcnZpY2UtZmlsZS13YXRjaGVyLWNlcnRzLXRsc8IBowEKG2Vudm95LnRyYW5zcG9ydF9zb2NrZXRzLnRscxqDAQpQdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLnRyYW5zcG9ydF9zb2NrZXRzLnRscy52My5VcHN0cmVhbVRsc0NvbnRleHQSLwotYisKKWNsaWVudC1zaWRlLWNlcnRpZmljYXRlLXByb3ZpZGVyLWluc3RhbmNlEAM="
            }
          }
        ], security config: {
          "RootInstanceName": "client-side-certificate-provider-instance",
          "RootCertName": "",
          "IdentityInstanceName": "",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": null,
          "RequireClientCert": false
        }  (t=+3.171899ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000a3c240] Created  (t=+3.199911ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0003a8000] Created child policy 0xc000a3c240 of type cluster_resolver_experimental  (t=+3.210122ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 17 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-file-watcher-certs-tls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+3.21246ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000a3c240] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-my-service-file-watcher-certs-tls",
              "edsServiceName": "endpoints-my-service-file-watcher-certs-tls"
            }
          ]
        }  (t=+3.228165ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000a3c240] EDS watch started on endpoints-my-service-file-watcher-certs-tls  (t=+3.237548ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-file-watcher-certs-tls] version "" with version "3"  (t=+3.314956ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc00029e700] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+3.378175ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc00029e700] Resource with name: endpoints-my-service-file-watcher-certs-tls, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-my-service-file-watcher-certs-tls",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "127.0.0.1",
                        "portValue": 62770
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+3.450876ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc00029e700] Sending ACK for response type: EndpointsResource, version: 3, nonce: 4  (t=+3.482194ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000a3c240] resource update: [
          {}
        ]  (t=+3.488323ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0009d2480] Created  (t=+3.500715ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+3.511933ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 18 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-file-watcher-certs-tls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+3.549555ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000a3c240] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-file-watcher-certs-tls",
                    "edsServiceName": "endpoints-my-service-file-watcher-certs-tls",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+3.596397ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0009d2480] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-file-watcher-certs-tls",
                    "edsServiceName": "endpoints-my-service-file-watcher-certs-tls",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+3.622567ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0009d2480] switching to ("priority-0-0", 0) in syncPriority  (t=+3.636654ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc000216000] Created  (t=+3.650314ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0009d2480] Created child policy 0xc000216000 of type xds_cluster_impl_experimental  (t=+3.658921ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc000216000] Received update from resolver, balancer config: {
          "cluster": "cluster-my-service-file-watcher-certs-tls",
          "edsServiceName": "endpoints-my-service-file-watcher-certs-tls",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+3.677743ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000113120] Created  (t=+3.689316ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000113120] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+3.703996ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000113120] Created child policy 0xc0009d3900 of type round_robin  (t=+3.715063ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+3.739469ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62770" to connect  (t=+3.75044ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000113120] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc00007f580}  (t=+3.781875ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000113120] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc00007f580,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+3.81481ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0009d2480] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000130050}  (t=+3.836792ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+12.879274ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc000113260:{{127.0.0.1:62770  0xc0009fc110 0 <nil>}}]}  (t=+12.930956ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000113120] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc00053cd80}  (t=+12.942867ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000113120] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc00053cd80,state:READY,stateToAggregate:READY]  (t=+12.953861ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0009d2480] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc0001301e0}  (t=+12.966623ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000538420] Balancer state update from locality cluster-my-service-file-watcher-certs-tls, new state: {ConnectivityState:READY Picker:0xc0001301e0}  (t=+12.982071ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000538420] Child pickers: map[cluster-my-service-file-watcher-certs-tls:picker:0xc0001301e0,state:READY,stateToAggregate:READY]  (t=+13.03099ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+13.041811ms)
=== CONT  Test/ServerSideXDS_FileWatcherCerts/tls
    xds_server_integration_test.go:245: rpc EmptyCall() failed: rpc error: code = Unknown desc = missing connection in incoming context
=== CONT  Test/ServerSideXDS_FileWatcherCerts
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+13.223446ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0003a8000] CDS watch canceled on cluster-my-service-file-watcher-certs-tls  (t=+13.239887ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000a3c240] EDS watch canceled on endpoints-my-service-file-watcher-certs-tls  (t=+13.250181ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc000216000] Shutdown  (t=+13.26182ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000a3c240] Shutdown  (t=+13.269026ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0003a8000] Shutdown  (t=+13.277662ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000538420] Shutdown  (t=+13.291311ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc0009d3680] Watch cancel on resource name my-service-file-watcher-certs-tls with xds-client 0xc000516258  (t=+13.306931ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc0009d3680] Shutdown  (t=+13.322443ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+13.333413ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 19 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+13.337063ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000768000] Watch cancelled on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62770  (t=+13.369347ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 20 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+13.38273ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+13.413358ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+13.431792ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00029e700] Shutdown  (t=+13.448374ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 21 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62770] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+13.453463ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc00029e700] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+13.493086ms)
=== RUN   Test/ServerSideXDS_FileWatcherCerts/mtls
=== CONT  Test/ServerSideXDS_FileWatcherCerts
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 22 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "3"  (t=+13.480796ms)
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc000b020f0] Created xds.GRPCServer  (t=+13.540553ms)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc000b020f0] xDS credentials in use: true  (t=+13.555783ms)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc000b020f0] Serve() passed a net.Listener on 127.0.0.1:62773  (t=+14.028053ms)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+14.058814ms)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+14.072768ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+14.087732ms)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00079a380] Creating resolver for target: {Scheme:xds Authority: Endpoint:my-service-file-watcher-certs-mtls}  (t=+14.099968ms)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:62762",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "87ef1e66-29fe-458f-afeb-54510258ab6b",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": {
            "client-side-certificate-provider-instance": {},
            "server-side-certificate-provider-instance": {}
          },
          "ServerListenerResourceNameTemplate": "grpc/server?xds.resource.listening_address=%s"
        }  (t=+14.169254ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+14.190353ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+14.201498ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62762  <nil> 0 <nil>}] <nil> <nil>}  (t=+14.213514ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+14.223705ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+14.232198ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc0004f2000] Created ClientConn to xDS management server: 127.0.0.1:62762  (t=+14.251031ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc0004f2000] Created  (t=+14.260705ms)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc000b020f0] Created an xdsClient  (t=+14.269636ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+14.270323ms)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000b9e000] Watch started on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62773  (t=+14.28468ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62762" to connect  (t=+14.296562ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+14.312052ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+14.33911ms)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00079a380] Watch started on resource name my-service-file-watcher-certs-mtls with xds-client 0xc000a301e0  (t=+14.339797ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+14.562992ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+14.58027ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc0004f2000] ADS stream created  (t=+14.610172ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62773 my-service-file-watcher-certs-mtls] version "" with version "4"  (t=+14.733112ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+14.817905ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2000] Resource with name: my-service-file-watcher-certs-mtls, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "my-service-file-watcher-certs-mtls",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-my-service-file-watcher-certs-mtls"
                    },
                    "httpFilters": [
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-my-service-file-watcher-certs-mtls"
              },
              "httpFilters": [
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+15.753995ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2000] Resource with name: grpc/server?xds.resource.listening_address=127.0.0.1:62773, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=127.0.0.1:62773",
          "address": {
            "socketAddress": {
              "address": "127.0.0.1",
              "portValue": 62773
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "server-side-certificate-provider-instance"
                    },
                    "validationContextCertificateProviderInstance": {
                      "instanceName": "server-side-certificate-provider-instance"
                    }
                  },
                  "requireClientCertificate": true
                }
              },
              "name": "v4-wildcard"
            },
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "server-side-certificate-provider-instance"
                    },
                    "validationContextCertificateProviderInstance": {
                      "instanceName": "server-side-certificate-provider-instance"
                    }
                  },
                  "requireClientCertificate": true
                }
              },
              "name": "v6-wildcard"
            }
          ]
        }  (t=+15.921862ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: ListenerResource, version: 4, nonce: 1  (t=+16.006644ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc00079a380] received LDS update: {
          "RouteConfigName": "route-my-service-file-watcher-certs-mtls",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CiJteS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy1tdGxzGrICGpwCCi1lbnZveS5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIi6gEKZXR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLm5ldHdvcmsuaHR0cF9jb25uZWN0aW9uX21hbmFnZXIudjMuSHR0cENvbm5lY3Rpb25NYW5hZ2VyEoABKk4KBnJvdXRlciJECkJ0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMuZmlsdGVycy5odHRwLnJvdXRlci52My5Sb3V0ZXIaLgoCGgASKHJvdXRlLW15LXNlcnZpY2UtZmlsZS13YXRjaGVyLWNlcnRzLW10bHM6EWZpbHRlci1jaGFpbi1uYW1lmgHtAQrqAQpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISgAEqTgoGcm91dGVyIkQKQnR5cGUuZ29vZ2xlYXBpcy5jb20vZW52b3kuZXh0ZW5zaW9ucy5maWx0ZXJzLmh0dHAucm91dGVyLnYzLlJvdXRlchouCgIaABIocm91dGUtbXktc2VydmljZS1maWxlLXdhdGNoZXItY2VydHMtbXRscw=="
          }
        }, err: <nil>  (t=+16.048519ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 23 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62773 my-service-file-watcher-certs-mtls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+16.110546ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-file-watcher-certs-mtls] version "" with version "4"  (t=+16.14668ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+16.209448ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000b9e000] Received update for resource "grpc/server?xds.resource.listening_address=127.0.0.1:62773": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc0004a2f90 Raw:[type.googleapis.com/envoy.config.listener.v3.Listener]:{name:"grpc/server?xds.resource.listening_address=127.0.0.1:62773"  address:{socket_address:{address:"127.0.0.1"  port_value:62773}}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  transport_socket:{name:"envoy.transport_sockets.tls"  typed_config:{[type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext]:{common_tls_context:{tls_certificate_certificate_provider_instance:{instance_name:"server-side-certificate-provider-instance"}  validation_context_certificate_provider_instance:{instance_name:"server-side-certificate-provider-instance"}}  require_client_certificate:{value:true}}}}  name:"v4-wildcard"}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"::"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"::"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  transport_socket:{name:"envoy.transport_sockets.tls"  typed_config:{[type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext]:{common_tls_context:{tls_certificate_certificate_provider_instance:{instance_name:"server-side-certificate-provider-instance"}  validation_context_certificate_provider_instance:{instance_name:"server-side-certificate-provider-instance"}}  require_client_certificate:{value:true}}}}  name:"v6-wildcard"}}}  (t=+16.214226ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000b9e000] Listener "127.0.0.1:62773" entering mode: "serving" due to error: <nil>  (t=+16.231816ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc0004f2000] Resource with name: route-my-service-file-watcher-certs-mtls, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-my-service-file-watcher-certs-mtls",
          "virtualHosts": [
            {
              "domains": [
                "my-service-file-watcher-certs-mtls"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-my-service-file-watcher-certs-mtls"
                  }
                }
              ]
            }
          ]
        }.  (t=+16.300417ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: RouteConfigResource, version: 4, nonce: 2  (t=+16.340261ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00079a380] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "my-service-file-watcher-certs-mtls"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-my-service-file-watcher-certs-mtls": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "Cihyb3V0ZS1teS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy1tdGxzElkSIm15LXNlcnZpY2UtZmlsZS13YXRjaGVyLWNlcnRzLW10bHMaMwoDCgEvEiwKKmNsdXN0ZXItbXktc2VydmljZS1maWxlLXdhdGNoZXItY2VydHMtbXRscw=="
          }
        }, err: <nil>  (t=+16.36159ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00079a380] Received update on resource my-service-file-watcher-certs-mtls from xds-client 0xc000a301e0, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-my-service-file-watcher-certs-mtls": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-my-service-file-watcher-certs-mtls"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+16.400593ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 24 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-file-watcher-certs-mtls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+16.418784ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc00049c320 0xc000010630}  (t=+16.445902ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+16.455195ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+16.463211ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc00049c4e0] Created  (t=+16.47628ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc00049c4e0] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-my-service-file-watcher-certs-mtls": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-my-service-file-watcher-certs-mtls"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc00049c320 Attributes:0xc000010630}  (t=+16.494406ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc0005fc4b0] Created  (t=+16.510309ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc0005fc4b0] xDS credentials in use: true  (t=+16.518787ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc00049c4e0] Created child policy 0xc0005fc4b0 of type cds_experimental  (t=+16.529141ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc0005fc4b0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-my-service-file-watcher-certs-mtls"
        }  (t=+16.53941ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc0005fc4b0] CDS watch started on cluster-my-service-file-watcher-certs-mtls  (t=+16.56407ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-file-watcher-certs-mtls] version "" with version "4"  (t=+16.638853ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+16.697614ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc0004f2000] Resource with name: cluster-my-service-file-watcher-certs-mtls, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-my-service-file-watcher-certs-mtls",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-my-service-file-watcher-certs-mtls"
          },
          "transportSocket": {
            "name": "envoy.transport_sockets.tls",
            "typedConfig": {
              "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext",
              "commonTlsContext": {
                "tlsCertificateCertificateProviderInstance": {
                  "instanceName": "client-side-certificate-provider-instance"
                },
                "validationContextCertificateProviderInstance": {
                  "instanceName": "client-side-certificate-provider-instance"
                }
              }
            }
          }
        }  (t=+16.788224ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: ClusterResource, version: 4, nonce: 3  (t=+16.820723ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc0005fc4b0] Watch update from xds-client 0xc000a301e0, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-my-service-file-watcher-certs-mtls",
            "EDSServiceName": "endpoints-my-service-file-watcher-certs-mtls",
            "EnableLRS": false,
            "SecurityCfg": {
              "RootInstanceName": "client-side-certificate-provider-instance",
              "RootCertName": "",
              "IdentityInstanceName": "client-side-certificate-provider-instance",
              "IdentityCertName": "",
              "SubjectAltNameMatchers": null,
              "RequireClientCert": false
            },
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "CipjbHVzdGVyLW15LXNlcnZpY2UtZmlsZS13YXRjaGVyLWNlcnRzLW10bHMaMgoCGgASLGVuZHBvaW50cy1teS1zZXJ2aWNlLWZpbGUtd2F0Y2hlci1jZXJ0cy1tdGxzwgHQAQobZW52b3kudHJhbnNwb3J0X3NvY2tldHMudGxzGrABClB0eXBlLmdvb2dsZWFwaXMuY29tL2Vudm95LmV4dGVuc2lvbnMudHJhbnNwb3J0X3NvY2tldHMudGxzLnYzLlVwc3RyZWFtVGxzQ29udGV4dBJcClpaKwopY2xpZW50LXNpZGUtY2VydGlmaWNhdGUtcHJvdmlkZXItaW5zdGFuY2ViKwopY2xpZW50LXNpZGUtY2VydGlmaWNhdGUtcHJvdmlkZXItaW5zdGFuY2UQAw=="
            }
          }
        ], security config: {
          "RootInstanceName": "client-side-certificate-provider-instance",
          "RootCertName": "",
          "IdentityInstanceName": "client-side-certificate-provider-instance",
          "IdentityCertName": "",
          "SubjectAltNameMatchers": null,
          "RequireClientCert": false
        }  (t=+16.859276ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc0009085a0] Created  (t=+16.882197ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc0005fc4b0] Created child policy 0xc0009085a0 of type cluster_resolver_experimental  (t=+16.893549ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 25 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-file-watcher-certs-mtls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+16.902039ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc0009085a0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-my-service-file-watcher-certs-mtls",
              "edsServiceName": "endpoints-my-service-file-watcher-certs-mtls"
            }
          ]
        }  (t=+16.912086ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc0009085a0] EDS watch started on endpoints-my-service-file-watcher-certs-mtls  (t=+16.926541ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-file-watcher-certs-mtls] version "" with version "4"  (t=+17.019803ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2000] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+17.083191ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc0004f2000] Resource with name: endpoints-my-service-file-watcher-certs-mtls, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-my-service-file-watcher-certs-mtls",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "127.0.0.1",
                        "portValue": 62773
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+17.169499ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2000] Sending ACK for response type: EndpointsResource, version: 4, nonce: 4  (t=+17.212803ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc0009085a0] resource update: [
          {}
        ]  (t=+17.217435ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc0009d3800] Created  (t=+17.236084ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+17.24858ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 26 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-file-watcher-certs-mtls] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+17.301467ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc0009085a0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-file-watcher-certs-mtls",
                    "edsServiceName": "endpoints-my-service-file-watcher-certs-mtls",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+17.338232ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc0009d3800] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-file-watcher-certs-mtls",
                    "edsServiceName": "endpoints-my-service-file-watcher-certs-mtls",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+17.367053ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc0009d3800] switching to ("priority-0-0", 0) in syncPriority  (t=+17.380482ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0000b31e0] Created  (t=+17.394499ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc0009d3800] Created child policy 0xc0000b31e0 of type xds_cluster_impl_experimental  (t=+17.403394ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0000b31e0] Received update from resolver, balancer config: {
          "cluster": "cluster-my-service-file-watcher-certs-mtls",
          "edsServiceName": "endpoints-my-service-file-watcher-certs-mtls",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+17.420725ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc000112f80] Created  (t=+17.432534ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc000112f80] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+17.448471ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc000112f80] Created child policy 0xc0009d3c00 of type round_robin  (t=+17.460062ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+17.484292ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62773" to connect  (t=+17.495618ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000112f80] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000931360}  (t=+17.515803ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000112f80] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000931360,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+17.530668ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0009d3800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc000b023c0}  (t=+17.549547ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+34.897152ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0001130c0:{{127.0.0.1:62773  0xc0009fc070 0 <nil>}}]}  (t=+34.928007ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc000112f80] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000494f60}  (t=+34.94547ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc000112f80] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000494f60,state:READY,stateToAggregate:READY]  (t=+34.965305ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc0009d3800] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00054eaf0}  (t=+34.980019ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc00049c4e0] Balancer state update from locality cluster-my-service-file-watcher-certs-mtls, new state: {ConnectivityState:READY Picker:0xc00054eaf0}  (t=+34.998184ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc00049c4e0] Child pickers: map[cluster-my-service-file-watcher-certs-mtls:picker:0xc00054eaf0,state:READY,stateToAggregate:READY]  (t=+35.015709ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+35.027506ms)
=== CONT  Test/ServerSideXDS_FileWatcherCerts/mtls
    xds_server_integration_test.go:245: rpc EmptyCall() failed: rpc error: code = Unknown desc = missing connection in incoming context
=== CONT  Test/ServerSideXDS_FileWatcherCerts
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+35.306056ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc0005fc4b0] CDS watch canceled on cluster-my-service-file-watcher-certs-mtls  (t=+35.328357ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc0009085a0] EDS watch canceled on endpoints-my-service-file-watcher-certs-mtls  (t=+35.34252ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0000b31e0] Shutdown  (t=+35.358872ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc0009085a0] Shutdown  (t=+35.3696ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc0005fc4b0] Shutdown  (t=+35.37955ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc00049c4e0] Shutdown  (t=+35.393948ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00079a380] Watch cancel on resource name my-service-file-watcher-certs-mtls with xds-client 0xc000a301e0  (t=+35.411651ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00079a380] Shutdown  (t=+35.420384ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+35.427895ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 27 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+35.438637ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 28 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+35.456924ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000b9e000] Watch cancelled on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62773  (t=+35.461822ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+35.518231ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+35.535227ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc0004f2000] Shutdown  (t=+35.549759ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 29 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62773] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+35.578407ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc0004f2000] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+35.599836ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 30 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "4"  (t=+35.60118ms)
=== RUN   Test/ServerSideXDS_SecurityConfigChange
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc0008cf450] Created xds.GRPCServer  (t=+23.355µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc0008cf450] xDS credentials in use: true  (t=+57.42µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc0008cf450] Serve() passed a net.Listener on 127.0.0.1:62776  (t=+748.743µs)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+766.141µs)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+779.882µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds"  (t=+802.365µs)
    tlogger.go:99: xds_resolver.go:72 [xds] [xds-resolver 0xc00073a180] Creating resolver for target: {Scheme:xds Authority: Endpoint:my-service-security-config-change}  (t=+816.588µs)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:62762",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "87ef1e66-29fe-458f-afeb-54510258ab6b",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": {
            "client-side-certificate-provider-instance": {},
            "server-side-certificate-provider-instance": {}
          },
          "ServerListenerResourceNameTemplate": "grpc/server?xds.resource.listening_address=%s"
        }  (t=+877.449µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+895.561µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+907.067µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62762  <nil> 0 <nil>}] <nil> <nil>}  (t=+919.919µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+930.192µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+938.229µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000a4e100] Created ClientConn to xDS management server: 127.0.0.1:62762  (t=+955.364µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000a4e100] Created  (t=+966.404µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+974.395µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62762" to connect  (t=+996.48µs)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+1.018921ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.027242ms)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc0008cf450] Created an xdsClient  (t=+975.559µs)
    tlogger.go:99: xds_resolver.go:105 [xds] [xds-resolver 0xc00073a180] Watch started on resource name my-service-security-config-change with xds-client 0xc00000ee58  (t=+983.588µs)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000b360f0] Watch started on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62776  (t=+1.067311ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.26744ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.289946ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000a4e100] ADS stream created  (t=+1.310611ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[my-service-security-config-change grpc/server?xds.resource.listening_address=127.0.0.1:62776] version "" with version "5"  (t=+1.431251ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000a4e100] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+1.530821ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000a4e100] Resource with name: my-service-security-config-change, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "my-service-security-config-change",
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.filters.network.http_connection_manager",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "rds": {
                      "configSource": {
                        "ads": {
        
                        }
                      },
                      "routeConfigName": "route-my-service-security-config-change"
                    },
                    "httpFilters": [
                      {
                        "name": "router",
                        "typedConfig": {
                          "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                        }
                      }
                    ]
                  }
                }
              ],
              "name": "filter-chain-name"
            }
          ],
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "route-my-service-security-config-change"
              },
              "httpFilters": [
                {
                  "name": "router",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                  }
                }
              ]
            }
          }
        }  (t=+1.821189ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc000a4e100] Resource with name: grpc/server?xds.resource.listening_address=127.0.0.1:62776, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=127.0.0.1:62776",
          "address": {
            "socketAddress": {
              "address": "127.0.0.1",
              "portValue": 62776
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v4-wildcard"
            },
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v6-wildcard"
            }
          ]
        }  (t=+1.934329ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000a4e100] Sending ACK for response type: ListenerResource, version: 5, nonce: 1  (t=+2.00529ms)
    tlogger.go:99: watch_service.go:85 [xds] [xds-resolver 0xc00073a180] received LDS update: {
          "RouteConfigName": "route-my-service-security-config-change",
          "InlineRouteConfig": null,
          "MaxStreamDuration": 0,
          "HTTPFilters": [
            {
              "Name": "router",
              "Filter": {},
              "Config": {
                "FilterConfig": null
              }
            }
          ],
          "InboundListenerCfg": null,
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.listener.v3.Listener",
            "value": "CiFteS1zZXJ2aWNlLXNlY3VyaXR5LWNvbmZpZy1jaGFuZ2UasAIamgIKLWVudm95LmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlciLoAQpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISfypOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGi0KAhoAEidyb3V0ZS1teS1zZXJ2aWNlLXNlY3VyaXR5LWNvbmZpZy1jaGFuZ2U6EWZpbHRlci1jaGFpbi1uYW1lmgHrAQroAQpldHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMubmV0d29yay5odHRwX2Nvbm5lY3Rpb25fbWFuYWdlci52My5IdHRwQ29ubmVjdGlvbk1hbmFnZXISfypOCgZyb3V0ZXIiRApCdHlwZS5nb29nbGVhcGlzLmNvbS9lbnZveS5leHRlbnNpb25zLmZpbHRlcnMuaHR0cC5yb3V0ZXIudjMuUm91dGVyGi0KAhoAEidyb3V0ZS1teS1zZXJ2aWNlLXNlY3VyaXR5LWNvbmZpZy1jaGFuZ2U="
          }
        }, err: <nil>  (t=+2.052972ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 31 for type.googleapis.com/envoy.config.listener.v3.Listener[my-service-security-config-change grpc/server?xds.resource.listening_address=127.0.0.1:62776] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+2.087439ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-security-config-change] version "" with version "5"  (t=+2.173358ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000b360f0] Received update for resource "grpc/server?xds.resource.listening_address=127.0.0.1:62776": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc00092d290 Raw:[type.googleapis.com/envoy.config.listener.v3.Listener]:{name:"grpc/server?xds.resource.listening_address=127.0.0.1:62776"  address:{socket_address:{address:"127.0.0.1"  port_value:62776}}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v4-wildcard"}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"::"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"::"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v6-wildcard"}}}  (t=+2.216522ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000b360f0] Listener "127.0.0.1:62776" entering mode: "serving" due to error: <nil>  (t=+2.235584ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000a4e100] ADS response received, type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration  (t=+2.23853ms)
    tlogger.go:99: xds.go:298 [xds] [xds-client 0xc000a4e100] Resource with name: route-my-service-security-config-change, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "route-my-service-security-config-change",
          "virtualHosts": [
            {
              "domains": [
                "my-service-security-config-change"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": "/"
                  },
                  "route": {
                    "cluster": "cluster-my-service-security-config-change"
                  }
                }
              ]
            }
          ]
        }.  (t=+2.327888ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000a4e100] Sending ACK for response type: RouteConfigResource, version: 5, nonce: 2  (t=+2.363294ms)
    tlogger.go:99: watch_service.go:166 [xds] [xds-resolver 0xc00073a180] received RDS update: {
          "VirtualHosts": [
            {
              "Domains": [
                "my-service-security-config-change"
              ],
              "Routes": [
                {
                  "Path": null,
                  "Prefix": "/",
                  "Regex": null,
                  "CaseInsensitive": false,
                  "Headers": null,
                  "Fraction": null,
                  "HashPolicies": null,
                  "WeightedClusters": {
                    "cluster-my-service-security-config-change": {
                      "Weight": 1,
                      "HTTPFilterConfigOverride": null
                    }
                  },
                  "MaxStreamDuration": null,
                  "HTTPFilterConfigOverride": null,
                  "RouteAction": 1
                }
              ],
              "HTTPFilterConfigOverride": null
            }
          ],
          "Raw": {
            "type_url": "type.googleapis.com/envoy.config.route.v3.RouteConfiguration",
            "value": "Cidyb3V0ZS1teS1zZXJ2aWNlLXNlY3VyaXR5LWNvbmZpZy1jaGFuZ2USVxIhbXktc2VydmljZS1zZWN1cml0eS1jb25maWctY2hhbmdlGjIKAwoBLxIrCiljbHVzdGVyLW15LXNlcnZpY2Utc2VjdXJpdHktY29uZmlnLWNoYW5nZQ=="
          }
        }, err: <nil>  (t=+2.39597ms)
    tlogger.go:99: xds_resolver.go:182 [xds] [xds-resolver 0xc00073a180] Received update on resource my-service-security-config-change from xds-client 0xc00000ee58, generated service config: {
          "loadBalancingConfig": [
            {
              "xds_cluster_manager_experimental": {
                "children": {
                  "cluster-my-service-security-config-change": {
                    "childPolicy": [
                      {
                        "cds_experimental": {
                          "cluster": "cluster-my-service-security-config-change"
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+2.436453ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 32 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[route-my-service-security-config-change] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+2.447321ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[] 0xc000090fe0 0xc0001149f8}  (t=+2.485183ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "xds_cluster_manager_experimental"  (t=+2.495658ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "xds_cluster_manager_experimental"  (t=+2.504931ms)
    tlogger.go:99: clustermanager.go:51 [xds] [xds-cluster-manager-lb 0xc000091260] Created  (t=+2.515894ms)
    tlogger.go:99: clustermanager.go:119 [xds] [xds-cluster-manager-lb 0xc000091260] update with config {
          "LoadBalancingConfig": null,
          "Children": {
            "cluster-my-service-security-config-change": {
              "ChildPolicy": [
                {
                  "cds_experimental": {
                    "LoadBalancingConfig": null,
                    "Cluster": "cluster-my-service-security-config-change"
                  }
                }
              ]
            }
          }
        }, resolver state {Addresses:[] ServiceConfig:0xc000090fe0 Attributes:0xc0001149f8}  (t=+2.545295ms)
    tlogger.go:99: cdsbalancer.go:82 [xds] [cds-lb 0xc000b9e2d0] Created  (t=+2.558367ms)
    tlogger.go:99: cdsbalancer.go:93 [xds] [cds-lb 0xc000b9e2d0] xDS credentials in use: true  (t=+2.567356ms)
    tlogger.go:99: balancergroup.go:100 [xds] [xds-cluster-manager-lb 0xc000091260] Created child policy 0xc000b9e2d0 of type cds_experimental  (t=+2.57832ms)
    tlogger.go:99: cdsbalancer.go:440 [xds] [cds-lb 0xc000b9e2d0] Received update from resolver, balancer config: {
          "LoadBalancingConfig": null,
          "Cluster": "cluster-my-service-security-config-change"
        }  (t=+2.589433ms)
    tlogger.go:99: cluster_handler.go:151 [xds] [cds-lb 0xc000b9e2d0] CDS watch started on cluster-my-service-security-config-change  (t=+2.6137ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-security-config-change] version "" with version "5"  (t=+2.694806ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000a4e100] ADS response received, type: type.googleapis.com/envoy.config.cluster.v3.Cluster  (t=+2.765604ms)
    tlogger.go:99: xds.go:567 [xds] [xds-client 0xc000a4e100] Resource with name: cluster-my-service-security-config-change, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "cluster-my-service-security-config-change",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "endpoints-my-service-security-config-change"
          }
        }  (t=+2.837789ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000a4e100] Sending ACK for response type: ClusterResource, version: 5, nonce: 3  (t=+2.86655ms)
    tlogger.go:99: cdsbalancer.go:277 [xds] [cds-lb 0xc000b9e2d0] Watch update from xds-client 0xc00000ee58, content: [
          {
            "ClusterType": 0,
            "ClusterName": "cluster-my-service-security-config-change",
            "EDSServiceName": "endpoints-my-service-security-config-change",
            "EnableLRS": false,
            "SecurityCfg": null,
            "MaxRequests": null,
            "DNSHostName": "",
            "PrioritizedClusterNames": null,
            "Raw": {
              "type_url": "type.googleapis.com/envoy.config.cluster.v3.Cluster",
              "value": "CiljbHVzdGVyLW15LXNlcnZpY2Utc2VjdXJpdHktY29uZmlnLWNoYW5nZRoxCgIaABIrZW5kcG9pbnRzLW15LXNlcnZpY2Utc2VjdXJpdHktY29uZmlnLWNoYW5nZRAD"
            }
          }
        ], security config: null  (t=+2.894527ms)
    tlogger.go:99: clusterresolver.go:80 [xds] [xds-cluster-resolver-lb 0xc000548ea0] Created  (t=+2.913017ms)
    tlogger.go:99: cdsbalancer.go:303 [xds] [cds-lb 0xc000b9e2d0] Created child policy 0xc000548ea0 of type cluster_resolver_experimental  (t=+2.926508ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 33 for type.googleapis.com/envoy.config.cluster.v3.Cluster[cluster-my-service-security-config-change] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+2.942555ms)
    tlogger.go:99: clusterresolver.go:156 [xds] [xds-cluster-resolver-lb 0xc000548ea0] Receive update from resolver, balancer config: {
          "discoveryMechanisms": [
            {
              "cluster": "cluster-my-service-security-config-change",
              "edsServiceName": "endpoints-my-service-security-config-change"
            }
          ]
        }  (t=+2.947873ms)
    tlogger.go:99: resource_resolver.go:226 [xds] [xds-cluster-resolver-lb 0xc000548ea0] EDS watch started on endpoints-my-service-security-config-change  (t=+2.961739ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-security-config-change] version "" with version "5"  (t=+3.04975ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc000a4e100] ADS response received, type: type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment  (t=+3.105704ms)
    tlogger.go:99: xds.go:796 [xds] [xds-client 0xc000a4e100] Resource with name: endpoints-my-service-security-config-change, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "endpoints-my-service-security-config-change",
          "endpoints": [
            {
              "locality": {
                "subZone": "subzone"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "127.0.0.1",
                        "portValue": 62776
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ]
        }  (t=+3.191654ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc000a4e100] Sending ACK for response type: EndpointsResource, version: 5, nonce: 4  (t=+3.222236ms)
    tlogger.go:99: clusterresolver.go:188 [xds] [xds-cluster-resolver-lb 0xc000548ea0] resource update: [
          {}
        ]  (t=+3.231422ms)
    tlogger.go:99: balancer.go:65 [xds] [priority-lb 0xc00073b380] Created  (t=+3.247404ms)
    tlogger.go:99: configbuilder.go:269 [xds] xds lb policy is "ROUND_ROBIN", building config with weighted_target + round_robin  (t=+3.259434ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 34 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[endpoints-my-service-security-config-change] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+3.300959ms)
    tlogger.go:99: clusterresolver.go:220 [xds] [xds-cluster-resolver-lb 0xc000548ea0] build balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-security-config-change",
                    "edsServiceName": "endpoints-my-service-security-config-change",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+3.346338ms)
    tlogger.go:99: balancer.go:112 [xds] [priority-lb 0xc00073b380] Received update from resolver, balancer config: {
          "children": {
            "priority-0-0": {
              "config": [
                {
                  "xds_cluster_impl_experimental": {
                    "cluster": "cluster-my-service-security-config-change",
                    "edsServiceName": "endpoints-my-service-security-config-change",
                    "childPolicy": [
                      {
                        "weighted_target_experimental": {
                          "targets": {
                            "{\"subZone\":\"subzone\"}": {
                              "weight": 1,
                              "childPolicy": [
                                {
                                  "round_robin": {}
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "ignoreReresolutionRequests": true
            }
          },
          "priorities": [
            "priority-0-0"
          ]
        }  (t=+3.373301ms)
    tlogger.go:99: balancer_priority.go:98 [xds] [priority-lb 0xc00073b380] switching to ("priority-0-0", 0) in syncPriority  (t=+3.388931ms)
    tlogger.go:99: clusterimpl.go:72 [xds] [xds-cluster-impl-lb 0xc0000b3380] Created  (t=+3.402397ms)
    tlogger.go:99: balancergroup.go:100 [xds] [priority-lb 0xc00073b380] Created child policy 0xc0000b3380 of type xds_cluster_impl_experimental  (t=+3.410958ms)
    tlogger.go:99: clusterimpl.go:223 [xds] [xds-cluster-impl-lb 0xc0000b3380] Received update from resolver, balancer config: {
          "cluster": "cluster-my-service-security-config-change",
          "edsServiceName": "endpoints-my-service-security-config-change",
          "childPolicy": [
            {
              "weighted_target_experimental": {
                "targets": {
                  "{\"subZone\":\"subzone\"}": {
                    "weight": 1,
                    "childPolicy": [
                      {
                        "round_robin": {}
                      }
                    ]
                  }
                }
              }
            }
          ]
        }  (t=+3.428807ms)
    tlogger.go:99: weightedtarget.go:57 [xds] [weighted-target-lb 0xc0006a6d20] Created  (t=+3.440767ms)
    tlogger.go:99: weightedtarget.go:87 [xds] [weighted-target-lb 0xc0006a6d20] Received update from resolver, balancer config: {
          "targets": {
            "{\"subZone\":\"subzone\"}": {
              "weight": 1,
              "childPolicy": [
                {
                  "round_robin": {}
                }
              ]
            }
          }
        }  (t=+3.454976ms)
    tlogger.go:99: balancergroup.go:100 [xds] [weighted-target-lb 0xc0006a6d20] Created child policy 0xc00073b600 of type round_robin  (t=+3.468007ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+3.491209ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62776" to connect  (t=+3.502226ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0006a6d20] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:CONNECTING Picker:0xc000930610}  (t=+3.522823ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0006a6d20] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000930610,state:CONNECTING,stateToAggregate:CONNECTING]  (t=+3.541065ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00073b380] Balancer state update from locality priority-0-0, new state: {ConnectivityState:CONNECTING Picker:0xc00074d360}  (t=+3.559991ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+3.712431ms)
    tlogger.go:99: roundrobin.go:50 [roundrobin] roundrobinPicker: newPicker called with info: {map[0xc0006a6e60:{{127.0.0.1:62776  0xc0008163a8 0 <nil>}}]}  (t=+3.734336ms)
    tlogger.go:99: balancergroup.go:453 [xds] [weighted-target-lb 0xc0006a6d20] Balancer state update from locality {"subZone":"subzone"}, new state: {ConnectivityState:READY Picker:0xc000ab05a0}  (t=+3.746335ms)
    tlogger.go:99: aggregator.go:201 [xds] [weighted-target-lb 0xc0006a6d20] Child pickers with config: map[{"subZone":"subzone"}:weight:1,picker:0xc000ab05a0,state:READY,stateToAggregate:READY]  (t=+3.757071ms)
    tlogger.go:99: balancergroup.go:453 [xds] [priority-lb 0xc00073b380] Balancer state update from locality priority-0-0, new state: {ConnectivityState:READY Picker:0xc00074d3b0}  (t=+3.77073ms)
    tlogger.go:99: balancergroup.go:453 [xds] [xds-cluster-manager-lb 0xc000091260] Balancer state update from locality cluster-my-service-security-config-change, new state: {ConnectivityState:READY Picker:0xc00074d3b0}  (t=+3.786519ms)
    tlogger.go:99: balancerstateaggregator.go:210 [xds] [xds-cluster-manager-lb 0xc000091260] Child pickers: map[cluster-my-service-security-config-change:picker:0xc00074d3b0,state:READY,stateToAggregate:READY]  (t=+3.80257ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+3.813132ms)
    xds_server_integration_test.go:310: rpc EmptyCall() failed: rpc error: code = Unavailable desc = the incoming RPC did not match a configured Virtual Host
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+3.958332ms)
    tlogger.go:99: cluster_handler.go:154 [xds] [cds-lb 0xc000b9e2d0] CDS watch canceled on cluster-my-service-security-config-change  (t=+3.975977ms)
    tlogger.go:99: resource_resolver.go:243 [xds] [xds-cluster-resolver-lb 0xc000548ea0] EDS watch canceled on endpoints-my-service-security-config-change  (t=+3.988547ms)
    tlogger.go:99: clusterimpl.go:335 [xds] [xds-cluster-impl-lb 0xc0000b3380] Shutdown  (t=+4.002088ms)
    tlogger.go:99: clusterresolver.go:296 [xds] [xds-cluster-resolver-lb 0xc000548ea0] Shutdown  (t=+4.010546ms)
    tlogger.go:99: cdsbalancer.go:379 [xds] [cds-lb 0xc000b9e2d0] Shutdown  (t=+4.018171ms)
    tlogger.go:99: clustermanager.go:136 [xds] [xds-cluster-manager-lb 0xc000091260] Shutdown  (t=+4.029216ms)
    tlogger.go:99: xds_resolver.go:108 [xds] [xds-resolver 0xc00073a180] Watch cancel on resource name my-service-security-config-change with xds-client 0xc00000ee58  (t=+4.038348ms)
    tlogger.go:99: xds_resolver.go:274 [xds] [xds-resolver 0xc00073a180] Shutdown  (t=+4.049429ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+4.058771ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 35 for type.googleapis.com/envoy.config.cluster.v3.Cluster[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+4.061996ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 36 for type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+4.082363ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000b360f0] Watch cancelled on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62776  (t=+4.088868ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+4.104672ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+4.119763ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000a4e100] Shutdown  (t=+4.134144ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000a4e100] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+4.154366ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 37 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62776] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+4.158321ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 38 for type.googleapis.com/envoy.config.route.v3.RouteConfiguration[] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "5"  (t=+4.178453ms)
=== RUN   Test/ServerSideXDS_ServingModeChanges
    tlogger.go:99: server.go:108 [xds] [xds-server 0xc00074d9a0] Created xds.GRPCServer  (t=+18.21µs)
    tlogger.go:99: server.go:122 [xds] [xds-server 0xc00074d9a0] xDS credentials in use: true  (t=+29.51µs)
    tlogger.go:99: server.go:146 [xds-e2e] Created new resource snapshot...  (t=+856.754µs)
    tlogger.go:99: server.go:152 [xds-e2e] Updated snapshot cache with resource snapshot...  (t=+870.806µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00074d9a0] Serve() passed a net.Listener on 127.0.0.1:62780  (t=+890.05µs)
    tlogger.go:99: server.go:183 [xds] [xds-server 0xc00074d9a0] Serve() passed a net.Listener on 127.0.0.1:62779  (t=+896.598µs)
    tlogger.go:99: bootstrap.go:282 [xds] [xds-bootstrap] Bootstrap config for creating xds-client: {
          "BalancerName": "127.0.0.1:62762",
          "Creds": {},
          "TransportAPI": 1,
          "NodeProto": {
            "id": "87ef1e66-29fe-458f-afeb-54510258ab6b",
            "user_agent_name": "gRPC Go",
            "UserAgentVersionType": {
              "UserAgentVersion": "1.41.0-dev"
            },
            "client_features": [
              "envoy.lb.does_not_support_overprovisioning"
            ]
          },
          "CertProviderConfigs": {
            "client-side-certificate-provider-instance": {},
            "server-side-certificate-provider-instance": {}
          },
          "ServerListenerResourceNameTemplate": "grpc/server?xds.resource.listening_address=%s"
        }  (t=+991.944µs)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+1.008144ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+1.018827ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62762  <nil> 0 <nil>}] <nil> <nil>}  (t=+1.030707ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+1.039702ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+1.049535ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc0004f2d00] Created ClientConn to xDS management server: 127.0.0.1:62762  (t=+1.066794ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc0004f2d00] Created  (t=+1.076255ms)
    tlogger.go:99: server.go:171 [xds] [xds-server 0xc00074d9a0] Created an xdsClient  (t=+1.08487ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.085819ms)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000b9e780] Watch started on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62780  (t=+1.099999ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62762" to connect  (t=+1.102913ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+1.116888ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.123167ms)
    tlogger.go:99: listener_wrapper.go:154 [xds] [xds-server-listener 0xc000b361e0] Watch started on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62779  (t=+1.113193ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.307302ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.32235ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc0004f2d00] ADS stream created  (t=+1.339253ms)
    tlogger.go:99: simple.go:360 [xds-e2e] respond type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62780 grpc/server?xds.resource.listening_address=127.0.0.1:62779] version "" with version "6"  (t=+1.445523ms)
    tlogger.go:99: client.go:146 [xds] [xds-client 0xc0004f2d00] ADS response received, type: type.googleapis.com/envoy.config.listener.v3.Listener  (t=+1.527455ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2d00] Resource with name: grpc/server?xds.resource.listening_address=127.0.0.1:62779, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=127.0.0.1:62779",
          "address": {
            "socketAddress": {
              "address": "127.0.0.1",
              "portValue": 62779
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v4-wildcard"
            },
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v6-wildcard"
            }
          ]
        }  (t=+1.873971ms)
    tlogger.go:99: xds.go:76 [xds] [xds-client 0xc0004f2d00] Resource with name: grpc/server?xds.resource.listening_address=127.0.0.1:62780, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=127.0.0.1:62780",
          "address": {
            "socketAddress": {
              "address": "127.0.0.1",
              "portValue": 62780
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "0.0.0.0",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v4-wildcard"
            },
            {
              "filterChainMatch": {
                "prefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ],
                "sourceType": "SAME_IP_OR_LOOPBACK",
                "sourcePrefixRanges": [
                  {
                    "addressPrefix": "::",
                    "prefixLen": 0
                  }
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "v6-wildcard"
            }
          ]
        }  (t=+1.99837ms)
    tlogger.go:99: transport_helper.go:340 [xds] [xds-client 0xc0004f2d00] Sending ACK for response type: ListenerResource, version: 6, nonce: 1  (t=+2.057316ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 39 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62780 grpc/server?xds.resource.listening_address=127.0.0.1:62779] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "6"  (t=+2.126296ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000b9e780] Received update for resource "grpc/server?xds.resource.listening_address=127.0.0.1:62780": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc0003084e0 Raw:[type.googleapis.com/envoy.config.listener.v3.Listener]:{name:"grpc/server?xds.resource.listening_address=127.0.0.1:62780"  address:{socket_address:{address:"127.0.0.1"  port_value:62780}}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v4-wildcard"}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"::"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"::"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v6-wildcard"}}}  (t=+2.192829ms)
    tlogger.go:99: listener_wrapper.go:400 [xds] [xds-server-listener 0xc000b361e0] Received update for resource "grpc/server?xds.resource.listening_address=127.0.0.1:62779": {RouteConfigName: InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:0xc0003491d0 Raw:[type.googleapis.com/envoy.config.listener.v3.Listener]:{name:"grpc/server?xds.resource.listening_address=127.0.0.1:62779"  address:{socket_address:{address:"127.0.0.1"  port_value:62779}}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"0.0.0.0"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v4-wildcard"}  filter_chains:{filter_chain_match:{prefix_ranges:{address_prefix:"::"  prefix_len:{}}  source_type:SAME_IP_OR_LOOPBACK  source_prefix_ranges:{address_prefix:"::"  prefix_len:{}}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  name:"v6-wildcard"}}}  (t=+2.202005ms)
    xds_server_serving_mode_test.go:103: serving mode for listener "127.0.0.1:62780" changed to "serving", err: <nil>
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000b9e780] Listener "127.0.0.1:62780" entering mode: "serving" due to error: <nil>  (t=+2.209816ms)
    tlogger.go:99: listener_wrapper.go:449 [xds] [xds-server-listener 0xc000b361e0] Listener "127.0.0.1:62779" entering mode: "serving" due to error: <nil>  (t=+2.218336ms)
    xds_server_serving_mode_test.go:103: serving mode for listener "127.0.0.1:62779" changed to "serving", err: <nil>
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+2.279316ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+2.290735ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62779  <nil> 0 <nil>}] <nil> <nil>}  (t=+2.302024ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+2.310791ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+2.333252ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+2.356139ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+2.369338ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62779" to connect  (t=+2.382308ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+2.398913ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+2.574471ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+2.593066ms)
    xds_server_serving_mode_test.go:170: rpc EmptyCall() failed: rpc error: code = Unavailable desc = the incoming RPC did not match a configured Virtual Host
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.731647ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.746313ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000b9e780] Watch cancelled on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62780  (t=+2.771658ms)
    tlogger.go:99: listener_wrapper.go:157 [xds] [xds-server-listener 0xc000b361e0] Watch cancelled on resource name grpc/server?xds.resource.listening_address=127.0.0.1:62779  (t=+2.790873ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.802279ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.813644ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc0004f2d00] Shutdown  (t=+2.823691ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc0004f2d00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+2.84267ms)
    tlogger.go:99: simple.go:312 [xds-e2e] open watch 40 for type.googleapis.com/envoy.config.listener.v3.Listener[grpc/server?xds.resource.listening_address=127.0.0.1:62779] from nodeID "87ef1e66-29fe-458f-afeb-54510258ab6b", version "6"  (t=+3.233214ms)
--- FAIL: Test (0.11s)
    --- PASS: Test/ClientSideXDS (0.01s)
    --- FAIL: Test/ServerSideXDS_Fallback (0.00s)
    --- FAIL: Test/ServerSideXDS_FileWatcherCerts (0.04s)
        --- FAIL: Test/ServerSideXDS_FileWatcherCerts/tls (0.01s)
        --- FAIL: Test/ServerSideXDS_FileWatcherCerts/mtls (0.02s)
    --- FAIL: Test/ServerSideXDS_SecurityConfigChange (0.00s)
    --- FAIL: Test/ServerSideXDS_ServingModeChanges (0.05s)
FAIL
FAIL	google.golang.org/grpc/xds/internal/test	0.432s
=== RUN   TestIsRoundRobin
=== RUN   TestIsRoundRobin/0_element
=== RUN   TestIsRoundRobin/1_element_RR
=== RUN   TestIsRoundRobin/1_element_not_RR
=== RUN   TestIsRoundRobin/2_elements_RR
=== RUN   TestIsRoundRobin/2_elements_RR_different_order_from_want
=== RUN   TestIsRoundRobin/2_elements_RR_not_RR,_mistake_in_first_iter
=== RUN   TestIsRoundRobin/2_elements_RR_not_RR,_mistake_in_second_iter
=== RUN   TestIsRoundRobin/2_elements_weighted_RR
=== RUN   TestIsRoundRobin/2_elements_weighted_RR_different_order
=== RUN   TestIsRoundRobin/3_elements_RR
=== RUN   TestIsRoundRobin/3_elements_RR_different_order
=== RUN   TestIsRoundRobin/3_elements_weighted_RR
=== RUN   TestIsRoundRobin/3_elements_weighted_RR_not_RR,_mistake_in_first_iter
=== RUN   TestIsRoundRobin/3_elements_weighted_RR_not_RR,_mistake_in_second_iter
--- PASS: TestIsRoundRobin (0.00s)
    --- PASS: TestIsRoundRobin/0_element (0.00s)
    --- PASS: TestIsRoundRobin/1_element_RR (0.00s)
    --- PASS: TestIsRoundRobin/1_element_not_RR (0.00s)
    --- PASS: TestIsRoundRobin/2_elements_RR (0.00s)
    --- PASS: TestIsRoundRobin/2_elements_RR_different_order_from_want (0.00s)
    --- PASS: TestIsRoundRobin/2_elements_RR_not_RR,_mistake_in_first_iter (0.00s)
    --- PASS: TestIsRoundRobin/2_elements_RR_not_RR,_mistake_in_second_iter (0.00s)
    --- PASS: TestIsRoundRobin/2_elements_weighted_RR (0.00s)
    --- PASS: TestIsRoundRobin/2_elements_weighted_RR_different_order (0.00s)
    --- PASS: TestIsRoundRobin/3_elements_RR (0.00s)
    --- PASS: TestIsRoundRobin/3_elements_RR_different_order (0.00s)
    --- PASS: TestIsRoundRobin/3_elements_weighted_RR (0.00s)
    --- PASS: TestIsRoundRobin/3_elements_weighted_RR_not_RR,_mistake_in_first_iter (0.00s)
    --- PASS: TestIsRoundRobin/3_elements_weighted_RR_not_RR,_mistake_in_second_iter (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/testutils	(cached)
?   	google.golang.org/grpc/xds/internal/testutils/e2e	[no test files]
?   	google.golang.org/grpc/xds/internal/testutils/fakeclient	[no test files]
?   	google.golang.org/grpc/xds/internal/testutils/fakeserver	[no test files]
?   	google.golang.org/grpc/xds/internal/version	[no test files]
=== RUN   Test
=== RUN   Test/ClientNewSingleton
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+94.124µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+133.365µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+206.61µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+226.988µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+243.423µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000544c00] Created ClientConn to xDS management server: xds-server  (t=+279.065µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000544c00] Created  (t=+297.496µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+333.659µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+387.627µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+418.968µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+507.994µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+541.503µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+557.666µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+97.704695ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+97.762193ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000544c00] Shutdown  (t=+97.791479ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+97.820185ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+97.840793ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+97.868064ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+97.886249ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+97.903207ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000544d00] Created ClientConn to xDS management server: xds-server  (t=+97.952252ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000544d00] Created  (t=+97.9731ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+97.996442ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+98.00257ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+98.052732ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+98.09162ms)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+98.123852ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000544d00] Shutdown  (t=+98.125182ms)
=== RUN   Test/ClusterResourceRemoved
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+80.582µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+106.858µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+131.381µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+169.462µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+187.028µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000450000] Created ClientConn to xDS management server: xds-server  (t=+230.945µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000450000] Created  (t=+252.913µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+269.461µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+300.247µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+368.158µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+396.233µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+440.728µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+477.143µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+11.763845ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+11.798847ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000450000] Shutdown  (t=+11.815756ms)
=== RUN   Test/ClusterThreeWatchDifferentResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+169.895µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+197.803µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+242.967µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+266.162µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+279.976µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000248600] Created ClientConn to xDS management server: xds-server  (t=+314.631µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000248600] Created  (t=+333.56µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+361.172µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+402.446µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+422.432µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+482.925µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+499.075µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000248600] Shutdown  (t=+528.722µs)
=== RUN   Test/ClusterTwoWatchSameResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+38.407µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+83.89µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+103.72µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+123.127µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+138.223µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00054c000] Created ClientConn to xDS management server: xds-server  (t=+167.74µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00054c000] Created  (t=+185.669µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+221.256µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+242.981µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+282.784µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+284.76µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+325.877µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+344.337µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+10.999952ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+11.071808ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00054c000] Shutdown  (t=+11.108319ms)
=== RUN   Test/ClusterWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+56.385µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+94.557µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+151.466µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+615.095µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+667.541µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000544c00] Created ClientConn to xDS management server: xds-server  (t=+796.517µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000544c00] Created  (t=+842.04µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+884.213µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.12409ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+1.176588ms)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+1.491913ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+1.533722ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+1.556944ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+11.958343ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+12.000743ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000544c00] Shutdown  (t=+12.026536ms)
=== RUN   Test/ClusterWatchAfterCache
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+40.8µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+65.889µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+122.185µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+144.121µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+166.731µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000248700] Created ClientConn to xDS management server: xds-server  (t=+210.227µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000248700] Created  (t=+231.359µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+272.763µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+306.164µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+365.649µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+369.856µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+403.238µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+426.065µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+20.980311ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+21.018439ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000248700] Shutdown  (t=+21.051543ms)
=== RUN   Test/ClusterWatchExpiryTimer
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+74.416µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+210.566µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+479.707µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+514.119µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+553.739µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00059a100] Created ClientConn to xDS management server: xds-server  (t=+586.686µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00059a100] Created  (t=+611.817µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+624.819µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+691.323µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+751.932µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+775.51µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+781.831µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+838.316µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+503.532375ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+503.595902ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00059a100] Shutdown  (t=+503.634783ms)
=== RUN   Test/ClusterWatchExpiryTimerStop
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+92.388µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+149.861µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+199.736µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+239.705µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+258.261µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000248700] Created ClientConn to xDS management server: xds-server  (t=+308.391µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000248700] Created  (t=+329.806µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+370.697µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+409.139µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+457.615µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+473.659µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+498.892µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+521.023µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+501.179484ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+501.259762ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000248700] Shutdown  (t=+501.298887ms)
=== RUN   Test/ClusterWatchNACKError
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+47.97µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+74.732µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+127.242µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+147.197µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+184.36µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00059a200] Created ClientConn to xDS management server: xds-server  (t=+217.468µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00059a200] Created  (t=+238.942µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+299.461µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+327.905µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+729.169µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+850.83µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+903.171µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+935.954µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00059a200] Shutdown  (t=+980.237µs)
=== RUN   Test/EDSParseRespProto
=== RUN   Test/EDSParseRespProto/missing-priority
=== RUN   Test/EDSParseRespProto/missing-locality-ID
=== RUN   Test/EDSParseRespProto/good
=== RUN   Test/EndpointsThreeWatchDifferentResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+29.142µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+49.35µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+87.54µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+104.54µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+142.327µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00059b400] Created ClientConn to xDS management server: xds-server  (t=+180.269µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00059b400] Created  (t=+198.521µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+218.971µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+246.082µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+291.863µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+293.75µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+352.56µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+376.647µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+708.196µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+730.019µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00059b400] Shutdown  (t=+746.854µs)
=== RUN   Test/EndpointsTwoWatchSameResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+93.153µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+135.283µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+356.144µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+385.115µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+401.063µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000249600] Created ClientConn to xDS management server: xds-server  (t=+430.375µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000249600] Created  (t=+447.989µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+479.232µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+517.445µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+557.774µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+575.49µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+596.147µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+615.273µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+10.929012ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+10.976086ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000249600] Shutdown  (t=+10.999892ms)
=== RUN   Test/EndpointsWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+32.761µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+75.512µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+96.474µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+123.064µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+137.42µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000334000] Created ClientConn to xDS management server: xds-server  (t=+175.537µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000334000] Created  (t=+198.731µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+200.643µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+229.766µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+266.488µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+282.565µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+302.447µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+319.808µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+20.548124ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+20.577481ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000334000] Shutdown  (t=+20.599227ms)
=== RUN   Test/EndpointsWatchAfterCache
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+34.277µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+58.517µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+479.623µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+547.731µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+580.842µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000544600] Created ClientConn to xDS management server: xds-server  (t=+644.608µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000544600] Created  (t=+697.556µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+741.437µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+917.652µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+961.936µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+1.324242ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+1.359759ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+1.388865ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+21.85697ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+21.909352ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000544600] Shutdown  (t=+21.930085ms)
=== RUN   Test/EndpointsWatchExpiryTimer
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+34.315µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+62.337µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+102.135µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+124.669µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+141.044µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00048c100] Created ClientConn to xDS management server: xds-server  (t=+180.774µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00048c100] Created  (t=+208.182µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+242.093µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+282.473µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+352.72µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+367.807µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+401.51µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+425.899µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+500.996313ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+501.084631ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00048c100] Shutdown  (t=+501.126063ms)
=== RUN   Test/EndpointsWatchNACKError
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+94.263µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+142.145µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+256.738µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+298.06µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+317.583µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00048c300] Created ClientConn to xDS management server: xds-server  (t=+359.645µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+464.641µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+727.877µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+805.649µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00048c300] Created  (t=+696.297µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+807.905µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+830.527µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+907.172µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+948.821µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00048c300] Shutdown  (t=+972.573µs)
=== RUN   Test/GetClusterRequestsCounter
=== RUN   Test/HashPoliciesProtoToSlice
=== RUN   Test/HashPoliciesProtoToSlice/header-hash-policy
=== RUN   Test/HashPoliciesProtoToSlice/channel-id-hash-policy
=== RUN   Test/HashPoliciesProtoToSlice/wrong-filter-state-key
=== CONT  Test/HashPoliciesProtoToSlice
    tlogger.go:99: xds.go:535 hash policy filter_state:{key:"unsupported key"} contains an invalid key for filter state policy "unsupported key"  (t=+767.008µs)
=== RUN   Test/HashPoliciesProtoToSlice/no-op-hash-policy
=== CONT  Test/HashPoliciesProtoToSlice
    tlogger.go:99: xds.go:535 hash policy filter_state:{} contains an invalid key for filter state policy ""  (t=+845.736µs)
=== RUN   Test/HashPoliciesProtoToSlice/header-and-channel-id-hash-policy
=== RUN   Test/LDSResourceRemoved
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+105.974µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+192.028µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+241.123µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+260.982µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+281.197µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000366000] Created ClientConn to xDS management server: xds-server  (t=+313.981µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000366000] Created  (t=+333.431µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+536.075µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+553.945µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+767.538µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+588.741µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+806.58µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+872.1µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+11.302007ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+11.374673ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000366000] Shutdown  (t=+11.418115ms)
=== RUN   Test/LDSThreeWatchDifferentResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+73.802µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+114.327µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+196.305µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+239.772µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+288.054µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000544600] Created ClientConn to xDS management server: xds-server  (t=+322.259µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000544600] Created  (t=+344.255µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+384.598µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+424.897µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+460.093µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+494.045µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+511.882µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000544600] Shutdown  (t=+551.937µs)
=== RUN   Test/LDSTwoWatchSameResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+41.35µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+68.263µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+113.422µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+134.958µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+152.586µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000216000] Created ClientConn to xDS management server: xds-server  (t=+184.806µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000216000] Created  (t=+209.402µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+240.642µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+303.173µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+723.269µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+746.489µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+856.087µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+917.939µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+10.668189ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+10.744993ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000216000] Shutdown  (t=+10.782139ms)
=== RUN   Test/LDSWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+68.461µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+143.398µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+183.81µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+214.73µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+242.971µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000216100] Created ClientConn to xDS management server: xds-server  (t=+313.907µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000216100] Created  (t=+336.873µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+362.432µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+401.984µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+464.55µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+468.606µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+528.247µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+550.954µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+11.236094ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+11.308261ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000216100] Shutdown  (t=+11.340546ms)
=== RUN   Test/LDSWatchAfterCache
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+73.147µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+127.596µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+224.578µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+276.864µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+309.442µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000248600] Created ClientConn to xDS management server: xds-server  (t=+489.406µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000248600] Created  (t=+569.058µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+545.569µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+743.325µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+801.463µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+820.918µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+883.96µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+910.658µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+21.540977ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+21.622886ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000248600] Shutdown  (t=+21.662403ms)
=== RUN   Test/ListenerWatchNACKError
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+80.486µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+147.372µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+202.932µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+225.987µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+245.346µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00032e100] Created ClientConn to xDS management server: xds-server  (t=+283.413µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00032e100] Created  (t=+307.267µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+325.575µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+349.507µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+371.855µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+374.633µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00032e100] Shutdown  (t=+389.5µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+450.464µs)
=== RUN   Test/Match
=== RUN   Test/Match/invalid-empty
=== RUN   Test/Match/invalid
=== RUN   Test/Match/universal
=== RUN   Test/Match/prefix-match
=== RUN   Test/Match/prefix-no-match
=== RUN   Test/Match/suffix-match
=== RUN   Test/Match/suffix-no-match
=== RUN   Test/Match/exact-match
=== RUN   Test/Match/exact-no-match
=== RUN   Test/MatchTypeForDomain
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-match-field-is-nil
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-match-field-is-non-nil
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-routeaction-field-is-nil
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-cluster-field-is-empty
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-but-with-casesensitive-false
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-empty-string-route
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-slash-string-route
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/route-config-with-weighted_clusters_weights_not_add_up
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-weighted_clusters
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-max-stream-duration
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-grpc-timeout-header-max
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-both-timeouts
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-filter-config
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-filter-config-typed-struct
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-optional-http-filter-config
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-err-filter-config
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-optional-err-filter-config
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-unknown-filter-config
=== RUN   Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-optional-unknown-filter-config
=== RUN   Test/RDSThreeWatchDifferentResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+24.808µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+43.085µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+74.851µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+88.895µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+101.233µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000259100] Created ClientConn to xDS management server: xds-server  (t=+123.168µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000259100] Created  (t=+137.022µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+160.237µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+185.144µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+220.485µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+232.28µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+257.696µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+276.399µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+366.153µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+383.462µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000259100] Shutdown  (t=+397.375µs)
=== RUN   Test/RDSTwoWatchSameResourceName
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+21.116µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+35.883µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+63.983µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+78.473µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+88.574µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000263600] Created ClientConn to xDS management server: xds-server  (t=+107.47µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000263600] Created  (t=+123.112µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+128.318µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+149.555µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+179.105µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+187.023µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+203.087µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+218.7µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+13.010267ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+13.100403ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000263600] Shutdown  (t=+13.134334ms)
=== RUN   Test/RDSWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+135.812µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+205.909µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+426.915µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+716.101µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+748.484µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc00065e000] Created ClientConn to xDS management server: xds-server  (t=+789.571µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc00065e000] Created  (t=+813.061µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+854.994µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+895.338µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+960.797µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+979.252µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+992.666µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+1.05874ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+21.824041ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+21.871868ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc00065e000] Shutdown  (t=+21.892808ms)
=== RUN   Test/RDSWatchAfterCache
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+56.563µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+109.75µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+195.526µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+229.922µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+257.452µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000248800] Created ClientConn to xDS management server: xds-server  (t=+362.666µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000248800] Created  (t=+424.853µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+432.057µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+511.223µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+587.015µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+585.899µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+647.569µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+670.455µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+22.618338ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+22.691376ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000248800] Shutdown  (t=+22.74299ms)
=== RUN   Test/RequestsCounter
=== RUN   Test/RequestsCounter/does-not-exceed-max-requests
=== RUN   Test/RequestsCounter/exceeds-max-requests
=== RUN   Test/RouteWatchNACKError
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+68.245µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+109.126µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+157.198µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+192.529µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+315.301µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000248600] Created ClientConn to xDS management server: xds-server  (t=+491.47µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000248600] Created  (t=+519.094µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+552.254µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+566.723µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+606.916µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+625.737µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000248600] Shutdown  (t=+650.49µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+664.868µs)
=== RUN   Test/RoutesProtoToSlice
=== RUN   Test/RoutesProtoToSlice/no_path
=== RUN   Test/RoutesProtoToSlice/case_sensitive_is_false
=== RUN   Test/RoutesProtoToSlice/good
=== RUN   Test/RoutesProtoToSlice/good_with_regex_matchers
=== RUN   Test/RoutesProtoToSlice/query_is_ignored
=== CONT  Test/RoutesProtoToSlice
    tlogger.go:99: xds.go:359 route name:"with_query"  match:{prefix:"/b/"  query_parameters:{name:"route_will_be_ignored"}} has query parameter matchers, the route will be ignored  (t=+1.879914ms)
=== RUN   Test/RoutesProtoToSlice/unrecognized_path_specifier
=== RUN   Test/RoutesProtoToSlice/bad_regex_in_path_specifier
=== RUN   Test/RoutesProtoToSlice/bad_regex_in_header_specifier
=== RUN   Test/RoutesProtoToSlice/unrecognized_header_match_specifier
=== RUN   Test/RoutesProtoToSlice/no_cluster_in_weighted_clusters_action
=== RUN   Test/RoutesProtoToSlice/all_0-weight_clusters_in_weighted_clusters_action
=== RUN   Test/RoutesProtoToSlice/totalWeight_is_nil_in_weighted_clusters_action
=== RUN   Test/RoutesProtoToSlice/The_sum_of_all_weighted_clusters_is_not_equal_totalWeight
=== RUN   Test/RoutesProtoToSlice/default_totalWeight_is_100_in_weighted_clusters_action
=== RUN   Test/RoutesProtoToSlice/default_totalWeight_is_100_in_weighted_clusters_action#01
=== RUN   Test/RoutesProtoToSlice/good-with-channel-id-hash-policy
=== RUN   Test/RoutesProtoToSlice/good-with-header-hash-policy-no-regex-specified
=== RUN   Test/RoutesProtoToSlice/with_custom_HTTP_filter_config
=== RUN   Test/RoutesProtoToSlice/with_custom_HTTP_filter_config_in_typed_struct
=== RUN   Test/RoutesProtoToSlice/with_optional_custom_HTTP_filter_config
=== RUN   Test/RoutesProtoToSlice/with_erroring_custom_HTTP_filter_config
=== RUN   Test/RoutesProtoToSlice/with_optional_erroring_custom_HTTP_filter_config
=== RUN   Test/RoutesProtoToSlice/with_unknown_custom_HTTP_filter_config
=== RUN   Test/RoutesProtoToSlice/with_optional_unknown_custom_HTTP_filter_config
=== RUN   Test/SetMaxRequestsDecreased
=== RUN   Test/SetMaxRequestsIncreased
=== RUN   Test/UnmarshalCluster
=== RUN   Test/UnmarshalCluster/non-cluster_resource_type
=== RUN   Test/UnmarshalCluster/badly_marshaled_cluster_resource
=== RUN   Test/UnmarshalCluster/bad_cluster_resource
=== CONT  Test/UnmarshalCluster
    tlogger.go:99: xds.go:567 Resource with name: test, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "test",
          "type": "STATIC"
        }  (t=+1.894209ms)
=== RUN   Test/UnmarshalCluster/v2_cluster
=== CONT  Test/UnmarshalCluster
    tlogger.go:99: xds.go:567 Resource with name: v2clusterName, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "v2clusterName",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "v2Service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+2.132188ms)
=== RUN   Test/UnmarshalCluster/v3_cluster
=== CONT  Test/UnmarshalCluster
    tlogger.go:99: xds.go:567 Resource with name: v3clusterName, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "v3clusterName",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "v2Service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+2.470594ms)
=== RUN   Test/UnmarshalCluster/multiple_clusters
=== CONT  Test/UnmarshalCluster
    tlogger.go:99: xds.go:567 Resource with name: v2clusterName, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "v2clusterName",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "v2Service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+2.751107ms)
    tlogger.go:99: xds.go:567 Resource with name: v3clusterName, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "v3clusterName",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "v2Service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+2.790807ms)
=== RUN   Test/UnmarshalCluster/good_and_bad_clusters
=== CONT  Test/UnmarshalCluster
    tlogger.go:99: xds.go:567 Resource with name: v2clusterName, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "v2clusterName",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "v2Service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+3.181377ms)
    tlogger.go:99: xds.go:567 Resource with name: bad, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "bad",
          "type": "STATIC"
        }  (t=+3.213365ms)
    tlogger.go:99: xds.go:567 Resource with name: v3clusterName, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "v3clusterName",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "v2Service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+3.2641ms)
=== RUN   Test/UnmarshalEndpoints
=== RUN   Test/UnmarshalEndpoints/non-clusterLoadAssignment_resource_type
=== RUN   Test/UnmarshalEndpoints/badly_marshaled_clusterLoadAssignment_resource
=== RUN   Test/UnmarshalEndpoints/bad_endpoints_resource
=== CONT  Test/UnmarshalEndpoints
    tlogger.go:99: xds.go:796 Resource with name: test, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "test",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 2
            }
          ],
          "policy": {
        
          }
        }  (t=+363.392µs)
=== RUN   Test/UnmarshalEndpoints/v3_endpoints
=== CONT  Test/UnmarshalEndpoints
    tlogger.go:99: xds.go:796 Resource with name: test, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "test",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  },
                  "healthStatus": "UNHEALTHY",
                  "loadBalancingWeight": 271
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  },
                  "healthStatus": "DRAINING",
                  "loadBalancingWeight": 828
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+564.311µs)
=== RUN   Test/UnmarshalEndpoints/good_and_bad_endpoints
=== CONT  Test/UnmarshalEndpoints
    tlogger.go:99: xds.go:796 Resource with name: test, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "test",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  },
                  "healthStatus": "UNHEALTHY",
                  "loadBalancingWeight": 271
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  },
                  "healthStatus": "DRAINING",
                  "loadBalancingWeight": 828
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+1.594375ms)
    tlogger.go:99: xds.go:796 Resource with name: bad, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "bad",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 2
            }
          ],
          "policy": {
        
          }
        }  (t=+1.655625ms)
=== RUN   Test/UnmarshalListener_ClientSide
=== RUN   Test/UnmarshalListener_ClientSide/non-listener_resource
=== RUN   Test/UnmarshalListener_ClientSide/badly_marshaled_listener_resource
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{type_url:"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"  value:"\x01\x02\x03\x04"}}  (t=+2.663004ms)
=== RUN   Test/UnmarshalListener_ClientSide/wrong_type_in_apiListener
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.api.v2.Listener"
            }
          }
        }  (t=+2.879428ms)
=== RUN   Test/UnmarshalListener_ClientSide/empty_httpConnMgr_in_apiListener
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
        
              }
            }
          }
        }  (t=+3.092156ms)
=== RUN   Test/UnmarshalListener_ClientSide/scopedRoutes_routeConfig_in_apiListener
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "scopedRoutes": {
        
              }
            }
          }
        }  (t=+3.321686ms)
=== RUN   Test/UnmarshalListener_ClientSide/rds.ConfigSource_in_apiListener_is_not_ADS
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "path": "/some/path"
                },
                "routeConfigName": "v3RouteConfig"
              }
            }
          }
        }  (t=+3.511745ms)
=== RUN   Test/UnmarshalListener_ClientSide/empty_resource_list
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_no_filters
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v3RouteConfig"
              },
              "commonHttpProtocolOptions": {
                "maxStreamDuration": "1s"
              }
            }
          }
        }  (t=+3.80082ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_custom_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"customFilter"  typed_config:{type_url:"custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+4.363916ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_custom_filter_in_typed_struct
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v3RouteConfig"
              },
              "httpFilters": [
                {
                  "name": "customFilter",
                  "typedConfig": {
                    "@type": "type.googleapis.com/udpa.type.v1.TypedStruct",
                    "typeUrl": "custom.filter",
                    "value": {
                        "foo": "bar"
                      }
                  }
                }
              ],
              "commonHttpProtocolOptions": {
                "maxStreamDuration": "1s"
              }
            }
          }
        }  (t=+4.988271ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_optional_custom_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"customFilter"  typed_config:{type_url:"custom.filter"  value:"\x01\x02\x03"}  is_optional:true}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+5.722884ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_two_filters_with_same_name
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"customFilter"  typed_config:{type_url:"custom.filter"  value:"\x01\x02\x03"}}  http_filters:{name:"customFilter"  typed_config:{type_url:"custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+6.347297ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_two_filters_-_same_type_different_name
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"customFilter"  typed_config:{type_url:"custom.filter"  value:"\x01\x02\x03"}}  http_filters:{name:"customFilter2"  typed_config:{type_url:"custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+6.58265ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_server-only_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"serverOnlyCustomFilter"  typed_config:{type_url:"serverOnly.custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+7.399736ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_optional_server-only_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"serverOnlyOptionalCustomFilter"  typed_config:{type_url:"serverOnly.custom.filter"  value:"\x01\x02\x03"}  is_optional:true}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+7.63818ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_client-only_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"clientOnlyCustomFilter"  typed_config:{type_url:"clientOnly.custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+8.355889ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_err_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"errFilter"  typed_config:{type_url:"err.custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+9.015987ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_optional_err_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"errFilter"  typed_config:{type_url:"err.custom.filter"  value:"\x01\x02\x03"}  is_optional:true}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+9.242847ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_unknown_filter
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"unknownFilter"  typed_config:{type_url:"unknown.custom.filter"  value:"\x01\x02\x03"}}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+9.494794ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_with_unknown_filter_(optional)
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:3333"  api_listener:{api_listener:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"v3RouteConfig"}  http_filters:{name:"unknownFilter"  typed_config:{type_url:"unknown.custom.filter"  value:"\x01\x02\x03"}  is_optional:true}  common_http_protocol_options:{max_stream_duration:{seconds:1}}}}}  (t=+9.710202ms)
=== RUN   Test/UnmarshalListener_ClientSide/v2_listener_resource
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:2222",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v2RouteConfig"
              }
            }
          }
        }  (t=+10.410663ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_listener_resource
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v3RouteConfig"
              },
              "commonHttpProtocolOptions": {
                "maxStreamDuration": "1s"
              }
            }
          }
        }  (t=+10.840083ms)
=== RUN   Test/UnmarshalListener_ClientSide/v3_listener_with_inline_route_configuration
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "routeConfig": {
                "name": "routeName",
                "virtualHosts": [
                  {
                    "domains": [
                      "lds.target.good:3333"
                    ],
                    "routes": [
                      {
                        "match": {
                          "prefix": "/"
                        },
                        "route": {
                          "cluster": "clusterName"
                        }
                      }
                    ]
                  }
                ]
              },
              "commonHttpProtocolOptions": {
                "maxStreamDuration": "1s"
              }
            }
          }
        }  (t=+11.414966ms)
=== RUN   Test/UnmarshalListener_ClientSide/multiple_listener_resources
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:2222",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v2RouteConfig"
              }
            }
          }
        }  (t=+12.411368ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v3RouteConfig"
              },
              "commonHttpProtocolOptions": {
                "maxStreamDuration": "1s"
              }
            }
          }
        }  (t=+12.470617ms)
=== RUN   Test/UnmarshalListener_ClientSide/good_and_bad_listener_resources
=== CONT  Test/UnmarshalListener_ClientSide
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:2222",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v2RouteConfig"
              }
            }
          }
        }  (t=+13.069635ms)
    tlogger.go:99: xds.go:76 Resource with name: bad, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "bad",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "scopedRoutes": {
        
              }
            }
          }
        }  (t=+13.115638ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:3333, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:3333",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "v3RouteConfig"
              },
              "commonHttpProtocolOptions": {
                "maxStreamDuration": "1s"
              }
            }
          }
        }  (t=+13.163878ms)
=== RUN   Test/UnmarshalListener_ServerSide
=== RUN   Test/UnmarshalListener_ServerSide/non-empty_listener_filters
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "listenerFilters": [
            {
              "name": "listener-filter-1"
            }
          ]
        }  (t=+493.167µs)
=== RUN   Test/UnmarshalListener_ServerSide/use_original_dst_is_set
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "useOriginalDst": true
        }  (t=+677.801µs)
=== RUN   Test/UnmarshalListener_ServerSide/no_address_field
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999"
        }  (t=+832.269µs)
=== RUN   Test/UnmarshalListener_ServerSide/no_socket_address_field
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
        
          }
        }  (t=+995.339µs)
=== RUN   Test/UnmarshalListener_ServerSide/no_filter_chains_and_no_default_filter_chain
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "destinationPort": 666
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ]
        }  (t=+1.285192ms)
    tlogger.go:99: filter_chain.go:326 [xds] Dropping filter chain filter_chain_match:{destination_port:{value:666}}  filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}} since it contains unsupported destination_port match field  (t=+1.383748ms)
=== RUN   Test/UnmarshalListener_ServerSide/missing_http_connection_manager_network_filter
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "name": "filter-chain-1"
            }
          ]
        }  (t=+1.565146ms)
=== RUN   Test/UnmarshalListener_ServerSide/missing_filter_name_in_http_filter
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
                  }
                }
              ],
              "name": "filter-chain-1"
            }
          ]
        }  (t=+1.76295ms)
=== RUN   Test/UnmarshalListener_ServerSide/duplicate_filter_names_in_http_filter
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "name",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  "name": "name",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "filter-chain-1"
            }
          ]
        }  (t=+2.057004ms)
=== RUN   Test/UnmarshalListener_ServerSide/unsupported_oneof_in_typed_config_of_http_filter
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "name",
                  "configDiscovery": {
        
                  }
                }
              ],
              "name": "filter-chain-1"
            }
          ]
        }  (t=+2.333244ms)
=== RUN   Test/UnmarshalListener_ServerSide/overlapping_filter_chain_match_criteria
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filterChainMatch": {
                "sourcePorts": [
                  1,
                  2,
                  3,
                  4,
                  5
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "filterChainMatch": {
        
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "filterChainMatch": {
                "sourcePorts": [
                  5,
                  6,
                  7
                ]
              },
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ]
        }  (t=+2.664579ms)
=== RUN   Test/UnmarshalListener_ServerSide/unsupported_network_filter
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "name",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.LocalReplyConfig"
                  }
                }
              ],
              "name": "filter-chain-1"
            }
          ]
        }  (t=+2.885395ms)
=== RUN   Test/UnmarshalListener_ServerSide/badly_marshaled_network_filter
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: name:"grpc/server?xds.resource.listening_address=0.0.0.0:9999"  address:{socket_address:{address:"0.0.0.0"  port_value:9999}}  filter_chains:{filters:{name:"name"  typed_config:{type_url:"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"  value:"\x01\x02\x03\x04"}}  name:"filter-chain-1"}  (t=+3.092367ms)
=== RUN   Test/UnmarshalListener_ServerSide/unexpected_transport_socket_name
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "unsupported-transport-socket-name"
              },
              "name": "filter-chain-1"
            }
          ]
        }  (t=+3.357733ms)
=== RUN   Test/UnmarshalListener_ServerSide/unexpected_transport_socket_typedConfig_URL
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
                }
              },
              "name": "filter-chain-1"
            }
          ]
        }  (t=+3.621249ms)
=== RUN   Test/UnmarshalListener_ServerSide/badly_marshaled_transport_socket
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: name:"grpc/server?xds.resource.listening_address=0.0.0.0:9999"  address:{socket_address:{address:"0.0.0.0"  port_value:9999}}  filter_chains:{filters:{name:"filter-1"  typed_config:{[type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager]:{route_config:{name:"routeName"  virtual_hosts:{domains:"lds.target.good:3333"  routes:{match:{prefix:"/"}  non_forwarding_action:{}}}}}}}  transport_socket:{name:"envoy.transport_sockets.tls"  typed_config:{type_url:"type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext"  value:"\x01\x02\x03\x04"}}  name:"filter-chain-1"}  (t=+3.924926ms)
=== RUN   Test/UnmarshalListener_ServerSide/missing_CommonTlsContext
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext"
                }
              },
              "name": "filter-chain-1"
            }
          ]
        }  (t=+4.18137ms)
=== RUN   Test/UnmarshalListener_ServerSide/unsupported_validation_context_in_transport_socket
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "validationContextSdsSecretConfig": {
                      "name": "foo-sds-secret"
                    }
                  }
                }
              },
              "name": "filter-chain-1"
            }
          ]
        }  (t=+4.459423ms)
=== RUN   Test/UnmarshalListener_ServerSide/empty_transport_socket
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "name": "filter-chain-1"
            }
          ]
        }  (t=+4.70123ms)
=== RUN   Test/UnmarshalListener_ServerSide/no_identity_and_root_certificate_providers
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "identityPluginInstance",
                      "certificateName": "identityCertName"
                    }
                  },
                  "requireClientCertificate": true
                }
              },
              "name": "filter-chain-1"
            }
          ]
        }  (t=+7.208937ms)
=== RUN   Test/UnmarshalListener_ServerSide/no_identity_certificate_provider_with_require_client_cert
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
        
                  }
                }
              },
              "name": "filter-chain-1"
            }
          ]
        }  (t=+8.075021ms)
=== RUN   Test/UnmarshalListener_ServerSide/happy_case_with_no_validation_context
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "identityPluginInstance",
                      "certificateName": "identityCertName"
                    }
                  }
                }
              },
              "name": "filter-chain-1"
            }
          ],
          "defaultFilterChain": {
            "filters": [
              {
                "name": "filter-1",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                  "routeConfig": {
                    "name": "routeName",
                    "virtualHosts": [
                      {
                        "domains": [
                          "lds.target.good:3333"
                        ],
                        "routes": [
                          {
                            "match": {
                              "prefix": "/"
                            },
                            "nonForwardingAction": {
        
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "transportSocket": {
              "name": "envoy.transport_sockets.tls",
              "typedConfig": {
                "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                "commonTlsContext": {
                  "tlsCertificateCertificateProviderInstance": {
                    "instanceName": "defaultIdentityPluginInstance",
                    "certificateName": "defaultIdentityCertName"
                  }
                }
              }
            },
            "name": "default-filter-chain-1"
          }
        }  (t=+8.423742ms)
=== RUN   Test/UnmarshalListener_ServerSide/happy_case_with_validation_context_provider_instance
=== CONT  Test/UnmarshalListener_ServerSide
    tlogger.go:99: xds.go:76 Resource with name: grpc/server?xds.resource.listening_address=0.0.0.0:9999, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "grpc/server?xds.resource.listening_address=0.0.0.0:9999",
          "address": {
            "socketAddress": {
              "address": "0.0.0.0",
              "portValue": 9999
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "filter-1",
                  "typedConfig": {
                    "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                    "routeConfig": {
                      "name": "routeName",
                      "virtualHosts": [
                        {
                          "domains": [
                            "lds.target.good:3333"
                          ],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "nonForwardingAction": {
        
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "transportSocket": {
                "name": "envoy.transport_sockets.tls",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                  "commonTlsContext": {
                    "tlsCertificateCertificateProviderInstance": {
                      "instanceName": "identityPluginInstance",
                      "certificateName": "identityCertName"
                    },
                    "validationContextCertificateProviderInstance": {
                      "instanceName": "rootPluginInstance",
                      "certificateName": "rootCertName"
                    }
                  },
                  "requireClientCertificate": true
                }
              },
              "name": "filter-chain-1"
            }
          ],
          "defaultFilterChain": {
            "filters": [
              {
                "name": "filter-1",
                "typedConfig": {
                  "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                  "routeConfig": {
                    "name": "routeName",
                    "virtualHosts": [
                      {
                        "domains": [
                          "lds.target.good:3333"
                        ],
                        "routes": [
                          {
                            "match": {
                              "prefix": "/"
                            },
                            "nonForwardingAction": {
        
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "transportSocket": {
              "name": "envoy.transport_sockets.tls",
              "typedConfig": {
                "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext",
                "commonTlsContext": {
                  "tlsCertificateCertificateProviderInstance": {
                    "instanceName": "defaultIdentityPluginInstance",
                    "certificateName": "defaultIdentityCertName"
                  },
                  "validationContextCertificateProviderInstance": {
                    "instanceName": "defaultRootPluginInstance",
                    "certificateName": "defaultRootCertName"
                  }
                },
                "requireClientCertificate": true
              }
            },
            "name": "default-filter-chain-1"
          }
        }  (t=+12.117339ms)
=== RUN   Test/UnmarshalRouteConfig
=== RUN   Test/UnmarshalRouteConfig/non-routeConfig_resource_type
=== RUN   Test/UnmarshalRouteConfig/badly_marshaled_routeconfig_resource
=== RUN   Test/UnmarshalRouteConfig/empty_resource_list
=== RUN   Test/UnmarshalRouteConfig/v2_routeConfig_resource
=== CONT  Test/UnmarshalRouteConfig
    tlogger.go:99: xds.go:298 Resource with name: v2RouteConfig, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "v2RouteConfig",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "uninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "v2Cluster"
                  }
                }
              ]
            }
          ]
        }.  (t=+629.375µs)
=== RUN   Test/UnmarshalRouteConfig/v3_routeConfig_resource
=== CONT  Test/UnmarshalRouteConfig
    tlogger.go:99: xds.go:298 Resource with name: v3RouteConfig, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "v3RouteConfig",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "uninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "v3Cluster"
                  }
                }
              ]
            }
          ]
        }.  (t=+1.530095ms)
=== RUN   Test/UnmarshalRouteConfig/multiple_routeConfig_resources
=== CONT  Test/UnmarshalRouteConfig
    tlogger.go:99: xds.go:298 Resource with name: v2RouteConfig, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "v2RouteConfig",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "uninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "v2Cluster"
                  }
                }
              ]
            }
          ]
        }.  (t=+2.374333ms)
    tlogger.go:99: xds.go:298 Resource with name: v3RouteConfig, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "v3RouteConfig",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "uninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "v3Cluster"
                  }
                }
              ]
            }
          ]
        }.  (t=+2.450382ms)
=== RUN   Test/UnmarshalRouteConfig/good_and_bad_routeConfig_resources
=== CONT  Test/UnmarshalRouteConfig
    tlogger.go:99: xds.go:298 Resource with name: v2RouteConfig, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "v2RouteConfig",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "uninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "v2Cluster"
                  }
                }
              ]
            }
          ]
        }.  (t=+3.862625ms)
    tlogger.go:99: xds.go:298 Resource with name: bad, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "bad",
          "virtualHosts": [
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "connectMatcher": {
        
                    }
                  }
                }
              ]
            }
          ]
        }.  (t=+3.910313ms)
    tlogger.go:99: xds.go:298 Resource with name: v3RouteConfig, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "v3RouteConfig",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "uninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "v3Cluster"
                  }
                }
              ]
            }
          ]
        }.  (t=+3.993917ms)
=== RUN   Test/ValidateClusterWithSecurityConfig
=== RUN   Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-name
=== RUN   Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-typeURL
=== RUN   Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-type
=== RUN   Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-validation-context
=== RUN   Test/ValidateClusterWithSecurityConfig/transport-socket-without-validation-context
=== RUN   Test/ValidateClusterWithSecurityConfig/empty-prefix-in-matching-SAN
=== RUN   Test/ValidateClusterWithSecurityConfig/empty-suffix-in-matching-SAN
=== RUN   Test/ValidateClusterWithSecurityConfig/empty-contains-in-matching-SAN
=== RUN   Test/ValidateClusterWithSecurityConfig/invalid-regex-in-matching-SAN
=== RUN   Test/ValidateClusterWithSecurityConfig/happy-case-with-no-identity-certs
=== RUN   Test/ValidateClusterWithSecurityConfig/happy-case-with-validation-context-provider-instance
=== RUN   Test/ValidateClusterWithSecurityConfig/happy-case-with-combined-validation-context
=== RUN   Test/ValidateClusterWithSecurityConfig_EnvVarOff
=== RUN   Test/ValidateCluster_Failure
=== RUN   Test/ValidateCluster_Failure/non-supported-cluster-type-static
=== RUN   Test/ValidateCluster_Failure/non-supported-cluster-type-original-dst
=== RUN   Test/ValidateCluster_Failure/no-eds-config
=== RUN   Test/ValidateCluster_Failure/no-ads-config-source
=== RUN   Test/ValidateCluster_Failure/non-round-robin-lb-policy
=== RUN   Test/ValidateCluster_Failure/logical-dns-multiple-localities
=== RUN   Test/ValidateCluster_Success
=== RUN   Test/ValidateCluster_Success/happy-case-logical-dns
=== RUN   Test/ValidateCluster_Success/happy-case-aggregate-v3
=== RUN   Test/ValidateCluster_Success/happy-case-no-service-name-no-lrs
=== RUN   Test/ValidateCluster_Success/happy-case-no-lrs
=== RUN   Test/ValidateCluster_Success/happiest-case
=== RUN   Test/ValidateCluster_Success/happiest-case-with-circuitbreakers
=== RUN   Test/WatchCallAnotherWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+34.943µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+76.927µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+109.851µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+133.803µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+154.516µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000b03600] Created ClientConn to xDS management server: xds-server  (t=+189.427µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000b03600] Created  (t=+210.356µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+330.266µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+331.578µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+406.383µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000b03600] Shutdown  (t=+496.042µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+401.614µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+554.825µs)
--- PASS: Test (1.97s)
    --- PASS: Test/ClientNewSingleton (0.10s)
    --- PASS: Test/ClusterResourceRemoved (0.01s)
    --- PASS: Test/ClusterThreeWatchDifferentResourceName (0.00s)
    --- PASS: Test/ClusterTwoWatchSameResourceName (0.01s)
    --- PASS: Test/ClusterWatch (0.01s)
    --- PASS: Test/ClusterWatchAfterCache (0.02s)
    --- PASS: Test/ClusterWatchExpiryTimer (0.50s)
    --- PASS: Test/ClusterWatchExpiryTimerStop (0.50s)
    --- PASS: Test/ClusterWatchNACKError (0.00s)
    --- PASS: Test/EDSParseRespProto (0.00s)
        --- PASS: Test/EDSParseRespProto/missing-priority (0.00s)
        --- PASS: Test/EDSParseRespProto/missing-locality-ID (0.00s)
        --- PASS: Test/EDSParseRespProto/good (0.00s)
    --- PASS: Test/EndpointsThreeWatchDifferentResourceName (0.00s)
    --- PASS: Test/EndpointsTwoWatchSameResourceName (0.01s)
    --- PASS: Test/EndpointsWatch (0.02s)
    --- PASS: Test/EndpointsWatchAfterCache (0.02s)
    --- PASS: Test/EndpointsWatchExpiryTimer (0.50s)
    --- PASS: Test/EndpointsWatchNACKError (0.00s)
    --- PASS: Test/GetClusterRequestsCounter (0.00s)
    --- PASS: Test/HashPoliciesProtoToSlice (0.00s)
        --- PASS: Test/HashPoliciesProtoToSlice/header-hash-policy (0.00s)
        --- PASS: Test/HashPoliciesProtoToSlice/channel-id-hash-policy (0.00s)
        --- PASS: Test/HashPoliciesProtoToSlice/wrong-filter-state-key (0.00s)
        --- PASS: Test/HashPoliciesProtoToSlice/no-op-hash-policy (0.00s)
        --- PASS: Test/HashPoliciesProtoToSlice/header-and-channel-id-hash-policy (0.00s)
    --- PASS: Test/LDSResourceRemoved (0.01s)
    --- PASS: Test/LDSThreeWatchDifferentResourceName (0.00s)
    --- PASS: Test/LDSTwoWatchSameResourceName (0.01s)
    --- PASS: Test/LDSWatch (0.01s)
    --- PASS: Test/LDSWatchAfterCache (0.02s)
    --- PASS: Test/ListenerWatchNACKError (0.00s)
    --- PASS: Test/Match (0.00s)
        --- PASS: Test/Match/invalid-empty (0.00s)
        --- PASS: Test/Match/invalid (0.00s)
        --- PASS: Test/Match/universal (0.00s)
        --- PASS: Test/Match/prefix-match (0.00s)
        --- PASS: Test/Match/prefix-no-match (0.00s)
        --- PASS: Test/Match/suffix-match (0.00s)
        --- PASS: Test/Match/suffix-no-match (0.00s)
        --- PASS: Test/Match/exact-match (0.00s)
        --- PASS: Test/Match/exact-no-match (0.00s)
    --- PASS: Test/MatchTypeForDomain (0.00s)
    --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration (0.01s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-match-field-is-nil (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-match-field-is-non-nil (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-routeaction-field-is-nil (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/default-route-cluster-field-is-empty (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-but-with-casesensitive-false (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-empty-string-route (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-slash-string-route (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/route-config-with-weighted_clusters_weights_not_add_up (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-weighted_clusters (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-max-stream-duration (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-grpc-timeout-header-max (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-both-timeouts (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-filter-config (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-filter-config-typed-struct (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-optional-http-filter-config (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-err-filter-config (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-optional-err-filter-config (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-unknown-filter-config (0.00s)
        --- PASS: Test/RDSGenerateRDSUpdateFromRouteConfiguration/good-route-config-with-http-optional-unknown-filter-config (0.00s)
    --- PASS: Test/RDSThreeWatchDifferentResourceName (0.00s)
    --- PASS: Test/RDSTwoWatchSameResourceName (0.01s)
    --- PASS: Test/RDSWatch (0.07s)
    --- PASS: Test/RDSWatchAfterCache (0.02s)
    --- PASS: Test/RequestsCounter (0.00s)
        --- PASS: Test/RequestsCounter/does-not-exceed-max-requests (0.00s)
        --- PASS: Test/RequestsCounter/exceeds-max-requests (0.00s)
    --- PASS: Test/RouteWatchNACKError (0.00s)
    --- PASS: Test/RoutesProtoToSlice (0.01s)
        --- PASS: Test/RoutesProtoToSlice/no_path (0.00s)
        --- PASS: Test/RoutesProtoToSlice/case_sensitive_is_false (0.00s)
        --- PASS: Test/RoutesProtoToSlice/good (0.00s)
        --- PASS: Test/RoutesProtoToSlice/good_with_regex_matchers (0.00s)
        --- PASS: Test/RoutesProtoToSlice/query_is_ignored (0.00s)
        --- PASS: Test/RoutesProtoToSlice/unrecognized_path_specifier (0.00s)
        --- PASS: Test/RoutesProtoToSlice/bad_regex_in_path_specifier (0.00s)
        --- PASS: Test/RoutesProtoToSlice/bad_regex_in_header_specifier (0.00s)
        --- PASS: Test/RoutesProtoToSlice/unrecognized_header_match_specifier (0.00s)
        --- PASS: Test/RoutesProtoToSlice/no_cluster_in_weighted_clusters_action (0.00s)
        --- PASS: Test/RoutesProtoToSlice/all_0-weight_clusters_in_weighted_clusters_action (0.00s)
        --- PASS: Test/RoutesProtoToSlice/totalWeight_is_nil_in_weighted_clusters_action (0.00s)
        --- PASS: Test/RoutesProtoToSlice/The_sum_of_all_weighted_clusters_is_not_equal_totalWeight (0.00s)
        --- PASS: Test/RoutesProtoToSlice/default_totalWeight_is_100_in_weighted_clusters_action (0.00s)
        --- PASS: Test/RoutesProtoToSlice/default_totalWeight_is_100_in_weighted_clusters_action#01 (0.00s)
        --- PASS: Test/RoutesProtoToSlice/good-with-channel-id-hash-policy (0.00s)
        --- PASS: Test/RoutesProtoToSlice/good-with-header-hash-policy-no-regex-specified (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_custom_HTTP_filter_config (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_custom_HTTP_filter_config_in_typed_struct (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_optional_custom_HTTP_filter_config (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_erroring_custom_HTTP_filter_config (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_optional_erroring_custom_HTTP_filter_config (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_unknown_custom_HTTP_filter_config (0.00s)
        --- PASS: Test/RoutesProtoToSlice/with_optional_unknown_custom_HTTP_filter_config (0.00s)
    --- PASS: Test/SetMaxRequestsDecreased (0.00s)
    --- PASS: Test/SetMaxRequestsIncreased (0.00s)
    --- PASS: Test/UnmarshalCluster (0.00s)
        --- PASS: Test/UnmarshalCluster/non-cluster_resource_type (0.00s)
        --- PASS: Test/UnmarshalCluster/badly_marshaled_cluster_resource (0.00s)
        --- PASS: Test/UnmarshalCluster/bad_cluster_resource (0.00s)
        --- PASS: Test/UnmarshalCluster/v2_cluster (0.00s)
        --- PASS: Test/UnmarshalCluster/v3_cluster (0.00s)
        --- PASS: Test/UnmarshalCluster/multiple_clusters (0.00s)
        --- PASS: Test/UnmarshalCluster/good_and_bad_clusters (0.00s)
    --- PASS: Test/UnmarshalEndpoints (0.00s)
        --- PASS: Test/UnmarshalEndpoints/non-clusterLoadAssignment_resource_type (0.00s)
        --- PASS: Test/UnmarshalEndpoints/badly_marshaled_clusterLoadAssignment_resource (0.00s)
        --- PASS: Test/UnmarshalEndpoints/bad_endpoints_resource (0.00s)
        --- PASS: Test/UnmarshalEndpoints/v3_endpoints (0.00s)
        --- PASS: Test/UnmarshalEndpoints/good_and_bad_endpoints (0.00s)
    --- PASS: Test/UnmarshalListener_ClientSide (0.01s)
        --- PASS: Test/UnmarshalListener_ClientSide/non-listener_resource (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/badly_marshaled_listener_resource (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/wrong_type_in_apiListener (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/empty_httpConnMgr_in_apiListener (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/scopedRoutes_routeConfig_in_apiListener (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/rds.ConfigSource_in_apiListener_is_not_ADS (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/empty_resource_list (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_no_filters (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_custom_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_custom_filter_in_typed_struct (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_optional_custom_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_two_filters_with_same_name (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_two_filters_-_same_type_different_name (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_server-only_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_optional_server-only_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_client-only_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_err_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_optional_err_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_unknown_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_with_unknown_filter_(optional) (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v2_listener_resource (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_listener_resource (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/v3_listener_with_inline_route_configuration (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/multiple_listener_resources (0.00s)
        --- PASS: Test/UnmarshalListener_ClientSide/good_and_bad_listener_resources (0.00s)
    --- PASS: Test/UnmarshalListener_ServerSide (0.02s)
        --- PASS: Test/UnmarshalListener_ServerSide/non-empty_listener_filters (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/use_original_dst_is_set (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/no_address_field (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/no_socket_address_field (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/no_filter_chains_and_no_default_filter_chain (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/missing_http_connection_manager_network_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/missing_filter_name_in_http_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/duplicate_filter_names_in_http_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/unsupported_oneof_in_typed_config_of_http_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/overlapping_filter_chain_match_criteria (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/unsupported_network_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/badly_marshaled_network_filter (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/unexpected_transport_socket_name (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/unexpected_transport_socket_typedConfig_URL (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/badly_marshaled_transport_socket (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/missing_CommonTlsContext (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/unsupported_validation_context_in_transport_socket (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/empty_transport_socket (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/no_identity_and_root_certificate_providers (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/no_identity_certificate_provider_with_require_client_cert (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/happy_case_with_no_validation_context (0.00s)
        --- PASS: Test/UnmarshalListener_ServerSide/happy_case_with_validation_context_provider_instance (0.00s)
    --- PASS: Test/UnmarshalRouteConfig (0.01s)
        --- PASS: Test/UnmarshalRouteConfig/non-routeConfig_resource_type (0.00s)
        --- PASS: Test/UnmarshalRouteConfig/badly_marshaled_routeconfig_resource (0.00s)
        --- PASS: Test/UnmarshalRouteConfig/empty_resource_list (0.00s)
        --- PASS: Test/UnmarshalRouteConfig/v2_routeConfig_resource (0.00s)
        --- PASS: Test/UnmarshalRouteConfig/v3_routeConfig_resource (0.00s)
        --- PASS: Test/UnmarshalRouteConfig/multiple_routeConfig_resources (0.00s)
        --- PASS: Test/UnmarshalRouteConfig/good_and_bad_routeConfig_resources (0.00s)
    --- PASS: Test/ValidateClusterWithSecurityConfig (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-name (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-typeURL (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-type (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/transport-socket-unsupported-validation-context (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/transport-socket-without-validation-context (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/empty-prefix-in-matching-SAN (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/empty-suffix-in-matching-SAN (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/empty-contains-in-matching-SAN (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/invalid-regex-in-matching-SAN (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/happy-case-with-no-identity-certs (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/happy-case-with-validation-context-provider-instance (0.00s)
        --- PASS: Test/ValidateClusterWithSecurityConfig/happy-case-with-combined-validation-context (0.00s)
    --- PASS: Test/ValidateClusterWithSecurityConfig_EnvVarOff (0.00s)
    --- PASS: Test/ValidateCluster_Failure (0.00s)
        --- PASS: Test/ValidateCluster_Failure/non-supported-cluster-type-static (0.00s)
        --- PASS: Test/ValidateCluster_Failure/non-supported-cluster-type-original-dst (0.00s)
        --- PASS: Test/ValidateCluster_Failure/no-eds-config (0.00s)
        --- PASS: Test/ValidateCluster_Failure/no-ads-config-source (0.00s)
        --- PASS: Test/ValidateCluster_Failure/non-round-robin-lb-policy (0.00s)
        --- PASS: Test/ValidateCluster_Failure/logical-dns-multiple-localities (0.00s)
    --- PASS: Test/ValidateCluster_Success (0.00s)
        --- PASS: Test/ValidateCluster_Success/happy-case-logical-dns (0.00s)
        --- PASS: Test/ValidateCluster_Success/happy-case-aggregate-v3 (0.00s)
        --- PASS: Test/ValidateCluster_Success/happy-case-no-service-name-no-lrs (0.00s)
        --- PASS: Test/ValidateCluster_Success/happy-case-no-lrs (0.00s)
        --- PASS: Test/ValidateCluster_Success/happiest-case (0.00s)
        --- PASS: Test/ValidateCluster_Success/happiest-case-with-circuitbreakers (0.00s)
    --- PASS: Test/WatchCallAnotherWatch (0.00s)
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_destination_port_field
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_server_names_field
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_transport_protocol_
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_application_protocol_field
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/bad_dest_address_prefix
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/bad_dest_prefix_length
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/bad_source_address_prefix
=== RUN   TestNewFilterChainImpl_Failure_BadMatchFields/bad_source_prefix_length
--- PASS: TestNewFilterChainImpl_Failure_BadMatchFields (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_destination_port_field (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_server_names_field (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_transport_protocol_ (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/unsupported_application_protocol_field (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/bad_dest_address_prefix (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/bad_dest_prefix_length (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/bad_source_address_prefix (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadMatchFields/bad_source_prefix_length (0.00s)
=== RUN   TestNewFilterChainImpl_Failure_OverlappingMatchingRules
=== RUN   TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_destination_prefixes_with_no_other_matchers
=== RUN   TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_source_type
=== RUN   TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_source_prefixes
=== RUN   TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_source_ports
--- PASS: TestNewFilterChainImpl_Failure_OverlappingMatchingRules (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_destination_prefixes_with_no_other_matchers (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_source_type (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_source_prefixes (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_OverlappingMatchingRules/matching_source_ports (0.00s)
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/no_filter_chains
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/unexpected_transport_socket_name
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/unexpected_transport_socket_URL
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/badly_marshaled_transport_socket
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/missing_CommonTlsContext
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/unsupported_validation_context_in_transport_socket
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/no_root_certificate_provider_with_require_client_cert
=== RUN   TestNewFilterChainImpl_Failure_BadSecurityConfig/no_identity_certificate_provider
--- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/no_filter_chains (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/unexpected_transport_socket_name (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/unexpected_transport_socket_URL (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/badly_marshaled_transport_socket (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/missing_CommonTlsContext (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/unsupported_validation_context_in_transport_socket (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/no_root_certificate_provider_with_require_client_cert (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadSecurityConfig/no_identity_certificate_provider (0.00s)
=== RUN   TestNewFilterChainImpl_Success_RouteUpdate
=== RUN   TestNewFilterChainImpl_Success_RouteUpdate/rds
=== RUN   TestNewFilterChainImpl_Success_RouteUpdate/inline_route_config
=== RUN   TestNewFilterChainImpl_Success_RouteUpdate/two_rds
--- PASS: TestNewFilterChainImpl_Success_RouteUpdate (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_RouteUpdate/rds (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_RouteUpdate/inline_route_config (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_RouteUpdate/two_rds (0.00s)
=== RUN   TestNewFilterChainImpl_Failure_BadRouteUpdate
=== RUN   TestNewFilterChainImpl_Failure_BadRouteUpdate/not-ads
=== RUN   TestNewFilterChainImpl_Failure_BadRouteUpdate/unsupported-route-specifier
--- PASS: TestNewFilterChainImpl_Failure_BadRouteUpdate (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadRouteUpdate/not-ads (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadRouteUpdate/unsupported-route-specifier (0.00s)
=== RUN   TestNewFilterChainImpl_Failure_BadHTTPFilters
=== RUN   TestNewFilterChainImpl_Failure_BadHTTPFilters/client_side_HTTP_filter
=== RUN   TestNewFilterChainImpl_Failure_BadHTTPFilters/one_valid_then_one_invalid_HTTP_filter
--- PASS: TestNewFilterChainImpl_Failure_BadHTTPFilters (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadHTTPFilters/client_side_HTTP_filter (0.00s)
    --- PASS: TestNewFilterChainImpl_Failure_BadHTTPFilters/one_valid_then_one_invalid_HTTP_filter (0.00s)
=== RUN   TestNewFilterChainImpl_Success_HTTPFilters
=== RUN   TestNewFilterChainImpl_Success_HTTPFilters/singular_valid_http_filter
=== RUN   TestNewFilterChainImpl_Success_HTTPFilters/two_valid_http_filters
=== RUN   TestNewFilterChainImpl_Success_HTTPFilters/two_hcms
--- PASS: TestNewFilterChainImpl_Success_HTTPFilters (0.01s)
    --- PASS: TestNewFilterChainImpl_Success_HTTPFilters/singular_valid_http_filter (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_HTTPFilters/two_valid_http_filters (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_HTTPFilters/two_hcms (0.00s)
=== RUN   TestNewFilterChainImpl_Success_SecurityConfig
=== RUN   TestNewFilterChainImpl_Success_SecurityConfig/empty_transport_socket
=== RUN   TestNewFilterChainImpl_Success_SecurityConfig/no_validation_context
=== RUN   TestNewFilterChainImpl_Success_SecurityConfig/validation_context_with_certificate_provider
--- PASS: TestNewFilterChainImpl_Success_SecurityConfig (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_SecurityConfig/empty_transport_socket (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_SecurityConfig/no_validation_context (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_SecurityConfig/validation_context_with_certificate_provider (0.00s)
=== RUN   TestNewFilterChainImpl_Success_UnsupportedMatchFields
=== RUN   TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_destination_port
=== RUN   TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_server_names
=== RUN   TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_transport_protocol
=== RUN   TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_application_protocol
--- PASS: TestNewFilterChainImpl_Success_UnsupportedMatchFields (0.01s)
    --- PASS: TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_destination_port (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_server_names (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_transport_protocol (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_UnsupportedMatchFields/unsupported_application_protocol (0.00s)
=== RUN   TestNewFilterChainImpl_Success_AllCombinations
=== RUN   TestNewFilterChainImpl_Success_AllCombinations/multiple_destination_prefixes
=== RUN   TestNewFilterChainImpl_Success_AllCombinations/multiple_source_types
=== RUN   TestNewFilterChainImpl_Success_AllCombinations/multiple_source_prefixes
=== RUN   TestNewFilterChainImpl_Success_AllCombinations/multiple_source_ports
=== RUN   TestNewFilterChainImpl_Success_AllCombinations/some_chains_have_unsupported_fields
--- PASS: TestNewFilterChainImpl_Success_AllCombinations (0.02s)
    --- PASS: TestNewFilterChainImpl_Success_AllCombinations/multiple_destination_prefixes (0.01s)
    --- PASS: TestNewFilterChainImpl_Success_AllCombinations/multiple_source_types (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_AllCombinations/multiple_source_prefixes (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_AllCombinations/multiple_source_ports (0.00s)
    --- PASS: TestNewFilterChainImpl_Success_AllCombinations/some_chains_have_unsupported_fields (0.00s)
=== RUN   TestLookup_Failures
=== RUN   TestLookup_Failures/no_destination_prefix_match
=== RUN   TestLookup_Failures/no_source_type_match
=== RUN   TestLookup_Failures/no_source_prefix_match
=== RUN   TestLookup_Failures/multiple_matching_filter_chains
=== RUN   TestLookup_Failures/no_default_filter_chain
=== RUN   TestLookup_Failures/most_specific_match_dropped_for_unsupported_field
--- PASS: TestLookup_Failures (0.00s)
    --- PASS: TestLookup_Failures/no_destination_prefix_match (0.00s)
    --- PASS: TestLookup_Failures/no_source_type_match (0.00s)
    --- PASS: TestLookup_Failures/no_source_prefix_match (0.00s)
    --- PASS: TestLookup_Failures/multiple_matching_filter_chains (0.00s)
    --- PASS: TestLookup_Failures/no_default_filter_chain (0.00s)
    --- PASS: TestLookup_Failures/most_specific_match_dropped_for_unsupported_field (0.00s)
=== RUN   TestLookup_Successes
=== RUN   TestLookup_Successes/default_filter_chain
=== RUN   TestLookup_Successes/unspecified_destination_match
=== RUN   TestLookup_Successes/wildcard_destination_match_v4
=== RUN   TestLookup_Successes/wildcard_source_match_v6
=== RUN   TestLookup_Successes/specific_destination_and_wildcard_source_type_match
=== RUN   TestLookup_Successes/specific_destination_and_source_type_match
=== RUN   TestLookup_Successes/specific_destination_source_type_and_source_prefix
=== RUN   TestLookup_Successes/specific_destination_source_type_source_prefix_and_source_port
--- PASS: TestLookup_Successes (0.00s)
    --- PASS: TestLookup_Successes/default_filter_chain (0.00s)
    --- PASS: TestLookup_Successes/unspecified_destination_match (0.00s)
    --- PASS: TestLookup_Successes/wildcard_destination_match_v4 (0.00s)
    --- PASS: TestLookup_Successes/wildcard_source_match_v6 (0.00s)
    --- PASS: TestLookup_Successes/specific_destination_and_wildcard_source_type_match (0.00s)
    --- PASS: TestLookup_Successes/specific_destination_and_source_type_match (0.00s)
    --- PASS: TestLookup_Successes/specific_destination_source_type_and_source_prefix (0.00s)
    --- PASS: TestLookup_Successes/specific_destination_source_type_source_prefix_and_source_port (0.00s)
=== RUN   TestHTTPFilterInstantiation
=== RUN   TestHTTPFilterInstantiation/one_http_filter_no_overrides
=== RUN   TestHTTPFilterInstantiation/one_http_filter_vh_override
=== RUN   TestHTTPFilterInstantiation/one_http_filter_route_override
=== RUN   TestHTTPFilterInstantiation/three_http_filters_vh_override_route_override
=== RUN   TestHTTPFilterInstantiation/three_http_filters_two_vh
--- PASS: TestHTTPFilterInstantiation (0.00s)
    --- PASS: TestHTTPFilterInstantiation/one_http_filter_no_overrides (0.00s)
    --- PASS: TestHTTPFilterInstantiation/one_http_filter_vh_override (0.00s)
    --- PASS: TestHTTPFilterInstantiation/one_http_filter_route_override (0.00s)
    --- PASS: TestHTTPFilterInstantiation/three_http_filters_vh_override_route_override (0.00s)
    --- PASS: TestHTTPFilterInstantiation/three_http_filters_two_vh (0.00s)
=== RUN   TestPathFullMatcherMatch
=== RUN   TestPathFullMatcherMatch/match
=== RUN   TestPathFullMatcherMatch/case_insensitive_match
=== RUN   TestPathFullMatcherMatch/case_insensitive_match_2
=== RUN   TestPathFullMatcherMatch/not_match
=== RUN   TestPathFullMatcherMatch/case_insensitive_not_match
--- PASS: TestPathFullMatcherMatch (0.00s)
    --- PASS: TestPathFullMatcherMatch/match (0.00s)
    --- PASS: TestPathFullMatcherMatch/case_insensitive_match (0.00s)
    --- PASS: TestPathFullMatcherMatch/case_insensitive_match_2 (0.00s)
    --- PASS: TestPathFullMatcherMatch/not_match (0.00s)
    --- PASS: TestPathFullMatcherMatch/case_insensitive_not_match (0.00s)
=== RUN   TestPathPrefixMatcherMatch
=== RUN   TestPathPrefixMatcherMatch/match
=== RUN   TestPathPrefixMatcherMatch/case_insensitive_match
=== RUN   TestPathPrefixMatcherMatch/case_insensitive_match_2
=== RUN   TestPathPrefixMatcherMatch/not_match
=== RUN   TestPathPrefixMatcherMatch/case_insensitive_not_match
--- PASS: TestPathPrefixMatcherMatch (0.00s)
    --- PASS: TestPathPrefixMatcherMatch/match (0.00s)
    --- PASS: TestPathPrefixMatcherMatch/case_insensitive_match (0.00s)
    --- PASS: TestPathPrefixMatcherMatch/case_insensitive_match_2 (0.00s)
    --- PASS: TestPathPrefixMatcherMatch/not_match (0.00s)
    --- PASS: TestPathPrefixMatcherMatch/case_insensitive_not_match (0.00s)
=== RUN   TestPathRegexMatcherMatch
=== RUN   TestPathRegexMatcherMatch/match
=== RUN   TestPathRegexMatcherMatch/not_match
--- PASS: TestPathRegexMatcherMatch (0.00s)
    --- PASS: TestPathRegexMatcherMatch/match (0.00s)
    --- PASS: TestPathRegexMatcherMatch/not_match (0.00s)
=== RUN   TestAndMatcherMatch
=== RUN   TestAndMatcherMatch/both_match
=== RUN   TestAndMatcherMatch/both_match_with_path_case_insensitive
=== RUN   TestAndMatcherMatch/only_one_match
=== RUN   TestAndMatcherMatch/both_not_match
=== RUN   TestAndMatcherMatch/fake_header
=== RUN   TestAndMatcherMatch/binary_header
--- PASS: TestAndMatcherMatch (0.00s)
    --- PASS: TestAndMatcherMatch/both_match (0.00s)
    --- PASS: TestAndMatcherMatch/both_match_with_path_case_insensitive (0.00s)
    --- PASS: TestAndMatcherMatch/only_one_match (0.00s)
    --- PASS: TestAndMatcherMatch/both_not_match (0.00s)
    --- PASS: TestAndMatcherMatch/fake_header (0.00s)
    --- PASS: TestAndMatcherMatch/binary_header (0.00s)
=== RUN   TestFractionMatcherMatch
--- PASS: TestFractionMatcherMatch (0.00s)
=== RUN   Test
=== RUN   Test/CDSConfigDump
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+37.281µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+51.715µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+78.81µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+89.409µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+98.188µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000544f00] Created ClientConn to xDS management server: xds-server  (t=+118.943µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000544f00] Created  (t=+133.36µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+139.969µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+157.926µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+181.336µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+192.536µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+208.349µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+219.348µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.003632ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.019977ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000544f00] Shutdown  (t=+1.031708ms)
    tlogger.go:99: transport_helper.go:205 [xds] [xds-client 0xc000544f00] xds: ADS stream creation failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+1.037338ms)
=== RUN   Test/EDSConfigDump
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+161.432µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+176.151µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+199.218µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+208.738µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+217.238µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000545f00] Created ClientConn to xDS management server: xds-server  (t=+233.287µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000545f00] Created  (t=+243.552µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+246.733µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+259.688µs)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+278.3µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+284.787µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+283.544µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+313.142µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+325.501µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.949626ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.966449ms)
    tlogger.go:99: transport_helper.go:205 [xds] [xds-client 0xc000545f00] xds: ADS stream creation failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+1.976023ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000545f00] Shutdown  (t=+1.978527ms)
=== RUN   Test/LDSConfigDump
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+67.389µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+96.86µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+134.683µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+158.444µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+179.031µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000b02000] Created ClientConn to xDS management server: xds-server  (t=+209.797µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000b02000] Created  (t=+226.788µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+320.019µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+354.79µs)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+376.25µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+440.355µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+439.009µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+592.369µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+619.705µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.665011ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.703114ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000b02000] Shutdown  (t=+1.71414ms)
    tlogger.go:99: transport_helper.go:205 [xds] [xds-client 0xc000b02000] xds: ADS stream creation failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+1.72397ms)
=== RUN   Test/LRSClient
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+1.41252ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+1.428142ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62751  <nil> 0 <nil>}] <nil> <nil>}  (t=+1.441113ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+1.452223ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+1.471614ms)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000152e00] Created ClientConn to xDS management server: 127.0.0.1:62751  (t=+1.488685ms)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000152e00] Created  (t=+1.501406ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.506646ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62751" to connect  (t=+1.523398ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+1.537097ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.5492ms)
    tlogger.go:99: syscall_nonlinux.go:38 [core] CPU time info is unavailable on non-linux or appengine environment.  (t=+1.698763ms)
    tlogger.go:99: loadreport.go:117 [xds] [xds-client 0xc000152e00] Starting load report to server: 127.0.0.1:62751  (t=+1.724466ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.792664ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.806462ms)
    tlogger.go:99: transport_helper.go:208 [xds] [xds-client 0xc000152e00] ADS stream created  (t=+1.839162ms)
    tlogger.go:99: transport_helper.go:477 [xds] lrs: created LRS stream  (t=+1.850466ms)
    tlogger.go:99: loadreport.go:61 [xds] [xds-client 0xc000152e00] lrs: sending init LoadStatsRequest: {
          "node": {
            "clientFeatures": [
              "envoy.lrs.supports_send_all_clusters"
            ]
          }
        }  (t=+2.061786ms)
    tlogger.go:99: loadreport.go:117 [xds] [xds-client 0xc000152e00] Starting load report to server: 127.0.0.1:62753  (t=+12.227124ms)
    tlogger.go:99: loadreport.go:122 [xds] [xds-client 0xc000152e00] LRS server is different from management server, starting a new ClientConn  (t=+12.245825ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+12.260992ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+12.274327ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62753  <nil> 0 <nil>}] <nil> <nil>}  (t=+12.288962ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+12.300884ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+12.310905ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+12.34603ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62753" to connect  (t=+12.366129ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+12.378214ms)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+12.409621ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+12.632037ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+12.655838ms)
    tlogger.go:99: transport_helper.go:477 [xds] lrs: created LRS stream  (t=+12.679114ms)
    tlogger.go:99: loadreport.go:61 [xds] [xds-client 0xc000152e00] lrs: sending init LoadStatsRequest: {
          "node": {
            "clientFeatures": [
              "envoy.lrs.supports_send_all_clusters"
            ]
          }
        }  (t=+12.716317ms)
    tlogger.go:99: loadreport.go:75 [xds] [xds-client 0xc000152e00] lrs: received first LoadStatsResponse: {
          "sendAllClusters": true,
          "loadReportingInterval": "0.050s"
        }  (t=+12.906595ms)
    tlogger.go:99: loadreport.go:151 [xds] [xds-client 0xc000152e00] lrs: sending LRS loads: {
          "clusterStats": [
            {
              "clusterName": "cluster",
              "clusterServiceName": "eds",
              "totalDroppedRequests": "1",
              "droppedRequests": [
                {
                  "category": "test",
                  "droppedCount": "1"
                }
              ],
              "loadReportInterval": "9223372036.854775807s"
            }
          ]
        }  (t=+63.0829ms)
    tlogger.go:99: loadreport.go:104 [xds] [xds-client 0xc000152e00] Stopping load report to server: 127.0.0.1:62753  (t=+63.273381ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+63.290925ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+63.307913ms)
    tlogger.go:99: loadreport.go:104 [xds] [xds-client 0xc000152e00] Stopping load report to server: 127.0.0.1:62751  (t=+63.385336ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+63.409702ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+63.426241ms)
    tlogger.go:99: transport_helper.go:486 [xds] lrs: failed to receive first response: rpc error: code = Canceled desc = context canceled  (t=+63.428147ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000152e00] Shutdown  (t=+63.440615ms)
    tlogger.go:99: transport_helper.go:315 [xds] [xds-client 0xc000152e00] ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+63.4578ms)
=== RUN   Test/New
=== RUN   Test/New/empty-opts
=== RUN   Test/New/empty-balancer-name
=== RUN   Test/New/empty-dial-creds
=== RUN   Test/New/empty-node-proto
=== RUN   Test/New/node-proto-version-mismatch
=== RUN   Test/New/happy-case
=== CONT  Test/New
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+107.698µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+123.148µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+137.338µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+147.837µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+157.203µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000c60100] Created ClientConn to xDS management server: xds-server  (t=+182.004µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000c60100] Created  (t=+195.599µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+198.29µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+205.487µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+228.187µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+230.832µs)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000c60100] Shutdown  (t=+238.781µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+276.279µs)
=== RUN   Test/RDSConfigDump
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+49.706µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+72.638µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{xds-server  <nil> 0 <nil>}] <nil> <nil>}  (t=+119.854µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+148.1µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+189.027µs)
    tlogger.go:99: client.go:610 [xds] [xds-client 0xc000c60300] Created ClientConn to xDS management server: xds-server  (t=+226.158µs)
    tlogger.go:99: client.go:622 [xds] [xds-client 0xc000c60300] Created  (t=+247.935µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+523.723µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "xds-server" to connect  (t=+582.896µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+591.325µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {xds-server xds-server <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address xds-server: missing port in address"  (t=+656.289µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+690.434µs)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+666.098µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+719.551µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.330079ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.350615ms)
    tlogger.go:99: client.go:664 [xds] [xds-client 0xc000c60300] Shutdown  (t=+2.362681ms)
    tlogger.go:99: transport_helper.go:205 [xds] [xds-client 0xc000c60300] xds: ADS stream creation failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+2.379384ms)
--- PASS: Test (0.07s)
    --- PASS: Test/CDSConfigDump (0.00s)
    --- PASS: Test/EDSConfigDump (0.00s)
    --- PASS: Test/LDSConfigDump (0.00s)
    --- PASS: Test/LRSClient (0.06s)
    --- PASS: Test/New (0.00s)
        --- PASS: Test/New/empty-opts (0.00s)
        --- PASS: Test/New/empty-balancer-name (0.00s)
        --- PASS: Test/New/empty-dial-creds (0.00s)
        --- PASS: Test/New/empty-node-proto (0.00s)
        --- PASS: Test/New/node-proto-version-mismatch (0.00s)
        --- PASS: Test/New/happy-case (0.00s)
    --- PASS: Test/RDSConfigDump (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/xdsclient	(cached)
=== RUN   TestNewConfigV2ProtoFailure
=== RUN   TestNewConfigV2ProtoFailure/nonExistentBootstrapFile
=== RUN   TestNewConfigV2ProtoFailure/empty
=== RUN   TestNewConfigV2ProtoFailure/badJSON
=== RUN   TestNewConfigV2ProtoFailure/noBalancerName
=== RUN   TestNewConfigV2ProtoFailure/emptyXdsServer
--- PASS: TestNewConfigV2ProtoFailure (0.00s)
    --- PASS: TestNewConfigV2ProtoFailure/nonExistentBootstrapFile (0.00s)
    --- PASS: TestNewConfigV2ProtoFailure/empty (0.00s)
    --- PASS: TestNewConfigV2ProtoFailure/badJSON (0.00s)
    --- PASS: TestNewConfigV2ProtoFailure/noBalancerName (0.00s)
    --- PASS: TestNewConfigV2ProtoFailure/emptyXdsServer (0.00s)
=== RUN   TestNewConfigV2ProtoSuccess
=== RUN   TestNewConfigV2ProtoSuccess/emptyNodeProto
=== RUN   TestNewConfigV2ProtoSuccess/unknownTopLevelFieldInFile
=== RUN   TestNewConfigV2ProtoSuccess/unknownFieldInNodeProto
=== RUN   TestNewConfigV2ProtoSuccess/unknownFieldInXdsServer
=== RUN   TestNewConfigV2ProtoSuccess/multipleChannelCreds
=== RUN   TestNewConfigV2ProtoSuccess/goodBootstrap
=== RUN   TestNewConfigV2ProtoSuccess/multipleXDSServers
--- PASS: TestNewConfigV2ProtoSuccess (0.01s)
    --- PASS: TestNewConfigV2ProtoSuccess/emptyNodeProto (0.00s)
    --- PASS: TestNewConfigV2ProtoSuccess/unknownTopLevelFieldInFile (0.00s)
    --- PASS: TestNewConfigV2ProtoSuccess/unknownFieldInNodeProto (0.00s)
    --- PASS: TestNewConfigV2ProtoSuccess/unknownFieldInXdsServer (0.00s)
    --- PASS: TestNewConfigV2ProtoSuccess/multipleChannelCreds (0.01s)
    --- PASS: TestNewConfigV2ProtoSuccess/goodBootstrap (0.00s)
    --- PASS: TestNewConfigV2ProtoSuccess/multipleXDSServers (0.00s)
=== RUN   TestNewConfigV3Support
=== RUN   TestNewConfigV3Support/serverDoesNotSupportsV3
=== RUN   TestNewConfigV3Support/serverSupportsV3
--- PASS: TestNewConfigV3Support (0.00s)
    --- PASS: TestNewConfigV3Support/serverDoesNotSupportsV3 (0.00s)
    --- PASS: TestNewConfigV3Support/serverSupportsV3 (0.00s)
=== RUN   TestNewConfigBootstrapEnvPriority
--- PASS: TestNewConfigBootstrapEnvPriority (0.00s)
=== RUN   TestNewConfigWithCertificateProviders
=== RUN   TestNewConfigWithCertificateProviders/badJSONCertProviderConfig
=== RUN   TestNewConfigWithCertificateProviders/badCertProviderConfig
=== RUN   TestNewConfigWithCertificateProviders/allUnknownCertProviders
=== RUN   TestNewConfigWithCertificateProviders/goodCertProviderConfig
--- PASS: TestNewConfigWithCertificateProviders (0.00s)
    --- PASS: TestNewConfigWithCertificateProviders/badJSONCertProviderConfig (0.00s)
    --- PASS: TestNewConfigWithCertificateProviders/badCertProviderConfig (0.00s)
    --- PASS: TestNewConfigWithCertificateProviders/allUnknownCertProviders (0.00s)
    --- PASS: TestNewConfigWithCertificateProviders/goodCertProviderConfig (0.00s)
=== RUN   TestNewConfigWithServerListenerResourceNameTemplate
=== RUN   TestNewConfigWithServerListenerResourceNameTemplate/badServerListenerResourceNameTemplate
=== RUN   TestNewConfigWithServerListenerResourceNameTemplate/goodServerListenerResourceNameTemplate
--- PASS: TestNewConfigWithServerListenerResourceNameTemplate (0.00s)
    --- PASS: TestNewConfigWithServerListenerResourceNameTemplate/badServerListenerResourceNameTemplate (0.00s)
    --- PASS: TestNewConfigWithServerListenerResourceNameTemplate/goodServerListenerResourceNameTemplate (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/xdsclient/bootstrap	(cached)
=== RUN   TestDrops
--- PASS: TestDrops (0.00s)
=== RUN   TestLocalityStats
--- PASS: TestLocalityStats (0.00s)
=== RUN   TestResetAfterStats
--- PASS: TestResetAfterStats (0.00s)
=== RUN   TestStoreStats
--- PASS: TestStoreStats (0.00s)
=== RUN   TestStoreStatsEmptyDataNotReported
--- PASS: TestStoreStatsEmptyDataNotReported (0.00s)
PASS
ok  	google.golang.org/grpc/xds/internal/xdsclient/load	(cached)
=== RUN   Test
=== RUN   Test/CDSHandleResponse
=== RUN   Test/CDSHandleResponse/badly-marshaled-response
=== CONT  Test/CDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+1.392998ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+1.435652ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62027  <nil> 0 <nil>}] <nil> <nil>}  (t=+1.49616ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+1.51211ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+1.521293ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.553174ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62027" to connect  (t=+1.590697ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.628955ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.993877ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+2.037929ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+2.194546ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+4.577872ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+4.601785ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+4.637576ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+4.648045ms)
=== RUN   Test/CDSHandleResponse/no-cluster-proto-in-response
=== CONT  Test/CDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+5.216988ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+5.237461ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62029  <nil> 0 <nil>}] <nil> <nil>}  (t=+5.252746ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+5.269925ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+5.290618ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+5.317269ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62029" to connect  (t=+5.329921ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+5.347312ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+5.584932ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+5.614312ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+5.663853ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+5.920326ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+5.935582ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+5.97958ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+5.977453ms)
=== RUN   Test/CDSHandleResponse/no-cluster
=== CONT  Test/CDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+6.390912ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+6.412628ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62031  <nil> 0 <nil>}] <nil> <nil>}  (t=+6.430103ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+6.439859ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+6.457702ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+6.477696ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62031" to connect  (t=+6.490295ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+6.512846ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+6.708256ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+6.746648ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+6.783002ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+6.97574ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+6.991068ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+7.021423ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+7.030312ms)
=== RUN   Test/CDSHandleResponse/one-uninteresting-cluster
=== CONT  Test/CDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+7.440997ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+7.457258ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62033  <nil> 0 <nil>}] <nil> <nil>}  (t=+7.474261ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+7.493322ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+7.510937ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+7.530092ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62033" to connect  (t=+7.544263ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+7.56596ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+7.731964ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+7.751521ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+7.792553ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName2, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName2",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "bar-service"
          }
        }  (t=+8.190907ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+9.012843ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+9.030233ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+9.060387ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+9.072112ms)
=== RUN   Test/CDSHandleResponse/one-good-cluster
=== CONT  Test/CDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+9.495302ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+9.510031ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62035  <nil> 0 <nil>}] <nil> <nil>}  (t=+9.525928ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+9.54185ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+9.561233ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+9.581485ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62035" to connect  (t=+9.59262ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+9.608882ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+9.820845ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+9.840069ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+9.88207ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+10.044102ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+10.295432ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+10.314313ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+10.341529ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+10.360368ms)
=== RUN   Test/CDSHandleResponseWithoutWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+401.808µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+421.657µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62037  <nil> 0 <nil>}] <nil> <nil>}  (t=+433.936µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+443.592µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+452.079µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+471.859µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62037" to connect  (t=+482.787µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+510.131µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+675.4µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+694.928µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+749.786µs)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+791.111µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+838.589µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+856.338µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+897.444µs)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.358719ms)
=== RUN   Test/EDSHandleResponse
=== RUN   Test/EDSHandleResponse/badly-marshaled_response
=== CONT  Test/EDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+561.74µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+580.564µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62039  <nil> 0 <nil>}] <nil> <nil>}  (t=+597.264µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+611.166µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+635.69µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+659.598µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62039" to connect  (t=+672.96µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+692.523µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+936.817µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+956.668µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.009039ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.323814ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.343153ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.370655ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.394611ms)
=== RUN   Test/EDSHandleResponse/no-config-in-response
=== CONT  Test/EDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+1.792052ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+1.81074ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62041  <nil> 0 <nil>}] <nil> <nil>}  (t=+1.82744ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+1.836763ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+1.853908ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.873682ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62041" to connect  (t=+1.884371ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.897989ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+2.09401ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+2.115074ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+2.151769ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.350568ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+2.367124ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.392237ms)
=== RUN   Test/EDSHandleResponse/one-uninterestring-assignment
=== CONT  Test/EDSHandleResponse
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+2.414874ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+2.800399ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+2.814619ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62043  <nil> 0 <nil>}] <nil> <nil>}  (t=+2.826447ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+2.83567ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+2.853375ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+2.877201ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62043" to connect  (t=+2.888101ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+2.904629ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+3.097922ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+3.116784ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+3.151827ms)
    tlogger.go:99: xds.go:796 Resource with name: not-goodEDSName, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "not-goodEDSName",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+3.49845ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+4.034858ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+4.05107ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+4.078167ms)
=== RUN   Test/EDSHandleResponse/one-good-assignment
=== CONT  Test/EDSHandleResponse
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+4.090317ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+4.47869ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+4.496165ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62045  <nil> 0 <nil>}] <nil> <nil>}  (t=+4.511939ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+4.522495ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+4.54119ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+4.57617ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+4.603302ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62045" to connect  (t=+4.601749ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+4.855436ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+4.886052ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+4.921188ms)
    tlogger.go:99: xds.go:796 Resource with name: GoodClusterAssignment1, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "GoodClusterAssignment1",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+5.069684ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+5.858417ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+5.877943ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+5.912032ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+5.923469ms)
=== RUN   Test/EDSHandleResponseWithoutWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+661.937µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+679.049µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62047  <nil> 0 <nil>}] <nil> <nil>}  (t=+693.545µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+704.067µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+714.692µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+735.502µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62047" to connect  (t=+748.155µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+763.577µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+951.202µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+970.686µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.027837ms)
    tlogger.go:99: xds.go:796 Resource with name: GoodClusterAssignment1, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "GoodClusterAssignment1",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+1.065097ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.114003ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.131362ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.158996ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.170003ms)
=== RUN   Test/LDSHandleResponse
=== RUN   Test/LDSHandleResponse/badly-marshaled-response
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+398.953µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+414.218µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62049  <nil> 0 <nil>}] <nil> <nil>}  (t=+425.942µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+433.906µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+451.842µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+471.281µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62049" to connect  (t=+482.171µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+495.993µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+681.266µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+703.778µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+740.396µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.454045ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.474143ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.496569ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.506886ms)
=== RUN   Test/LDSHandleResponse/no-listener-proto-in-response
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+1.894405ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+1.912438ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62051  <nil> 0 <nil>}] <nil> <nil>}  (t=+1.929955ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+1.939431ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+1.960221ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.994018ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62051" to connect  (t=+2.005879ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+2.014731ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+2.216787ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+2.23764ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+2.275023ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.480071ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+2.497165ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.519848ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+2.538812ms)
=== RUN   Test/LDSHandleResponse/no-apiListener-in-response
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+2.937049ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+2.952398ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62053  <nil> 0 <nil>}] <nil> <nil>}  (t=+2.96616ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+2.975043ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+2.992646ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+3.013468ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62053" to connect  (t=+3.025427ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+3.046839ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+3.274887ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+3.294092ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+3.332775ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111"
        }  (t=+3.472113ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+3.646131ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+3.660728ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+3.690313ms)
=== RUN   Test/LDSHandleResponse/one-good-listener
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+3.710303ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+4.089397ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+4.106819ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62055  <nil> 0 <nil>}] <nil> <nil>}  (t=+4.122159ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+4.13155ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+4.149335ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+4.170282ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62055" to connect  (t=+4.179399ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+4.21878ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+4.397427ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+4.413549ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+4.442325ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+4.636058ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+5.625746ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+5.656075ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+5.69479ms)
=== RUN   Test/LDSHandleResponse/multiple-good-listener
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+5.700519ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+6.114808ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+6.1349ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62057  <nil> 0 <nil>}] <nil> <nil>}  (t=+6.151172ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+6.160084ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+6.177942ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+6.201121ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62057" to connect  (t=+6.212213ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+6.220387ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+7.002341ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+7.053723ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+7.281079ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:2222",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+7.456923ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+7.503503ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+7.991589ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+8.010507ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+8.03294ms)
=== RUN   Test/LDSHandleResponse/good-bad-ugly-listeners
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+8.053243ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+8.500167ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+8.516323ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62059  <nil> 0 <nil>}] <nil> <nil>}  (t=+8.530181ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+8.54123ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+8.560601ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+8.579878ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62059" to connect  (t=+8.591103ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+8.604639ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+8.78203ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+8.796863ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+8.834448ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:2222",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+8.976772ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+9.028018ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: name:"lds.target.good:2222"  api_listener:{api_listener:{type_url:"type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager"  value:"\x01\x02\x03\x04"}}  (t=+9.067435ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+9.475617ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+9.495697ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+9.527225ms)
=== RUN   Test/LDSHandleResponse/one-uninteresting-listener
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+9.549497ms)
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+9.928976ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+9.944066ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62061  <nil> 0 <nil>}] <nil> <nil>}  (t=+9.9614ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+9.974145ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+9.993337ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+10.012514ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62061" to connect  (t=+10.023476ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+10.035539ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+10.21963ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+10.242904ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+10.276042ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:2222, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:2222",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+10.421454ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+10.799824ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+10.815502ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+10.83735ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+10.849049ms)
=== RUN   Test/LDSHandleResponse/empty-response
=== CONT  Test/LDSHandleResponse
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+11.249881ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+11.268198ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62063  <nil> 0 <nil>}] <nil> <nil>}  (t=+11.281383ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+11.291383ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+11.310537ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+11.331646ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62063" to connect  (t=+11.34335ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+11.354105ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+11.542525ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+11.561255ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+11.596612ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+11.763879ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+11.780547ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+11.813901ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+11.816371ms)
=== RUN   Test/LDSHandleResponseWithoutWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+344.894µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+366.638µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62065  <nil> 0 <nil>}] <nil> <nil>}  (t=+380.922µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+392.794µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+401.298µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+421.585µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62065" to connect  (t=+432.242µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+444.817µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+628.904µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+646.623µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+689.405µs)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+713.298µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+763.907µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+776.295µs)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+806.349µs)
=== RUN   Test/RDSHandleResponseWithRouting
=== RUN   Test/RDSHandleResponseWithRouting/badly-marshaled-response
=== CONT  Test/RDSHandleResponseWithRouting
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+922.734µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+941.485µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62067  <nil> 0 <nil>}] <nil> <nil>}  (t=+955.745µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+965.664µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+986.863µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.007669ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62067" to connect  (t=+1.017306ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.031545ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.249259ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.265427ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.302212ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.584005ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.607965ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.630981ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.646749ms)
=== RUN   Test/RDSHandleResponseWithRouting/no-route-config-in-response
=== CONT  Test/RDSHandleResponseWithRouting
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+2.051195ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+2.067567ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62069  <nil> 0 <nil>}] <nil> <nil>}  (t=+2.083575ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+2.097353ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+2.116352ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+2.136274ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62069" to connect  (t=+2.149014ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+2.164377ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+2.337464ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+2.351787ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+2.383149ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.610708ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+2.627991ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.657066ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+2.669106ms)
=== RUN   Test/RDSHandleResponseWithRouting/no-virtual-hosts-in-response
=== CONT  Test/RDSHandleResponseWithRouting
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+3.054176ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+3.074522ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62071  <nil> 0 <nil>}] <nil> <nil>}  (t=+3.089228ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+3.0982ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+3.115305ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+3.134575ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62071" to connect  (t=+3.145913ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+3.15817ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+3.339664ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+3.35789ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+3.387251ms)
    tlogger.go:99: xds.go:298 Resource with name: GoodRouteConfig1, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "GoodRouteConfig1"
        }.  (t=+3.507504ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+3.702917ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+3.718917ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+3.749122ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+3.765366ms)
=== RUN   Test/RDSHandleResponseWithRouting/one-uninteresting-route-config
=== CONT  Test/RDSHandleResponseWithRouting
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+4.126383ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+4.144056ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62073  <nil> 0 <nil>}] <nil> <nil>}  (t=+4.159268ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+4.168518ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+4.185061ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+4.203387ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62073" to connect  (t=+4.214293ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+4.227893ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+4.393282ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+4.413978ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+4.448093ms)
    tlogger.go:99: xds.go:298 Resource with name: GoodRouteConfig2, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "GoodRouteConfig2",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "UninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "GoodClusterName2"
                  }
                }
              ]
            }
          ]
        }.  (t=+4.936494ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+5.82093ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+5.83717ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+5.861842ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+5.877406ms)
=== RUN   Test/RDSHandleResponseWithRouting/one-good-route-config
=== CONT  Test/RDSHandleResponseWithRouting
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+6.257735ms)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+6.294251ms)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62075  <nil> 0 <nil>}] <nil> <nil>}  (t=+6.311894ms)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+6.322371ms)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+6.340918ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+6.361794ms)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62075" to connect  (t=+6.372982ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+6.385343ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+6.557229ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+6.57293ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+6.606439ms)
    tlogger.go:99: xds.go:298 Resource with name: GoodRouteConfig1, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "GoodRouteConfig1",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "UninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "GoodClusterName1"
                  }
                }
              ]
            }
          ]
        }.  (t=+6.758576ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+7.554029ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+7.569324ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+7.588224ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+7.60263ms)
=== RUN   Test/RDSHandleResponseWithoutRDSWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+408.182µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+424.885µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62077  <nil> 0 <nil>}] <nil> <nil>}  (t=+437.877µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+448.528µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+457.263µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+476.969µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62077" to connect  (t=+488.775µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+502.645µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+698.235µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+717.226µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+752.159µs)
    tlogger.go:99: xds.go:298 Resource with name: GoodRouteConfig1, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "GoodRouteConfig1",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "UninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "GoodClusterName1"
                  }
                }
              ]
            }
          ]
        }.  (t=+939.288µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+994.357µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.012363ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+1.060833ms)
=== RUN   Test/V2ClientAck
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+855.819µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+875.394µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62079  <nil> 0 <nil>}] <nil> <nil>}  (t=+891.201µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+901.768µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+910.36µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+942.198µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62079" to connect  (t=+961.036µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+982.425µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.222502ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.245662ms)
    ack_test.go:77: Started xds client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.319508ms)
    ack_test.go:139: FakeServer received ListenerResource request...
    ack_test.go:149: Good ListenerResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.674483ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+1.825459ms)
    ack_test.go:53: Received ListenerResource callback with {map[lds.target.good:1111:{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: 1000, nonce: 1629140087339405000  (t=+1.893325ms)
    ack_test.go:154: Good ListenerResource response acked
    ack_test.go:159: Good ListenerResource response callback executed
    ack_test.go:139: FakeServer received RouteConfigResource request...
    ack_test.go:149: Good RouteConfigResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.RouteConfiguration  (t=+2.20624ms)
    tlogger.go:99: xds.go:298 Resource with name: GoodRouteConfig1, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "GoodRouteConfig1",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "UninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "GoodClusterName1"
                  }
                }
              ]
            }
          ]
        }.  (t=+2.367302ms)
    ack_test.go:53: Received RouteConfigResource callback with {map[GoodRouteConfig1:{VirtualHosts:[0xc000657100 0xc000657140] Raw:[type.googleapis.com/envoy.api.v2.RouteConfiguration]:{name:"GoodRouteConfig1"  virtual_hosts:{domains:"uninteresting.domain"  routes:{match:{prefix:""}  route:{cluster:"UninterestingClusterName"}}}  virtual_hosts:{domains:"lds.target.good:1111"  routes:{match:{prefix:""}  route:{cluster:"GoodClusterName1"}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: RouteConfigResource, version: 2000, nonce: 1629140087339964000  (t=+2.435705ms)
    ack_test.go:154: Good RouteConfigResource response acked
    ack_test.go:159: Good RouteConfigResource response callback executed
    ack_test.go:139: FakeServer received ClusterResource request...
    ack_test.go:149: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+2.732228ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+2.842587ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3000, nonce: 1629140087340489000  (t=+2.900262ms)
    ack_test.go:154: Good ClusterResource response acked
    ack_test.go:159: Good ClusterResource response callback executed
    ack_test.go:139: FakeServer received EndpointsResource request...
    ack_test.go:149: Good EndpointsResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.ClusterLoadAssignment  (t=+3.241022ms)
    tlogger.go:99: xds.go:796 Resource with name: GoodClusterAssignment1, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "GoodClusterAssignment1",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+3.407838ms)
    ack_test.go:53: Received EndpointsResource callback with {map[GoodClusterAssignment1:{Drops:[] Localities:[{Endpoints:[{Address:addr1:314 HealthStatus:0 Weight:0}] ID:{Region: Zone: SubZone:locality-1} Priority:1 Weight:1} {Endpoints:[{Address:addr2:159 HealthStatus:0 Weight:0}] ID:{Region: Zone: SubZone:locality-2} Priority:0 Weight:1}] Raw:[type.googleapis.com/envoy.api.v2.ClusterLoadAssignment]:{cluster_name:"GoodClusterAssignment1"  endpoints:{locality:{sub_zone:"locality-1"}  lb_endpoints:{endpoint:{address:{socket_address:{address:"addr1"  port_value:314}}}}  load_balancing_weight:{value:1}  priority:1}  endpoints:{locality:{sub_zone:"locality-2"}  lb_endpoints:{endpoint:{address:{socket_address:{address:"addr2"  port_value:159}}}}  load_balancing_weight:{value:1}}  policy:{}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: EndpointsResource, version: 4000, nonce: 1629140087341000000  (t=+3.491639ms)
    ack_test.go:154: Good EndpointsResource response acked
    ack_test.go:159: Good EndpointsResource response callback executed
    ack_test.go:183: Bad ListenerResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+3.797923ms)
    ack_test.go:53: Received ListenerResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: ListenerResource, version: 1001, nonce: 1629140087341523000, reason: error parsing "LDS" response: top level errors: unexpected resource type: ""   (t=+3.850151ms)
    ack_test.go:187: Bad ListenerResource response nacked
    ack_test.go:183: Bad RouteConfigResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.RouteConfiguration  (t=+4.039257ms)
    ack_test.go:53: Received RouteConfigResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: RouteConfigResource, version: 2001, nonce: 1629140087341804000, reason: error parsing "RDS" response: top level errors: unexpected resource type: ""   (t=+4.073591ms)
    ack_test.go:187: Bad RouteConfigResource response nacked
    ack_test.go:183: Bad ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+4.243562ms)
    ack_test.go:53: Received ClusterResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: ClusterResource, version: 3001, nonce: 1629140087342001000, reason: error parsing "CDS" response: top level errors: unexpected resource type: ""   (t=+4.288319ms)
    ack_test.go:187: Bad ClusterResource response nacked
    ack_test.go:183: Bad EndpointsResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.ClusterLoadAssignment  (t=+4.450772ms)
    ack_test.go:53: Received EndpointsResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: EndpointsResource, version: 4001, nonce: 1629140087342217000, reason: error parsing "EDS" response: top level errors: unexpected resource type: ""   (t=+4.490292ms)
    ack_test.go:187: Bad EndpointsResource response nacked
    ack_test.go:149: Good ListenerResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+4.663363ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+4.769987ms)
    ack_test.go:53: Received ListenerResource callback with {map[lds.target.good:1111:{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: 1002, nonce: 1629140087342422000  (t=+4.826802ms)
    ack_test.go:154: Good ListenerResource response acked
    ack_test.go:159: Good ListenerResource response callback executed
    ack_test.go:149: Good RouteConfigResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.RouteConfiguration  (t=+4.988381ms)
    tlogger.go:99: xds.go:298 Resource with name: GoodRouteConfig1, type: *envoy_config_route_v3.RouteConfiguration, contains: {
          "name": "GoodRouteConfig1",
          "virtualHosts": [
            {
              "domains": [
                "uninteresting.domain"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "UninterestingClusterName"
                  }
                }
              ]
            },
            {
              "domains": [
                "lds.target.good:1111"
              ],
              "routes": [
                {
                  "match": {
                    "prefix": ""
                  },
                  "route": {
                    "cluster": "GoodClusterName1"
                  }
                }
              ]
            }
          ]
        }.  (t=+5.111647ms)
    ack_test.go:53: Received RouteConfigResource callback with {map[GoodRouteConfig1:{VirtualHosts:[0xc000657c00 0xc000657c40] Raw:[type.googleapis.com/envoy.api.v2.RouteConfiguration]:{name:"GoodRouteConfig1"  virtual_hosts:{domains:"uninteresting.domain"  routes:{match:{prefix:""}  route:{cluster:"UninterestingClusterName"}}}  virtual_hosts:{domains:"lds.target.good:1111"  routes:{match:{prefix:""}  route:{cluster:"GoodClusterName1"}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: RouteConfigResource, version: 2002, nonce: 1629140087342757000  (t=+5.182071ms)
    ack_test.go:154: Good RouteConfigResource response acked
    ack_test.go:159: Good RouteConfigResource response callback executed
    ack_test.go:149: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+5.349836ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+5.434183ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3002, nonce: 1629140087343113000  (t=+5.485016ms)
    ack_test.go:154: Good ClusterResource response acked
    ack_test.go:159: Good ClusterResource response callback executed
    ack_test.go:149: Good EndpointsResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.ClusterLoadAssignment  (t=+5.697819ms)
    tlogger.go:99: xds.go:796 Resource with name: GoodClusterAssignment1, type: *envoy_config_endpoint_v3.ClusterLoadAssignment, contains: {
          "clusterName": "GoodClusterAssignment1",
          "endpoints": [
            {
              "locality": {
                "subZone": "locality-1"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr1",
                        "portValue": 314
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1,
              "priority": 1
            },
            {
              "locality": {
                "subZone": "locality-2"
              },
              "lbEndpoints": [
                {
                  "endpoint": {
                    "address": {
                      "socketAddress": {
                        "address": "addr2",
                        "portValue": 159
                      }
                    }
                  }
                }
              ],
              "loadBalancingWeight": 1
            }
          ],
          "policy": {
        
          }
        }  (t=+5.809399ms)
    ack_test.go:53: Received EndpointsResource callback with {map[GoodClusterAssignment1:{Drops:[] Localities:[{Endpoints:[{Address:addr1:314 HealthStatus:0 Weight:0}] ID:{Region: Zone: SubZone:locality-1} Priority:1 Weight:1} {Endpoints:[{Address:addr2:159 HealthStatus:0 Weight:0}] ID:{Region: Zone: SubZone:locality-2} Priority:0 Weight:1}] Raw:[type.googleapis.com/envoy.api.v2.ClusterLoadAssignment]:{cluster_name:"GoodClusterAssignment1"  endpoints:{locality:{sub_zone:"locality-1"}  lb_endpoints:{endpoint:{address:{socket_address:{address:"addr1"  port_value:314}}}}  load_balancing_weight:{value:1}  priority:1}  endpoints:{locality:{sub_zone:"locality-2"}  lb_endpoints:{endpoint:{address:{socket_address:{address:"addr2"  port_value:159}}}}  load_balancing_weight:{value:1}}  policy:{}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: EndpointsResource, version: 4002, nonce: 1629140087343445000  (t=+5.880196ms)
    ack_test.go:154: Good EndpointsResource response acked
    ack_test.go:159: Good EndpointsResource response callback executed
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+6.11065ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+6.13108ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+6.158947ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+6.186924ms)
=== RUN   Test/V2ClientAckCancelResponseRace
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+516.543µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+539.364µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62081  <nil> 0 <nil>}] <nil> <nil>}  (t=+560.391µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+581.212µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+592.891µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+617.34µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62081" to connect  (t=+630.161µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+644.198µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+890.063µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+907.862µs)
    ack_test.go:77: Started xds client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+958.447µs)
    ack_test.go:428: FakeServer received ClusterResource request...
    ack_test.go:149: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+1.192394ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+1.299777ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3000, nonce: 1629140087345352000  (t=+1.354934ms)
    ack_test.go:154: Good ClusterResource response acked
    ack_test.go:159: Good ClusterResource response callback executed
    ack_test.go:454: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+11.861597ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+11.946883ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3001, nonce: 1629140087356015000  (t=+12.003735ms)
    ack_test.go:183: Bad ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+22.175852ms)
    ack_test.go:53: Received ClusterResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: ClusterResource, version: 3001, nonce: 1629140087366349000, reason: error parsing "CDS" response: top level errors: unexpected resource type: ""   (t=+22.230657ms)
    ack_test.go:187: Bad ClusterResource response nacked
    ack_test.go:149: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+22.403323ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+22.504205ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3002, nonce: 1629140087366591000  (t=+22.557788ms)
    ack_test.go:154: Good ClusterResource response acked
    ack_test.go:159: Good ClusterResource response callback executed
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+22.739371ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+22.755265ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+22.781577ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+22.796587ms)
=== RUN   Test/V2ClientAckFirstIsNack
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+478.666µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+495.464µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62083  <nil> 0 <nil>}] <nil> <nil>}  (t=+509.966µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+521.772µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+530.9µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+551.689µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62083" to connect  (t=+563.534µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+573.888µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+805.315µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+819.944µs)
    ack_test.go:77: Started xds client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+870.889µs)
    ack_test.go:139: FakeServer received ListenerResource request...
    ack_test.go:292: Bad response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.083112ms)
    ack_test.go:53: Received ListenerResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: ListenerResource, version: 1000, nonce: 1629140087368308000, reason: error parsing "LDS" response: top level errors: unexpected resource type: ""   (t=+1.131949ms)
    ack_test.go:299: Bad response nacked
    ack_test.go:149: Good ListenerResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.304895ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+1.414445ms)
    ack_test.go:53: Received ListenerResource callback with {map[lds.target.good:1111:{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: 1001, nonce: 1629140087368549000  (t=+1.470116ms)
    ack_test.go:154: Good ListenerResource response acked
    ack_test.go:159: Good ListenerResource response callback executed
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.625659ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.641182ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.664803ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.673633ms)
=== RUN   Test/V2ClientAckNackAfterNewWatch
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+679.681µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+696.963µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62085  <nil> 0 <nil>}] <nil> <nil>}  (t=+712.031µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+722.129µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+730.983µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+751.096µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62085" to connect  (t=+760.28µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+774.326µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+992.254µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.010604ms)
    ack_test.go:77: Started xds client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.062358ms)
    ack_test.go:139: FakeServer received ListenerResource request...
    ack_test.go:149: Good ListenerResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.274609ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+1.373559ms)
    ack_test.go:53: Received ListenerResource callback with {map[lds.target.good:1111:{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: 1000, nonce: 1629140087370650000  (t=+1.436474ms)
    ack_test.go:154: Good ListenerResource response acked
    ack_test.go:159: Good ListenerResource response callback executed
    ack_test.go:139: FakeServer received ListenerResource request...
    ack_test.go:336: Bad response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.719085ms)
    ack_test.go:53: Received ListenerResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: ListenerResource, version: 1001, nonce: 1629140087371109000, reason: error parsing "LDS" response: top level errors: unexpected resource type: ""   (t=+1.764572ms)
    ack_test.go:342: Bad response nacked
    ack_test.go:149: Good ListenerResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.932494ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+2.008206ms)
    ack_test.go:53: Received ListenerResource callback with {map[lds.target.good:1111:{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: 1002, nonce: 1629140087371319000  (t=+2.06108ms)
    ack_test.go:154: Good ListenerResource response acked
    ack_test.go:159: Good ListenerResource response callback executed
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+2.222369ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+2.237228ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+2.266545ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+2.268947ms)
=== RUN   Test/V2ClientAckNewWatchAfterCancel
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+376.102µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+391.73µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62087  <nil> 0 <nil>}] <nil> <nil>}  (t=+405.659µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+415.328µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+424.447µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+443.91µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62087" to connect  (t=+455.059µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+467.877µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+660.391µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+679.138µs)
    ack_test.go:77: Started xds client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+722.705µs)
    ack_test.go:370: FakeServer received ClusterResource request...
    ack_test.go:149: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+921.227µs)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+1.027558ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3000, nonce: 1629140087372784000  (t=+1.084561ms)
    ack_test.go:154: Good ClusterResource response acked
    ack_test.go:159: Good ClusterResource response callback executed
    ack_test.go:183: Bad ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+1.435936ms)
    ack_test.go:53: Received ClusterResource callback with {map[]}
    tlogger.go:99: transport_helper.go:331 Sending NACK for response type: ClusterResource, version: 3001, nonce: 1629140087373321000, reason: error parsing "CDS" response: top level errors: unexpected resource type: ""   (t=+1.472659ms)
    ack_test.go:187: Bad ClusterResource response nacked
    ack_test.go:149: Good ClusterResource response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Cluster  (t=+1.628886ms)
    tlogger.go:99: xds.go:567 Resource with name: GoodClusterName1, type: *envoy_config_cluster_v3.Cluster, contains: {
          "name": "GoodClusterName1",
          "type": "EDS",
          "edsClusterConfig": {
            "edsConfig": {
              "ads": {
        
              }
            },
            "serviceName": "foo-service"
          },
          "lrsServer": {
            "self": {
        
            }
          }
        }  (t=+1.698091ms)
    ack_test.go:53: Received ClusterResource callback with {map[GoodClusterName1:{ClusterType:0 ClusterName:GoodClusterName1 EDSServiceName:foo-service EnableLRS:true SecurityCfg:<nil> MaxRequests:<nil> DNSHostName: PrioritizedClusterNames:[] Raw:[type.googleapis.com/envoy.api.v2.Cluster]:{name:"GoodClusterName1"  type:EDS  eds_cluster_config:{eds_config:{ads:{}}  service_name:"foo-service"}  lrs_server:{self:{}}}}]}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ClusterResource, version: 3002, nonce: 1629140087373513000  (t=+1.745312ms)
    ack_test.go:154: Good ClusterResource response acked
    ack_test.go:159: Good ClusterResource response callback executed
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.896844ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.913416ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.936708ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.949683ms)
=== RUN   Test/V2ClientBackoffAfterRecvError
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+349.206µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+364.686µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62089  <nil> 0 <nil>}] <nil> <nil>}  (t=+379.234µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+388.554µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+396.922µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+414.885µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62089" to connect  (t=+425.345µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+437.336µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+615.083µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+633.211µs)
    client_test.go:518: Started xds v2Client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+682.09µs)
    client_test.go:526: FakeServer received request...
    client_test.go:529: Bad LDS response pushed to fakeServer...
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unknown desc = RPC error  (t=+840.125µs)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+858.575µs)
    client_test.go:537: v2Client backed off before retrying...
    client_test.go:545: FakeServer received request after backoff...
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+981.912µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+997.874µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.022503ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.036422ms)
=== RUN   Test/V2ClientRetriesAfterBrokenStream
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: ""  (t=+765.551µs)
    tlogger.go:99: clientconn.go:258 [core] scheme "" not registered, fallback to default scheme  (t=+783.013µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62091  <nil> 0 <nil>}] <nil> <nil>}  (t=+796.734µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+806.849µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+816.024µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+835.828µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62091" to connect  (t=+845.177µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+877.408µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.045822ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.063974ms)
    client_test.go:570: Started xds v2Client...
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.114507ms)
    client_test.go:578: FakeServer received request...
    client_test.go:581: Good LDS response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.296001ms)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+1.3879ms)
    client_test.go:560: Received LDS callback with ldsUpdate {{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: , nonce:   (t=+1.445197ms)
    client_test.go:593: Bad LDS response pushed to fakeServer...
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unknown desc = RPC error  (t=+1.578013ms)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.59555ms)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.713378ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.736479ms)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Unavailable desc = error reading from server: EOF  (t=+1.769233ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.77158ms)
=== RUN   Test/V2ClientWatchWithoutStream
    tlogger.go:99: clientconn.go:252 [core] parsed scheme: "xds_client_test_whatever"  (t=+353.975µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{no.such.server  <nil> 0 <nil>}] <nil> <nil>}  (t=+373.313µs)
    tlogger.go:99: clientconn.go:728 [core] ClientConn switching balancer to "pick_first"  (t=+384.964µs)
    tlogger.go:99: clientconn.go:748 [core] Channel switches to new LB policy "pick_first"  (t=+393.897µs)
    client_test.go:642: Started xds v2Client...
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+418.407µs)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "no.such.server" to connect  (t=+434.324µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+442.954µs)
    tlogger.go:99: clientconn.go:1320 [core] grpc: addrConn.createTransport failed to connect to {no.such.server whatever <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp: address no.such.server: missing port in address"  (t=+462.883µs)
    tlogger.go:99: picker_wrapper.go:161 [core] blockingPicker: the picked transport is not ready, loop back to repick  (t=+472.114µs)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to TRANSIENT_FAILURE  (t=+475.333µs)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to TRANSIENT_FAILURE  (t=+500.656µs)
    tlogger.go:99: resolver_conn_wrapper.go:100 [core] ccResolverWrapper: sending update to cc: {[{127.0.0.1:62093  <nil> 0 <nil>}] <nil> <nil>}  (t=+10.473288ms)
    tlogger.go:99: clientconn.go:890 [core] addrConn: tryUpdateAddrs curAddr: {  <nil> 0 <nil>}, addrs: [{127.0.0.1:62093  <nil> 0 <nil>}]  (t=+10.508066ms)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to IDLE  (t=+1.002050592s)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to IDLE  (t=+1.002120156s)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to CONNECTING  (t=+1.002180691s)
    tlogger.go:99: clientconn.go:1253 [core] Subchannel picks a new address "127.0.0.1:62093" to connect  (t=+1.002217682s)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to CONNECTING  (t=+1.002347132s)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to READY  (t=+1.00303339s)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to READY  (t=+1.003129566s)
    tlogger.go:99: transport_helper.go:208 ADS stream created  (t=+1.003193006s)
    client_test.go:666: FakeServer received request...
    client_test.go:669: Good LDS response pushed to fakeServer...
    tlogger.go:99: client.go:146 ADS response received, type: type.googleapis.com/envoy.api.v2.Listener  (t=+1.003936327s)
    tlogger.go:99: xds.go:76 Resource with name: lds.target.good:1111, type: *envoy_config_listener_v3.Listener, contains: {
          "name": "lds.target.good:1111",
          "apiListener": {
            "apiListener": {
              "@type": "type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager",
              "rds": {
                "configSource": {
                  "ads": {
        
                  }
                },
                "routeConfigName": "GoodRouteConfig1"
              }
            }
          }
        }  (t=+1.004301035s)
    client_test.go:632: Received LDS callback with ldsUpdate {{RouteConfigName:GoodRouteConfig1 InlineRouteConfig:<nil> MaxStreamDuration:0s HTTPFilters:[] InboundListenerCfg:<nil> Raw:[type.googleapis.com/envoy.api.v2.Listener]:{name:"lds.target.good:1111"  api_listener:{api_listener:{[type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager]:{rds:{config_source:{ads:{}}  route_config_name:"GoodRouteConfig1"}}}}}}}
    tlogger.go:99: transport_helper.go:340 Sending ACK for response type: ListenerResource, version: , nonce:   (t=+1.004482421s)
    tlogger.go:99: clientconn.go:436 [core] Channel Connectivity change to SHUTDOWN  (t=+1.00459306s)
    tlogger.go:99: clientconn.go:1142 [core] Subchannel Connectivity change to SHUTDOWN  (t=+1.004659418s)
    tlogger.go:99: transport_helper.go:315 ADS stream is closed with error: xds: stream.Recv() failed: rpc error: code = Canceled desc = grpc: the client connection is closing  (t=+1.004858027s)
--- PASS: Test (1.14s)
    --- PASS: Test/CDSHandleResponse (0.01s)
        --- PASS: Test/CDSHandleResponse/badly-marshaled-response (0.00s)
        --- PASS: Test/CDSHandleResponse/no-cluster-proto-in-response (0.00s)
        --- PASS: Test/CDSHandleResponse/no-cluster (0.00s)
        --- PASS: Test/CDSHandleResponse/one-uninteresting-cluster (0.00s)
        --- PASS: Test/CDSHandleResponse/one-good-cluster (0.00s)
    --- PASS: Test/CDSHandleResponseWithoutWatch (0.05s)
    --- PASS: Test/EDSHandleResponse (0.01s)
        --- PASS: Test/EDSHandleResponse/badly-marshaled_response (0.00s)
        --- PASS: Test/EDSHandleResponse/no-config-in-response (0.00s)
        --- PASS: Test/EDSHandleResponse/one-uninterestring-assignment (0.00s)
        --- PASS: Test/EDSHandleResponse/one-good-assignment (0.00s)
    --- PASS: Test/EDSHandleResponseWithoutWatch (0.00s)
    --- PASS: Test/LDSHandleResponse (0.01s)
        --- PASS: Test/LDSHandleResponse/badly-marshaled-response (0.00s)
        --- PASS: Test/LDSHandleResponse/no-listener-proto-in-response (0.00s)
        --- PASS: Test/LDSHandleResponse/no-apiListener-in-response (0.00s)
        --- PASS: Test/LDSHandleResponse/one-good-listener (0.00s)
        --- PASS: Test/LDSHandleResponse/multiple-good-listener (0.00s)
        --- PASS: Test/LDSHandleResponse/good-bad-ugly-listeners (0.00s)
        --- PASS: Test/LDSHandleResponse/one-uninteresting-listener (0.00s)
        --- PASS: Test/LDSHandleResponse/empty-response (0.00s)
    --- PASS: Test/LDSHandleResponseWithoutWatch (0.00s)
    --- PASS: Test/RDSHandleResponseWithRouting (0.01s)
        --- PASS: Test/RDSHandleResponseWithRouting/badly-marshaled-response (0.00s)
        --- PASS: Test/RDSHandleResponseWithRouting/no-route-config-in-response (0.00s)
        --- PASS: Test/RDSHandleResponseWithRouting/no-virtual-hosts-in-response (0.00s)
        --- PASS: Test/RDSHandleResponseWithRouting/one-uninteresting-route-config (0.00s)
        --- PASS: Test/RDSHandleResponseWithRouting/one-good-route-config (0.00s)
    --- PASS: Test/RDSHandleResponseWithoutRDSWatch (0.00s)
    --- PASS: Test/V2ClientAck (0.01s)
    --- PASS: Test/V2ClientAckCancelResponseRace (0.02s)
    --- PASS: Test/V2ClientAckFirstIsNack (0.00s)
    --- PASS: Test/V2ClientAckNackAfterNewWatch (0.00s)
    --- PASS: Test/V2ClientAckNewWatchAfterCancel (0.00s)
    --- PASS: Test/V2ClientBackoffAfterRecvError (0.00s)
    --- PASS: Test/V2ClientRetriesAfterBrokenStream (0.00s)
    --- PASS: Test/V2ClientWatchWithoutStream (1.01s)
PASS
ok  	google.golang.org/grpc/xds/internal/xdsclient/v2	(cached)
?   	google.golang.org/grpc/xds/internal/xdsclient/v3	[no test files]
FAIL
