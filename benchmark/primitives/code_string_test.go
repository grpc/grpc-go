package primitives_test

import (
	"strconv"
	"testing"

	"google.golang.org/grpc/codes"
)

type codeGenerated uint32

const (
	OK codeGenerated = iota
	Canceled
	Unknown
	InvalidArgument
	DeadlineExceeded
	NotFound
	AlreadyExists
	PermissionDenied
	ResourceExhausted
	FailedPrecondition
	Aborted
	OutOfRange
	Unimplemented
	Internal
	Unavailable
	DataLoss
	Unauthenticated
)

// The following String() function was generated by stringer.
const _Code_name = "OKCanceledUnknownInvalidArgumentDeadlineExceededNotFoundAlreadyExistsPermissionDeniedResourceExhaustedFailedPreconditionAbortedOutOfRangeUnimplementedInternalUnavailableDataLossUnauthenticated"

var _Code_index = [...]uint8{0, 2, 10, 17, 32, 48, 56, 69, 85, 102, 120, 127, 137, 150, 158, 169, 177, 192}

func (i codeGenerated) String() string {
	if i >= codeGenerated(len(_Code_index)-1) {
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Code_name[_Code_index[i]:_Code_index[i+1]]
}

func BenchmarkCodeStringGenerated(b *testing.B) {
	x := 0
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		c := codeGenerated(uint32(x % 17))
		c.String()
		x++
	}
	b.StopTimer()
}

// codes.Code.String() does a switch.
func BenchmarkCodeStringSwitch(b *testing.B) {
	x := 0
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		c := codes.Code(uint32(x % 17))
		c.String()
		x++
	}
	b.StopTimer()
}

// Testing all codes (0<=c<=16) and also one overflow (17).
func BenchmarkCodeStringGeneratedWithOverflow(b *testing.B) {
	x := 0
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		c := codeGenerated(uint32(x % 18))
		c.String()
		x++
	}
	b.StopTimer()
}

// Testing all codes (0<=c<=16) and also one overflow (17).
func BenchmarkCodeStringSwitchWithOverflow(b *testing.B) {
	x := 0
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		c := codes.Code(uint32(x % 18))
		c.String()
		x++
	}
	b.StopTimer()
}
